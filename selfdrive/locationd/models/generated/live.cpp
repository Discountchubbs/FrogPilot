#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7931034220483172819) {
   out_7931034220483172819[0] = 0;
   out_7931034220483172819[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7931034220483172819[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7931034220483172819[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7931034220483172819[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7931034220483172819[5] = -sin(in_vec[1]);
   out_7931034220483172819[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7931034220483172819[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7931034220483172819[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7931034220483172819[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7931034220483172819[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7931034220483172819[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7931034220483172819[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7931034220483172819[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7931034220483172819[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7931034220483172819[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7931034220483172819[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7931034220483172819[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7889675508931366809) {
   out_7889675508931366809[0] = delta_x[0] + nom_x[0];
   out_7889675508931366809[1] = delta_x[1] + nom_x[1];
   out_7889675508931366809[2] = delta_x[2] + nom_x[2];
   out_7889675508931366809[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7889675508931366809[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7889675508931366809[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7889675508931366809[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7889675508931366809[7] = delta_x[6] + nom_x[7];
   out_7889675508931366809[8] = delta_x[7] + nom_x[8];
   out_7889675508931366809[9] = delta_x[8] + nom_x[9];
   out_7889675508931366809[10] = delta_x[9] + nom_x[10];
   out_7889675508931366809[11] = delta_x[10] + nom_x[11];
   out_7889675508931366809[12] = delta_x[11] + nom_x[12];
   out_7889675508931366809[13] = delta_x[12] + nom_x[13];
   out_7889675508931366809[14] = delta_x[13] + nom_x[14];
   out_7889675508931366809[15] = delta_x[14] + nom_x[15];
   out_7889675508931366809[16] = delta_x[15] + nom_x[16];
   out_7889675508931366809[17] = delta_x[16] + nom_x[17];
   out_7889675508931366809[18] = delta_x[17] + nom_x[18];
   out_7889675508931366809[19] = delta_x[18] + nom_x[19];
   out_7889675508931366809[20] = delta_x[19] + nom_x[20];
   out_7889675508931366809[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1722176044304643195) {
   out_1722176044304643195[0] = -nom_x[0] + true_x[0];
   out_1722176044304643195[1] = -nom_x[1] + true_x[1];
   out_1722176044304643195[2] = -nom_x[2] + true_x[2];
   out_1722176044304643195[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1722176044304643195[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1722176044304643195[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1722176044304643195[6] = -nom_x[7] + true_x[7];
   out_1722176044304643195[7] = -nom_x[8] + true_x[8];
   out_1722176044304643195[8] = -nom_x[9] + true_x[9];
   out_1722176044304643195[9] = -nom_x[10] + true_x[10];
   out_1722176044304643195[10] = -nom_x[11] + true_x[11];
   out_1722176044304643195[11] = -nom_x[12] + true_x[12];
   out_1722176044304643195[12] = -nom_x[13] + true_x[13];
   out_1722176044304643195[13] = -nom_x[14] + true_x[14];
   out_1722176044304643195[14] = -nom_x[15] + true_x[15];
   out_1722176044304643195[15] = -nom_x[16] + true_x[16];
   out_1722176044304643195[16] = -nom_x[17] + true_x[17];
   out_1722176044304643195[17] = -nom_x[18] + true_x[18];
   out_1722176044304643195[18] = -nom_x[19] + true_x[19];
   out_1722176044304643195[19] = -nom_x[20] + true_x[20];
   out_1722176044304643195[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_256698206982389921) {
   out_256698206982389921[0] = 1.0;
   out_256698206982389921[1] = 0;
   out_256698206982389921[2] = 0;
   out_256698206982389921[3] = 0;
   out_256698206982389921[4] = 0;
   out_256698206982389921[5] = 0;
   out_256698206982389921[6] = 0;
   out_256698206982389921[7] = 0;
   out_256698206982389921[8] = 0;
   out_256698206982389921[9] = 0;
   out_256698206982389921[10] = 0;
   out_256698206982389921[11] = 0;
   out_256698206982389921[12] = 0;
   out_256698206982389921[13] = 0;
   out_256698206982389921[14] = 0;
   out_256698206982389921[15] = 0;
   out_256698206982389921[16] = 0;
   out_256698206982389921[17] = 0;
   out_256698206982389921[18] = 0;
   out_256698206982389921[19] = 0;
   out_256698206982389921[20] = 0;
   out_256698206982389921[21] = 0;
   out_256698206982389921[22] = 1.0;
   out_256698206982389921[23] = 0;
   out_256698206982389921[24] = 0;
   out_256698206982389921[25] = 0;
   out_256698206982389921[26] = 0;
   out_256698206982389921[27] = 0;
   out_256698206982389921[28] = 0;
   out_256698206982389921[29] = 0;
   out_256698206982389921[30] = 0;
   out_256698206982389921[31] = 0;
   out_256698206982389921[32] = 0;
   out_256698206982389921[33] = 0;
   out_256698206982389921[34] = 0;
   out_256698206982389921[35] = 0;
   out_256698206982389921[36] = 0;
   out_256698206982389921[37] = 0;
   out_256698206982389921[38] = 0;
   out_256698206982389921[39] = 0;
   out_256698206982389921[40] = 0;
   out_256698206982389921[41] = 0;
   out_256698206982389921[42] = 0;
   out_256698206982389921[43] = 0;
   out_256698206982389921[44] = 1.0;
   out_256698206982389921[45] = 0;
   out_256698206982389921[46] = 0;
   out_256698206982389921[47] = 0;
   out_256698206982389921[48] = 0;
   out_256698206982389921[49] = 0;
   out_256698206982389921[50] = 0;
   out_256698206982389921[51] = 0;
   out_256698206982389921[52] = 0;
   out_256698206982389921[53] = 0;
   out_256698206982389921[54] = 0;
   out_256698206982389921[55] = 0;
   out_256698206982389921[56] = 0;
   out_256698206982389921[57] = 0;
   out_256698206982389921[58] = 0;
   out_256698206982389921[59] = 0;
   out_256698206982389921[60] = 0;
   out_256698206982389921[61] = 0;
   out_256698206982389921[62] = 0;
   out_256698206982389921[63] = 0;
   out_256698206982389921[64] = 0;
   out_256698206982389921[65] = 0;
   out_256698206982389921[66] = -0.5*state[4];
   out_256698206982389921[67] = -0.5*state[5];
   out_256698206982389921[68] = -0.5*state[6];
   out_256698206982389921[69] = 0;
   out_256698206982389921[70] = 0;
   out_256698206982389921[71] = 0;
   out_256698206982389921[72] = 0;
   out_256698206982389921[73] = 0;
   out_256698206982389921[74] = 0;
   out_256698206982389921[75] = 0;
   out_256698206982389921[76] = 0;
   out_256698206982389921[77] = 0;
   out_256698206982389921[78] = 0;
   out_256698206982389921[79] = 0;
   out_256698206982389921[80] = 0;
   out_256698206982389921[81] = 0;
   out_256698206982389921[82] = 0;
   out_256698206982389921[83] = 0;
   out_256698206982389921[84] = 0;
   out_256698206982389921[85] = 0;
   out_256698206982389921[86] = 0;
   out_256698206982389921[87] = 0.5*state[3];
   out_256698206982389921[88] = 0.5*state[6];
   out_256698206982389921[89] = -0.5*state[5];
   out_256698206982389921[90] = 0;
   out_256698206982389921[91] = 0;
   out_256698206982389921[92] = 0;
   out_256698206982389921[93] = 0;
   out_256698206982389921[94] = 0;
   out_256698206982389921[95] = 0;
   out_256698206982389921[96] = 0;
   out_256698206982389921[97] = 0;
   out_256698206982389921[98] = 0;
   out_256698206982389921[99] = 0;
   out_256698206982389921[100] = 0;
   out_256698206982389921[101] = 0;
   out_256698206982389921[102] = 0;
   out_256698206982389921[103] = 0;
   out_256698206982389921[104] = 0;
   out_256698206982389921[105] = 0;
   out_256698206982389921[106] = 0;
   out_256698206982389921[107] = 0;
   out_256698206982389921[108] = -0.5*state[6];
   out_256698206982389921[109] = 0.5*state[3];
   out_256698206982389921[110] = 0.5*state[4];
   out_256698206982389921[111] = 0;
   out_256698206982389921[112] = 0;
   out_256698206982389921[113] = 0;
   out_256698206982389921[114] = 0;
   out_256698206982389921[115] = 0;
   out_256698206982389921[116] = 0;
   out_256698206982389921[117] = 0;
   out_256698206982389921[118] = 0;
   out_256698206982389921[119] = 0;
   out_256698206982389921[120] = 0;
   out_256698206982389921[121] = 0;
   out_256698206982389921[122] = 0;
   out_256698206982389921[123] = 0;
   out_256698206982389921[124] = 0;
   out_256698206982389921[125] = 0;
   out_256698206982389921[126] = 0;
   out_256698206982389921[127] = 0;
   out_256698206982389921[128] = 0;
   out_256698206982389921[129] = 0.5*state[5];
   out_256698206982389921[130] = -0.5*state[4];
   out_256698206982389921[131] = 0.5*state[3];
   out_256698206982389921[132] = 0;
   out_256698206982389921[133] = 0;
   out_256698206982389921[134] = 0;
   out_256698206982389921[135] = 0;
   out_256698206982389921[136] = 0;
   out_256698206982389921[137] = 0;
   out_256698206982389921[138] = 0;
   out_256698206982389921[139] = 0;
   out_256698206982389921[140] = 0;
   out_256698206982389921[141] = 0;
   out_256698206982389921[142] = 0;
   out_256698206982389921[143] = 0;
   out_256698206982389921[144] = 0;
   out_256698206982389921[145] = 0;
   out_256698206982389921[146] = 0;
   out_256698206982389921[147] = 0;
   out_256698206982389921[148] = 0;
   out_256698206982389921[149] = 0;
   out_256698206982389921[150] = 0;
   out_256698206982389921[151] = 0;
   out_256698206982389921[152] = 0;
   out_256698206982389921[153] = 1.0;
   out_256698206982389921[154] = 0;
   out_256698206982389921[155] = 0;
   out_256698206982389921[156] = 0;
   out_256698206982389921[157] = 0;
   out_256698206982389921[158] = 0;
   out_256698206982389921[159] = 0;
   out_256698206982389921[160] = 0;
   out_256698206982389921[161] = 0;
   out_256698206982389921[162] = 0;
   out_256698206982389921[163] = 0;
   out_256698206982389921[164] = 0;
   out_256698206982389921[165] = 0;
   out_256698206982389921[166] = 0;
   out_256698206982389921[167] = 0;
   out_256698206982389921[168] = 0;
   out_256698206982389921[169] = 0;
   out_256698206982389921[170] = 0;
   out_256698206982389921[171] = 0;
   out_256698206982389921[172] = 0;
   out_256698206982389921[173] = 0;
   out_256698206982389921[174] = 0;
   out_256698206982389921[175] = 1.0;
   out_256698206982389921[176] = 0;
   out_256698206982389921[177] = 0;
   out_256698206982389921[178] = 0;
   out_256698206982389921[179] = 0;
   out_256698206982389921[180] = 0;
   out_256698206982389921[181] = 0;
   out_256698206982389921[182] = 0;
   out_256698206982389921[183] = 0;
   out_256698206982389921[184] = 0;
   out_256698206982389921[185] = 0;
   out_256698206982389921[186] = 0;
   out_256698206982389921[187] = 0;
   out_256698206982389921[188] = 0;
   out_256698206982389921[189] = 0;
   out_256698206982389921[190] = 0;
   out_256698206982389921[191] = 0;
   out_256698206982389921[192] = 0;
   out_256698206982389921[193] = 0;
   out_256698206982389921[194] = 0;
   out_256698206982389921[195] = 0;
   out_256698206982389921[196] = 0;
   out_256698206982389921[197] = 1.0;
   out_256698206982389921[198] = 0;
   out_256698206982389921[199] = 0;
   out_256698206982389921[200] = 0;
   out_256698206982389921[201] = 0;
   out_256698206982389921[202] = 0;
   out_256698206982389921[203] = 0;
   out_256698206982389921[204] = 0;
   out_256698206982389921[205] = 0;
   out_256698206982389921[206] = 0;
   out_256698206982389921[207] = 0;
   out_256698206982389921[208] = 0;
   out_256698206982389921[209] = 0;
   out_256698206982389921[210] = 0;
   out_256698206982389921[211] = 0;
   out_256698206982389921[212] = 0;
   out_256698206982389921[213] = 0;
   out_256698206982389921[214] = 0;
   out_256698206982389921[215] = 0;
   out_256698206982389921[216] = 0;
   out_256698206982389921[217] = 0;
   out_256698206982389921[218] = 0;
   out_256698206982389921[219] = 1.0;
   out_256698206982389921[220] = 0;
   out_256698206982389921[221] = 0;
   out_256698206982389921[222] = 0;
   out_256698206982389921[223] = 0;
   out_256698206982389921[224] = 0;
   out_256698206982389921[225] = 0;
   out_256698206982389921[226] = 0;
   out_256698206982389921[227] = 0;
   out_256698206982389921[228] = 0;
   out_256698206982389921[229] = 0;
   out_256698206982389921[230] = 0;
   out_256698206982389921[231] = 0;
   out_256698206982389921[232] = 0;
   out_256698206982389921[233] = 0;
   out_256698206982389921[234] = 0;
   out_256698206982389921[235] = 0;
   out_256698206982389921[236] = 0;
   out_256698206982389921[237] = 0;
   out_256698206982389921[238] = 0;
   out_256698206982389921[239] = 0;
   out_256698206982389921[240] = 0;
   out_256698206982389921[241] = 1.0;
   out_256698206982389921[242] = 0;
   out_256698206982389921[243] = 0;
   out_256698206982389921[244] = 0;
   out_256698206982389921[245] = 0;
   out_256698206982389921[246] = 0;
   out_256698206982389921[247] = 0;
   out_256698206982389921[248] = 0;
   out_256698206982389921[249] = 0;
   out_256698206982389921[250] = 0;
   out_256698206982389921[251] = 0;
   out_256698206982389921[252] = 0;
   out_256698206982389921[253] = 0;
   out_256698206982389921[254] = 0;
   out_256698206982389921[255] = 0;
   out_256698206982389921[256] = 0;
   out_256698206982389921[257] = 0;
   out_256698206982389921[258] = 0;
   out_256698206982389921[259] = 0;
   out_256698206982389921[260] = 0;
   out_256698206982389921[261] = 0;
   out_256698206982389921[262] = 0;
   out_256698206982389921[263] = 1.0;
   out_256698206982389921[264] = 0;
   out_256698206982389921[265] = 0;
   out_256698206982389921[266] = 0;
   out_256698206982389921[267] = 0;
   out_256698206982389921[268] = 0;
   out_256698206982389921[269] = 0;
   out_256698206982389921[270] = 0;
   out_256698206982389921[271] = 0;
   out_256698206982389921[272] = 0;
   out_256698206982389921[273] = 0;
   out_256698206982389921[274] = 0;
   out_256698206982389921[275] = 0;
   out_256698206982389921[276] = 0;
   out_256698206982389921[277] = 0;
   out_256698206982389921[278] = 0;
   out_256698206982389921[279] = 0;
   out_256698206982389921[280] = 0;
   out_256698206982389921[281] = 0;
   out_256698206982389921[282] = 0;
   out_256698206982389921[283] = 0;
   out_256698206982389921[284] = 0;
   out_256698206982389921[285] = 1.0;
   out_256698206982389921[286] = 0;
   out_256698206982389921[287] = 0;
   out_256698206982389921[288] = 0;
   out_256698206982389921[289] = 0;
   out_256698206982389921[290] = 0;
   out_256698206982389921[291] = 0;
   out_256698206982389921[292] = 0;
   out_256698206982389921[293] = 0;
   out_256698206982389921[294] = 0;
   out_256698206982389921[295] = 0;
   out_256698206982389921[296] = 0;
   out_256698206982389921[297] = 0;
   out_256698206982389921[298] = 0;
   out_256698206982389921[299] = 0;
   out_256698206982389921[300] = 0;
   out_256698206982389921[301] = 0;
   out_256698206982389921[302] = 0;
   out_256698206982389921[303] = 0;
   out_256698206982389921[304] = 0;
   out_256698206982389921[305] = 0;
   out_256698206982389921[306] = 0;
   out_256698206982389921[307] = 1.0;
   out_256698206982389921[308] = 0;
   out_256698206982389921[309] = 0;
   out_256698206982389921[310] = 0;
   out_256698206982389921[311] = 0;
   out_256698206982389921[312] = 0;
   out_256698206982389921[313] = 0;
   out_256698206982389921[314] = 0;
   out_256698206982389921[315] = 0;
   out_256698206982389921[316] = 0;
   out_256698206982389921[317] = 0;
   out_256698206982389921[318] = 0;
   out_256698206982389921[319] = 0;
   out_256698206982389921[320] = 0;
   out_256698206982389921[321] = 0;
   out_256698206982389921[322] = 0;
   out_256698206982389921[323] = 0;
   out_256698206982389921[324] = 0;
   out_256698206982389921[325] = 0;
   out_256698206982389921[326] = 0;
   out_256698206982389921[327] = 0;
   out_256698206982389921[328] = 0;
   out_256698206982389921[329] = 1.0;
   out_256698206982389921[330] = 0;
   out_256698206982389921[331] = 0;
   out_256698206982389921[332] = 0;
   out_256698206982389921[333] = 0;
   out_256698206982389921[334] = 0;
   out_256698206982389921[335] = 0;
   out_256698206982389921[336] = 0;
   out_256698206982389921[337] = 0;
   out_256698206982389921[338] = 0;
   out_256698206982389921[339] = 0;
   out_256698206982389921[340] = 0;
   out_256698206982389921[341] = 0;
   out_256698206982389921[342] = 0;
   out_256698206982389921[343] = 0;
   out_256698206982389921[344] = 0;
   out_256698206982389921[345] = 0;
   out_256698206982389921[346] = 0;
   out_256698206982389921[347] = 0;
   out_256698206982389921[348] = 0;
   out_256698206982389921[349] = 0;
   out_256698206982389921[350] = 0;
   out_256698206982389921[351] = 1.0;
   out_256698206982389921[352] = 0;
   out_256698206982389921[353] = 0;
   out_256698206982389921[354] = 0;
   out_256698206982389921[355] = 0;
   out_256698206982389921[356] = 0;
   out_256698206982389921[357] = 0;
   out_256698206982389921[358] = 0;
   out_256698206982389921[359] = 0;
   out_256698206982389921[360] = 0;
   out_256698206982389921[361] = 0;
   out_256698206982389921[362] = 0;
   out_256698206982389921[363] = 0;
   out_256698206982389921[364] = 0;
   out_256698206982389921[365] = 0;
   out_256698206982389921[366] = 0;
   out_256698206982389921[367] = 0;
   out_256698206982389921[368] = 0;
   out_256698206982389921[369] = 0;
   out_256698206982389921[370] = 0;
   out_256698206982389921[371] = 0;
   out_256698206982389921[372] = 0;
   out_256698206982389921[373] = 1.0;
   out_256698206982389921[374] = 0;
   out_256698206982389921[375] = 0;
   out_256698206982389921[376] = 0;
   out_256698206982389921[377] = 0;
   out_256698206982389921[378] = 0;
   out_256698206982389921[379] = 0;
   out_256698206982389921[380] = 0;
   out_256698206982389921[381] = 0;
   out_256698206982389921[382] = 0;
   out_256698206982389921[383] = 0;
   out_256698206982389921[384] = 0;
   out_256698206982389921[385] = 0;
   out_256698206982389921[386] = 0;
   out_256698206982389921[387] = 0;
   out_256698206982389921[388] = 0;
   out_256698206982389921[389] = 0;
   out_256698206982389921[390] = 0;
   out_256698206982389921[391] = 0;
   out_256698206982389921[392] = 0;
   out_256698206982389921[393] = 0;
   out_256698206982389921[394] = 0;
   out_256698206982389921[395] = 1.0;
   out_256698206982389921[396] = 0;
   out_256698206982389921[397] = 0;
   out_256698206982389921[398] = 0;
   out_256698206982389921[399] = 0;
   out_256698206982389921[400] = 0;
   out_256698206982389921[401] = 0;
   out_256698206982389921[402] = 0;
   out_256698206982389921[403] = 0;
   out_256698206982389921[404] = 0;
   out_256698206982389921[405] = 0;
   out_256698206982389921[406] = 0;
   out_256698206982389921[407] = 0;
   out_256698206982389921[408] = 0;
   out_256698206982389921[409] = 0;
   out_256698206982389921[410] = 0;
   out_256698206982389921[411] = 0;
   out_256698206982389921[412] = 0;
   out_256698206982389921[413] = 0;
   out_256698206982389921[414] = 0;
   out_256698206982389921[415] = 0;
   out_256698206982389921[416] = 0;
   out_256698206982389921[417] = 1.0;
   out_256698206982389921[418] = 0;
   out_256698206982389921[419] = 0;
   out_256698206982389921[420] = 0;
   out_256698206982389921[421] = 0;
   out_256698206982389921[422] = 0;
   out_256698206982389921[423] = 0;
   out_256698206982389921[424] = 0;
   out_256698206982389921[425] = 0;
   out_256698206982389921[426] = 0;
   out_256698206982389921[427] = 0;
   out_256698206982389921[428] = 0;
   out_256698206982389921[429] = 0;
   out_256698206982389921[430] = 0;
   out_256698206982389921[431] = 0;
   out_256698206982389921[432] = 0;
   out_256698206982389921[433] = 0;
   out_256698206982389921[434] = 0;
   out_256698206982389921[435] = 0;
   out_256698206982389921[436] = 0;
   out_256698206982389921[437] = 0;
   out_256698206982389921[438] = 0;
   out_256698206982389921[439] = 1.0;
   out_256698206982389921[440] = 0;
   out_256698206982389921[441] = 0;
   out_256698206982389921[442] = 0;
   out_256698206982389921[443] = 0;
   out_256698206982389921[444] = 0;
   out_256698206982389921[445] = 0;
   out_256698206982389921[446] = 0;
   out_256698206982389921[447] = 0;
   out_256698206982389921[448] = 0;
   out_256698206982389921[449] = 0;
   out_256698206982389921[450] = 0;
   out_256698206982389921[451] = 0;
   out_256698206982389921[452] = 0;
   out_256698206982389921[453] = 0;
   out_256698206982389921[454] = 0;
   out_256698206982389921[455] = 0;
   out_256698206982389921[456] = 0;
   out_256698206982389921[457] = 0;
   out_256698206982389921[458] = 0;
   out_256698206982389921[459] = 0;
   out_256698206982389921[460] = 0;
   out_256698206982389921[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6309503849853188204) {
   out_6309503849853188204[0] = dt*state[7] + state[0];
   out_6309503849853188204[1] = dt*state[8] + state[1];
   out_6309503849853188204[2] = dt*state[9] + state[2];
   out_6309503849853188204[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6309503849853188204[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6309503849853188204[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6309503849853188204[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6309503849853188204[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6309503849853188204[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6309503849853188204[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6309503849853188204[10] = state[10];
   out_6309503849853188204[11] = state[11];
   out_6309503849853188204[12] = state[12];
   out_6309503849853188204[13] = state[13];
   out_6309503849853188204[14] = state[14];
   out_6309503849853188204[15] = state[15];
   out_6309503849853188204[16] = state[16];
   out_6309503849853188204[17] = state[17];
   out_6309503849853188204[18] = state[18];
   out_6309503849853188204[19] = state[19];
   out_6309503849853188204[20] = state[20];
   out_6309503849853188204[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5723085591556290963) {
   out_5723085591556290963[0] = 1;
   out_5723085591556290963[1] = 0;
   out_5723085591556290963[2] = 0;
   out_5723085591556290963[3] = 0;
   out_5723085591556290963[4] = 0;
   out_5723085591556290963[5] = 0;
   out_5723085591556290963[6] = dt;
   out_5723085591556290963[7] = 0;
   out_5723085591556290963[8] = 0;
   out_5723085591556290963[9] = 0;
   out_5723085591556290963[10] = 0;
   out_5723085591556290963[11] = 0;
   out_5723085591556290963[12] = 0;
   out_5723085591556290963[13] = 0;
   out_5723085591556290963[14] = 0;
   out_5723085591556290963[15] = 0;
   out_5723085591556290963[16] = 0;
   out_5723085591556290963[17] = 0;
   out_5723085591556290963[18] = 0;
   out_5723085591556290963[19] = 0;
   out_5723085591556290963[20] = 0;
   out_5723085591556290963[21] = 0;
   out_5723085591556290963[22] = 1;
   out_5723085591556290963[23] = 0;
   out_5723085591556290963[24] = 0;
   out_5723085591556290963[25] = 0;
   out_5723085591556290963[26] = 0;
   out_5723085591556290963[27] = 0;
   out_5723085591556290963[28] = dt;
   out_5723085591556290963[29] = 0;
   out_5723085591556290963[30] = 0;
   out_5723085591556290963[31] = 0;
   out_5723085591556290963[32] = 0;
   out_5723085591556290963[33] = 0;
   out_5723085591556290963[34] = 0;
   out_5723085591556290963[35] = 0;
   out_5723085591556290963[36] = 0;
   out_5723085591556290963[37] = 0;
   out_5723085591556290963[38] = 0;
   out_5723085591556290963[39] = 0;
   out_5723085591556290963[40] = 0;
   out_5723085591556290963[41] = 0;
   out_5723085591556290963[42] = 0;
   out_5723085591556290963[43] = 0;
   out_5723085591556290963[44] = 1;
   out_5723085591556290963[45] = 0;
   out_5723085591556290963[46] = 0;
   out_5723085591556290963[47] = 0;
   out_5723085591556290963[48] = 0;
   out_5723085591556290963[49] = 0;
   out_5723085591556290963[50] = dt;
   out_5723085591556290963[51] = 0;
   out_5723085591556290963[52] = 0;
   out_5723085591556290963[53] = 0;
   out_5723085591556290963[54] = 0;
   out_5723085591556290963[55] = 0;
   out_5723085591556290963[56] = 0;
   out_5723085591556290963[57] = 0;
   out_5723085591556290963[58] = 0;
   out_5723085591556290963[59] = 0;
   out_5723085591556290963[60] = 0;
   out_5723085591556290963[61] = 0;
   out_5723085591556290963[62] = 0;
   out_5723085591556290963[63] = 0;
   out_5723085591556290963[64] = 0;
   out_5723085591556290963[65] = 0;
   out_5723085591556290963[66] = 1;
   out_5723085591556290963[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5723085591556290963[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5723085591556290963[69] = 0;
   out_5723085591556290963[70] = 0;
   out_5723085591556290963[71] = 0;
   out_5723085591556290963[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5723085591556290963[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5723085591556290963[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5723085591556290963[75] = 0;
   out_5723085591556290963[76] = 0;
   out_5723085591556290963[77] = 0;
   out_5723085591556290963[78] = 0;
   out_5723085591556290963[79] = 0;
   out_5723085591556290963[80] = 0;
   out_5723085591556290963[81] = 0;
   out_5723085591556290963[82] = 0;
   out_5723085591556290963[83] = 0;
   out_5723085591556290963[84] = 0;
   out_5723085591556290963[85] = 0;
   out_5723085591556290963[86] = 0;
   out_5723085591556290963[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5723085591556290963[88] = 1;
   out_5723085591556290963[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5723085591556290963[90] = 0;
   out_5723085591556290963[91] = 0;
   out_5723085591556290963[92] = 0;
   out_5723085591556290963[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5723085591556290963[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5723085591556290963[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5723085591556290963[96] = 0;
   out_5723085591556290963[97] = 0;
   out_5723085591556290963[98] = 0;
   out_5723085591556290963[99] = 0;
   out_5723085591556290963[100] = 0;
   out_5723085591556290963[101] = 0;
   out_5723085591556290963[102] = 0;
   out_5723085591556290963[103] = 0;
   out_5723085591556290963[104] = 0;
   out_5723085591556290963[105] = 0;
   out_5723085591556290963[106] = 0;
   out_5723085591556290963[107] = 0;
   out_5723085591556290963[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5723085591556290963[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5723085591556290963[110] = 1;
   out_5723085591556290963[111] = 0;
   out_5723085591556290963[112] = 0;
   out_5723085591556290963[113] = 0;
   out_5723085591556290963[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5723085591556290963[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5723085591556290963[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5723085591556290963[117] = 0;
   out_5723085591556290963[118] = 0;
   out_5723085591556290963[119] = 0;
   out_5723085591556290963[120] = 0;
   out_5723085591556290963[121] = 0;
   out_5723085591556290963[122] = 0;
   out_5723085591556290963[123] = 0;
   out_5723085591556290963[124] = 0;
   out_5723085591556290963[125] = 0;
   out_5723085591556290963[126] = 0;
   out_5723085591556290963[127] = 0;
   out_5723085591556290963[128] = 0;
   out_5723085591556290963[129] = 0;
   out_5723085591556290963[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5723085591556290963[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5723085591556290963[132] = 1;
   out_5723085591556290963[133] = 0;
   out_5723085591556290963[134] = 0;
   out_5723085591556290963[135] = 0;
   out_5723085591556290963[136] = 0;
   out_5723085591556290963[137] = 0;
   out_5723085591556290963[138] = 0;
   out_5723085591556290963[139] = 0;
   out_5723085591556290963[140] = 0;
   out_5723085591556290963[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5723085591556290963[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5723085591556290963[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5723085591556290963[144] = 0;
   out_5723085591556290963[145] = 0;
   out_5723085591556290963[146] = 0;
   out_5723085591556290963[147] = 0;
   out_5723085591556290963[148] = 0;
   out_5723085591556290963[149] = 0;
   out_5723085591556290963[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5723085591556290963[151] = 0;
   out_5723085591556290963[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5723085591556290963[153] = 0;
   out_5723085591556290963[154] = 1;
   out_5723085591556290963[155] = 0;
   out_5723085591556290963[156] = 0;
   out_5723085591556290963[157] = 0;
   out_5723085591556290963[158] = 0;
   out_5723085591556290963[159] = 0;
   out_5723085591556290963[160] = 0;
   out_5723085591556290963[161] = 0;
   out_5723085591556290963[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5723085591556290963[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5723085591556290963[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5723085591556290963[165] = 0;
   out_5723085591556290963[166] = 0;
   out_5723085591556290963[167] = 0;
   out_5723085591556290963[168] = 0;
   out_5723085591556290963[169] = 0;
   out_5723085591556290963[170] = 0;
   out_5723085591556290963[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5723085591556290963[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5723085591556290963[173] = 0;
   out_5723085591556290963[174] = 0;
   out_5723085591556290963[175] = 0;
   out_5723085591556290963[176] = 1;
   out_5723085591556290963[177] = 0;
   out_5723085591556290963[178] = 0;
   out_5723085591556290963[179] = 0;
   out_5723085591556290963[180] = 0;
   out_5723085591556290963[181] = 0;
   out_5723085591556290963[182] = 0;
   out_5723085591556290963[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5723085591556290963[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5723085591556290963[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5723085591556290963[186] = 0;
   out_5723085591556290963[187] = 0;
   out_5723085591556290963[188] = 0;
   out_5723085591556290963[189] = 0;
   out_5723085591556290963[190] = 0;
   out_5723085591556290963[191] = 0;
   out_5723085591556290963[192] = 0;
   out_5723085591556290963[193] = 0;
   out_5723085591556290963[194] = 0;
   out_5723085591556290963[195] = 0;
   out_5723085591556290963[196] = 0;
   out_5723085591556290963[197] = 0;
   out_5723085591556290963[198] = 1;
   out_5723085591556290963[199] = 0;
   out_5723085591556290963[200] = 0;
   out_5723085591556290963[201] = 0;
   out_5723085591556290963[202] = 0;
   out_5723085591556290963[203] = 0;
   out_5723085591556290963[204] = 0;
   out_5723085591556290963[205] = 0;
   out_5723085591556290963[206] = 0;
   out_5723085591556290963[207] = 0;
   out_5723085591556290963[208] = 0;
   out_5723085591556290963[209] = 0;
   out_5723085591556290963[210] = 0;
   out_5723085591556290963[211] = 0;
   out_5723085591556290963[212] = 0;
   out_5723085591556290963[213] = 0;
   out_5723085591556290963[214] = 0;
   out_5723085591556290963[215] = 0;
   out_5723085591556290963[216] = 0;
   out_5723085591556290963[217] = 0;
   out_5723085591556290963[218] = 0;
   out_5723085591556290963[219] = 0;
   out_5723085591556290963[220] = 1;
   out_5723085591556290963[221] = 0;
   out_5723085591556290963[222] = 0;
   out_5723085591556290963[223] = 0;
   out_5723085591556290963[224] = 0;
   out_5723085591556290963[225] = 0;
   out_5723085591556290963[226] = 0;
   out_5723085591556290963[227] = 0;
   out_5723085591556290963[228] = 0;
   out_5723085591556290963[229] = 0;
   out_5723085591556290963[230] = 0;
   out_5723085591556290963[231] = 0;
   out_5723085591556290963[232] = 0;
   out_5723085591556290963[233] = 0;
   out_5723085591556290963[234] = 0;
   out_5723085591556290963[235] = 0;
   out_5723085591556290963[236] = 0;
   out_5723085591556290963[237] = 0;
   out_5723085591556290963[238] = 0;
   out_5723085591556290963[239] = 0;
   out_5723085591556290963[240] = 0;
   out_5723085591556290963[241] = 0;
   out_5723085591556290963[242] = 1;
   out_5723085591556290963[243] = 0;
   out_5723085591556290963[244] = 0;
   out_5723085591556290963[245] = 0;
   out_5723085591556290963[246] = 0;
   out_5723085591556290963[247] = 0;
   out_5723085591556290963[248] = 0;
   out_5723085591556290963[249] = 0;
   out_5723085591556290963[250] = 0;
   out_5723085591556290963[251] = 0;
   out_5723085591556290963[252] = 0;
   out_5723085591556290963[253] = 0;
   out_5723085591556290963[254] = 0;
   out_5723085591556290963[255] = 0;
   out_5723085591556290963[256] = 0;
   out_5723085591556290963[257] = 0;
   out_5723085591556290963[258] = 0;
   out_5723085591556290963[259] = 0;
   out_5723085591556290963[260] = 0;
   out_5723085591556290963[261] = 0;
   out_5723085591556290963[262] = 0;
   out_5723085591556290963[263] = 0;
   out_5723085591556290963[264] = 1;
   out_5723085591556290963[265] = 0;
   out_5723085591556290963[266] = 0;
   out_5723085591556290963[267] = 0;
   out_5723085591556290963[268] = 0;
   out_5723085591556290963[269] = 0;
   out_5723085591556290963[270] = 0;
   out_5723085591556290963[271] = 0;
   out_5723085591556290963[272] = 0;
   out_5723085591556290963[273] = 0;
   out_5723085591556290963[274] = 0;
   out_5723085591556290963[275] = 0;
   out_5723085591556290963[276] = 0;
   out_5723085591556290963[277] = 0;
   out_5723085591556290963[278] = 0;
   out_5723085591556290963[279] = 0;
   out_5723085591556290963[280] = 0;
   out_5723085591556290963[281] = 0;
   out_5723085591556290963[282] = 0;
   out_5723085591556290963[283] = 0;
   out_5723085591556290963[284] = 0;
   out_5723085591556290963[285] = 0;
   out_5723085591556290963[286] = 1;
   out_5723085591556290963[287] = 0;
   out_5723085591556290963[288] = 0;
   out_5723085591556290963[289] = 0;
   out_5723085591556290963[290] = 0;
   out_5723085591556290963[291] = 0;
   out_5723085591556290963[292] = 0;
   out_5723085591556290963[293] = 0;
   out_5723085591556290963[294] = 0;
   out_5723085591556290963[295] = 0;
   out_5723085591556290963[296] = 0;
   out_5723085591556290963[297] = 0;
   out_5723085591556290963[298] = 0;
   out_5723085591556290963[299] = 0;
   out_5723085591556290963[300] = 0;
   out_5723085591556290963[301] = 0;
   out_5723085591556290963[302] = 0;
   out_5723085591556290963[303] = 0;
   out_5723085591556290963[304] = 0;
   out_5723085591556290963[305] = 0;
   out_5723085591556290963[306] = 0;
   out_5723085591556290963[307] = 0;
   out_5723085591556290963[308] = 1;
   out_5723085591556290963[309] = 0;
   out_5723085591556290963[310] = 0;
   out_5723085591556290963[311] = 0;
   out_5723085591556290963[312] = 0;
   out_5723085591556290963[313] = 0;
   out_5723085591556290963[314] = 0;
   out_5723085591556290963[315] = 0;
   out_5723085591556290963[316] = 0;
   out_5723085591556290963[317] = 0;
   out_5723085591556290963[318] = 0;
   out_5723085591556290963[319] = 0;
   out_5723085591556290963[320] = 0;
   out_5723085591556290963[321] = 0;
   out_5723085591556290963[322] = 0;
   out_5723085591556290963[323] = 0;
   out_5723085591556290963[324] = 0;
   out_5723085591556290963[325] = 0;
   out_5723085591556290963[326] = 0;
   out_5723085591556290963[327] = 0;
   out_5723085591556290963[328] = 0;
   out_5723085591556290963[329] = 0;
   out_5723085591556290963[330] = 1;
   out_5723085591556290963[331] = 0;
   out_5723085591556290963[332] = 0;
   out_5723085591556290963[333] = 0;
   out_5723085591556290963[334] = 0;
   out_5723085591556290963[335] = 0;
   out_5723085591556290963[336] = 0;
   out_5723085591556290963[337] = 0;
   out_5723085591556290963[338] = 0;
   out_5723085591556290963[339] = 0;
   out_5723085591556290963[340] = 0;
   out_5723085591556290963[341] = 0;
   out_5723085591556290963[342] = 0;
   out_5723085591556290963[343] = 0;
   out_5723085591556290963[344] = 0;
   out_5723085591556290963[345] = 0;
   out_5723085591556290963[346] = 0;
   out_5723085591556290963[347] = 0;
   out_5723085591556290963[348] = 0;
   out_5723085591556290963[349] = 0;
   out_5723085591556290963[350] = 0;
   out_5723085591556290963[351] = 0;
   out_5723085591556290963[352] = 1;
   out_5723085591556290963[353] = 0;
   out_5723085591556290963[354] = 0;
   out_5723085591556290963[355] = 0;
   out_5723085591556290963[356] = 0;
   out_5723085591556290963[357] = 0;
   out_5723085591556290963[358] = 0;
   out_5723085591556290963[359] = 0;
   out_5723085591556290963[360] = 0;
   out_5723085591556290963[361] = 0;
   out_5723085591556290963[362] = 0;
   out_5723085591556290963[363] = 0;
   out_5723085591556290963[364] = 0;
   out_5723085591556290963[365] = 0;
   out_5723085591556290963[366] = 0;
   out_5723085591556290963[367] = 0;
   out_5723085591556290963[368] = 0;
   out_5723085591556290963[369] = 0;
   out_5723085591556290963[370] = 0;
   out_5723085591556290963[371] = 0;
   out_5723085591556290963[372] = 0;
   out_5723085591556290963[373] = 0;
   out_5723085591556290963[374] = 1;
   out_5723085591556290963[375] = 0;
   out_5723085591556290963[376] = 0;
   out_5723085591556290963[377] = 0;
   out_5723085591556290963[378] = 0;
   out_5723085591556290963[379] = 0;
   out_5723085591556290963[380] = 0;
   out_5723085591556290963[381] = 0;
   out_5723085591556290963[382] = 0;
   out_5723085591556290963[383] = 0;
   out_5723085591556290963[384] = 0;
   out_5723085591556290963[385] = 0;
   out_5723085591556290963[386] = 0;
   out_5723085591556290963[387] = 0;
   out_5723085591556290963[388] = 0;
   out_5723085591556290963[389] = 0;
   out_5723085591556290963[390] = 0;
   out_5723085591556290963[391] = 0;
   out_5723085591556290963[392] = 0;
   out_5723085591556290963[393] = 0;
   out_5723085591556290963[394] = 0;
   out_5723085591556290963[395] = 0;
   out_5723085591556290963[396] = 1;
   out_5723085591556290963[397] = 0;
   out_5723085591556290963[398] = 0;
   out_5723085591556290963[399] = 0;
   out_5723085591556290963[400] = 0;
   out_5723085591556290963[401] = 0;
   out_5723085591556290963[402] = 0;
   out_5723085591556290963[403] = 0;
   out_5723085591556290963[404] = 0;
   out_5723085591556290963[405] = 0;
   out_5723085591556290963[406] = 0;
   out_5723085591556290963[407] = 0;
   out_5723085591556290963[408] = 0;
   out_5723085591556290963[409] = 0;
   out_5723085591556290963[410] = 0;
   out_5723085591556290963[411] = 0;
   out_5723085591556290963[412] = 0;
   out_5723085591556290963[413] = 0;
   out_5723085591556290963[414] = 0;
   out_5723085591556290963[415] = 0;
   out_5723085591556290963[416] = 0;
   out_5723085591556290963[417] = 0;
   out_5723085591556290963[418] = 1;
   out_5723085591556290963[419] = 0;
   out_5723085591556290963[420] = 0;
   out_5723085591556290963[421] = 0;
   out_5723085591556290963[422] = 0;
   out_5723085591556290963[423] = 0;
   out_5723085591556290963[424] = 0;
   out_5723085591556290963[425] = 0;
   out_5723085591556290963[426] = 0;
   out_5723085591556290963[427] = 0;
   out_5723085591556290963[428] = 0;
   out_5723085591556290963[429] = 0;
   out_5723085591556290963[430] = 0;
   out_5723085591556290963[431] = 0;
   out_5723085591556290963[432] = 0;
   out_5723085591556290963[433] = 0;
   out_5723085591556290963[434] = 0;
   out_5723085591556290963[435] = 0;
   out_5723085591556290963[436] = 0;
   out_5723085591556290963[437] = 0;
   out_5723085591556290963[438] = 0;
   out_5723085591556290963[439] = 0;
   out_5723085591556290963[440] = 1;
}
void h_4(double *state, double *unused, double *out_2245476565284605540) {
   out_2245476565284605540[0] = state[10] + state[13];
   out_2245476565284605540[1] = state[11] + state[14];
   out_2245476565284605540[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5624368213746747534) {
   out_5624368213746747534[0] = 0;
   out_5624368213746747534[1] = 0;
   out_5624368213746747534[2] = 0;
   out_5624368213746747534[3] = 0;
   out_5624368213746747534[4] = 0;
   out_5624368213746747534[5] = 0;
   out_5624368213746747534[6] = 0;
   out_5624368213746747534[7] = 0;
   out_5624368213746747534[8] = 0;
   out_5624368213746747534[9] = 0;
   out_5624368213746747534[10] = 1;
   out_5624368213746747534[11] = 0;
   out_5624368213746747534[12] = 0;
   out_5624368213746747534[13] = 1;
   out_5624368213746747534[14] = 0;
   out_5624368213746747534[15] = 0;
   out_5624368213746747534[16] = 0;
   out_5624368213746747534[17] = 0;
   out_5624368213746747534[18] = 0;
   out_5624368213746747534[19] = 0;
   out_5624368213746747534[20] = 0;
   out_5624368213746747534[21] = 0;
   out_5624368213746747534[22] = 0;
   out_5624368213746747534[23] = 0;
   out_5624368213746747534[24] = 0;
   out_5624368213746747534[25] = 0;
   out_5624368213746747534[26] = 0;
   out_5624368213746747534[27] = 0;
   out_5624368213746747534[28] = 0;
   out_5624368213746747534[29] = 0;
   out_5624368213746747534[30] = 0;
   out_5624368213746747534[31] = 0;
   out_5624368213746747534[32] = 0;
   out_5624368213746747534[33] = 1;
   out_5624368213746747534[34] = 0;
   out_5624368213746747534[35] = 0;
   out_5624368213746747534[36] = 1;
   out_5624368213746747534[37] = 0;
   out_5624368213746747534[38] = 0;
   out_5624368213746747534[39] = 0;
   out_5624368213746747534[40] = 0;
   out_5624368213746747534[41] = 0;
   out_5624368213746747534[42] = 0;
   out_5624368213746747534[43] = 0;
   out_5624368213746747534[44] = 0;
   out_5624368213746747534[45] = 0;
   out_5624368213746747534[46] = 0;
   out_5624368213746747534[47] = 0;
   out_5624368213746747534[48] = 0;
   out_5624368213746747534[49] = 0;
   out_5624368213746747534[50] = 0;
   out_5624368213746747534[51] = 0;
   out_5624368213746747534[52] = 0;
   out_5624368213746747534[53] = 0;
   out_5624368213746747534[54] = 0;
   out_5624368213746747534[55] = 0;
   out_5624368213746747534[56] = 1;
   out_5624368213746747534[57] = 0;
   out_5624368213746747534[58] = 0;
   out_5624368213746747534[59] = 1;
   out_5624368213746747534[60] = 0;
   out_5624368213746747534[61] = 0;
   out_5624368213746747534[62] = 0;
   out_5624368213746747534[63] = 0;
   out_5624368213746747534[64] = 0;
   out_5624368213746747534[65] = 0;
}
void h_9(double *state, double *unused, double *out_6612006138927210774) {
   out_6612006138927210774[0] = state[10];
   out_6612006138927210774[1] = state[11];
   out_6612006138927210774[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5865557860376338179) {
   out_5865557860376338179[0] = 0;
   out_5865557860376338179[1] = 0;
   out_5865557860376338179[2] = 0;
   out_5865557860376338179[3] = 0;
   out_5865557860376338179[4] = 0;
   out_5865557860376338179[5] = 0;
   out_5865557860376338179[6] = 0;
   out_5865557860376338179[7] = 0;
   out_5865557860376338179[8] = 0;
   out_5865557860376338179[9] = 0;
   out_5865557860376338179[10] = 1;
   out_5865557860376338179[11] = 0;
   out_5865557860376338179[12] = 0;
   out_5865557860376338179[13] = 0;
   out_5865557860376338179[14] = 0;
   out_5865557860376338179[15] = 0;
   out_5865557860376338179[16] = 0;
   out_5865557860376338179[17] = 0;
   out_5865557860376338179[18] = 0;
   out_5865557860376338179[19] = 0;
   out_5865557860376338179[20] = 0;
   out_5865557860376338179[21] = 0;
   out_5865557860376338179[22] = 0;
   out_5865557860376338179[23] = 0;
   out_5865557860376338179[24] = 0;
   out_5865557860376338179[25] = 0;
   out_5865557860376338179[26] = 0;
   out_5865557860376338179[27] = 0;
   out_5865557860376338179[28] = 0;
   out_5865557860376338179[29] = 0;
   out_5865557860376338179[30] = 0;
   out_5865557860376338179[31] = 0;
   out_5865557860376338179[32] = 0;
   out_5865557860376338179[33] = 1;
   out_5865557860376338179[34] = 0;
   out_5865557860376338179[35] = 0;
   out_5865557860376338179[36] = 0;
   out_5865557860376338179[37] = 0;
   out_5865557860376338179[38] = 0;
   out_5865557860376338179[39] = 0;
   out_5865557860376338179[40] = 0;
   out_5865557860376338179[41] = 0;
   out_5865557860376338179[42] = 0;
   out_5865557860376338179[43] = 0;
   out_5865557860376338179[44] = 0;
   out_5865557860376338179[45] = 0;
   out_5865557860376338179[46] = 0;
   out_5865557860376338179[47] = 0;
   out_5865557860376338179[48] = 0;
   out_5865557860376338179[49] = 0;
   out_5865557860376338179[50] = 0;
   out_5865557860376338179[51] = 0;
   out_5865557860376338179[52] = 0;
   out_5865557860376338179[53] = 0;
   out_5865557860376338179[54] = 0;
   out_5865557860376338179[55] = 0;
   out_5865557860376338179[56] = 1;
   out_5865557860376338179[57] = 0;
   out_5865557860376338179[58] = 0;
   out_5865557860376338179[59] = 0;
   out_5865557860376338179[60] = 0;
   out_5865557860376338179[61] = 0;
   out_5865557860376338179[62] = 0;
   out_5865557860376338179[63] = 0;
   out_5865557860376338179[64] = 0;
   out_5865557860376338179[65] = 0;
}
void h_10(double *state, double *unused, double *out_4552959788951639380) {
   out_4552959788951639380[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4552959788951639380[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4552959788951639380[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7528269866486764922) {
   out_7528269866486764922[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7528269866486764922[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7528269866486764922[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7528269866486764922[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7528269866486764922[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7528269866486764922[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7528269866486764922[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7528269866486764922[7] = 0;
   out_7528269866486764922[8] = 0;
   out_7528269866486764922[9] = 0;
   out_7528269866486764922[10] = 0;
   out_7528269866486764922[11] = 0;
   out_7528269866486764922[12] = 0;
   out_7528269866486764922[13] = 0;
   out_7528269866486764922[14] = 0;
   out_7528269866486764922[15] = 0;
   out_7528269866486764922[16] = 1;
   out_7528269866486764922[17] = 0;
   out_7528269866486764922[18] = 0;
   out_7528269866486764922[19] = 1;
   out_7528269866486764922[20] = 0;
   out_7528269866486764922[21] = 0;
   out_7528269866486764922[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7528269866486764922[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7528269866486764922[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7528269866486764922[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7528269866486764922[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7528269866486764922[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7528269866486764922[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7528269866486764922[29] = 0;
   out_7528269866486764922[30] = 0;
   out_7528269866486764922[31] = 0;
   out_7528269866486764922[32] = 0;
   out_7528269866486764922[33] = 0;
   out_7528269866486764922[34] = 0;
   out_7528269866486764922[35] = 0;
   out_7528269866486764922[36] = 0;
   out_7528269866486764922[37] = 0;
   out_7528269866486764922[38] = 0;
   out_7528269866486764922[39] = 1;
   out_7528269866486764922[40] = 0;
   out_7528269866486764922[41] = 0;
   out_7528269866486764922[42] = 1;
   out_7528269866486764922[43] = 0;
   out_7528269866486764922[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7528269866486764922[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7528269866486764922[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7528269866486764922[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7528269866486764922[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7528269866486764922[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7528269866486764922[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7528269866486764922[51] = 0;
   out_7528269866486764922[52] = 0;
   out_7528269866486764922[53] = 0;
   out_7528269866486764922[54] = 0;
   out_7528269866486764922[55] = 0;
   out_7528269866486764922[56] = 0;
   out_7528269866486764922[57] = 0;
   out_7528269866486764922[58] = 0;
   out_7528269866486764922[59] = 0;
   out_7528269866486764922[60] = 0;
   out_7528269866486764922[61] = 0;
   out_7528269866486764922[62] = 1;
   out_7528269866486764922[63] = 0;
   out_7528269866486764922[64] = 0;
   out_7528269866486764922[65] = 1;
}
void h_12(double *state, double *unused, double *out_3928381731000214158) {
   out_3928381731000214158[0] = state[0];
   out_3928381731000214158[1] = state[1];
   out_3928381731000214158[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7802919451930842287) {
   out_7802919451930842287[0] = 1;
   out_7802919451930842287[1] = 0;
   out_7802919451930842287[2] = 0;
   out_7802919451930842287[3] = 0;
   out_7802919451930842287[4] = 0;
   out_7802919451930842287[5] = 0;
   out_7802919451930842287[6] = 0;
   out_7802919451930842287[7] = 0;
   out_7802919451930842287[8] = 0;
   out_7802919451930842287[9] = 0;
   out_7802919451930842287[10] = 0;
   out_7802919451930842287[11] = 0;
   out_7802919451930842287[12] = 0;
   out_7802919451930842287[13] = 0;
   out_7802919451930842287[14] = 0;
   out_7802919451930842287[15] = 0;
   out_7802919451930842287[16] = 0;
   out_7802919451930842287[17] = 0;
   out_7802919451930842287[18] = 0;
   out_7802919451930842287[19] = 0;
   out_7802919451930842287[20] = 0;
   out_7802919451930842287[21] = 0;
   out_7802919451930842287[22] = 0;
   out_7802919451930842287[23] = 1;
   out_7802919451930842287[24] = 0;
   out_7802919451930842287[25] = 0;
   out_7802919451930842287[26] = 0;
   out_7802919451930842287[27] = 0;
   out_7802919451930842287[28] = 0;
   out_7802919451930842287[29] = 0;
   out_7802919451930842287[30] = 0;
   out_7802919451930842287[31] = 0;
   out_7802919451930842287[32] = 0;
   out_7802919451930842287[33] = 0;
   out_7802919451930842287[34] = 0;
   out_7802919451930842287[35] = 0;
   out_7802919451930842287[36] = 0;
   out_7802919451930842287[37] = 0;
   out_7802919451930842287[38] = 0;
   out_7802919451930842287[39] = 0;
   out_7802919451930842287[40] = 0;
   out_7802919451930842287[41] = 0;
   out_7802919451930842287[42] = 0;
   out_7802919451930842287[43] = 0;
   out_7802919451930842287[44] = 0;
   out_7802919451930842287[45] = 0;
   out_7802919451930842287[46] = 1;
   out_7802919451930842287[47] = 0;
   out_7802919451930842287[48] = 0;
   out_7802919451930842287[49] = 0;
   out_7802919451930842287[50] = 0;
   out_7802919451930842287[51] = 0;
   out_7802919451930842287[52] = 0;
   out_7802919451930842287[53] = 0;
   out_7802919451930842287[54] = 0;
   out_7802919451930842287[55] = 0;
   out_7802919451930842287[56] = 0;
   out_7802919451930842287[57] = 0;
   out_7802919451930842287[58] = 0;
   out_7802919451930842287[59] = 0;
   out_7802919451930842287[60] = 0;
   out_7802919451930842287[61] = 0;
   out_7802919451930842287[62] = 0;
   out_7802919451930842287[63] = 0;
   out_7802919451930842287[64] = 0;
   out_7802919451930842287[65] = 0;
}
void h_35(double *state, double *unused, double *out_9118307750838053433) {
   out_9118307750838053433[0] = state[7];
   out_9118307750838053433[1] = state[8];
   out_9118307750838053433[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5057356419605828578) {
   out_5057356419605828578[0] = 0;
   out_5057356419605828578[1] = 0;
   out_5057356419605828578[2] = 0;
   out_5057356419605828578[3] = 0;
   out_5057356419605828578[4] = 0;
   out_5057356419605828578[5] = 0;
   out_5057356419605828578[6] = 0;
   out_5057356419605828578[7] = 1;
   out_5057356419605828578[8] = 0;
   out_5057356419605828578[9] = 0;
   out_5057356419605828578[10] = 0;
   out_5057356419605828578[11] = 0;
   out_5057356419605828578[12] = 0;
   out_5057356419605828578[13] = 0;
   out_5057356419605828578[14] = 0;
   out_5057356419605828578[15] = 0;
   out_5057356419605828578[16] = 0;
   out_5057356419605828578[17] = 0;
   out_5057356419605828578[18] = 0;
   out_5057356419605828578[19] = 0;
   out_5057356419605828578[20] = 0;
   out_5057356419605828578[21] = 0;
   out_5057356419605828578[22] = 0;
   out_5057356419605828578[23] = 0;
   out_5057356419605828578[24] = 0;
   out_5057356419605828578[25] = 0;
   out_5057356419605828578[26] = 0;
   out_5057356419605828578[27] = 0;
   out_5057356419605828578[28] = 0;
   out_5057356419605828578[29] = 0;
   out_5057356419605828578[30] = 1;
   out_5057356419605828578[31] = 0;
   out_5057356419605828578[32] = 0;
   out_5057356419605828578[33] = 0;
   out_5057356419605828578[34] = 0;
   out_5057356419605828578[35] = 0;
   out_5057356419605828578[36] = 0;
   out_5057356419605828578[37] = 0;
   out_5057356419605828578[38] = 0;
   out_5057356419605828578[39] = 0;
   out_5057356419605828578[40] = 0;
   out_5057356419605828578[41] = 0;
   out_5057356419605828578[42] = 0;
   out_5057356419605828578[43] = 0;
   out_5057356419605828578[44] = 0;
   out_5057356419605828578[45] = 0;
   out_5057356419605828578[46] = 0;
   out_5057356419605828578[47] = 0;
   out_5057356419605828578[48] = 0;
   out_5057356419605828578[49] = 0;
   out_5057356419605828578[50] = 0;
   out_5057356419605828578[51] = 0;
   out_5057356419605828578[52] = 0;
   out_5057356419605828578[53] = 1;
   out_5057356419605828578[54] = 0;
   out_5057356419605828578[55] = 0;
   out_5057356419605828578[56] = 0;
   out_5057356419605828578[57] = 0;
   out_5057356419605828578[58] = 0;
   out_5057356419605828578[59] = 0;
   out_5057356419605828578[60] = 0;
   out_5057356419605828578[61] = 0;
   out_5057356419605828578[62] = 0;
   out_5057356419605828578[63] = 0;
   out_5057356419605828578[64] = 0;
   out_5057356419605828578[65] = 0;
}
void h_32(double *state, double *unused, double *out_4866981896441617964) {
   out_4866981896441617964[0] = state[3];
   out_4866981896441617964[1] = state[4];
   out_4866981896441617964[2] = state[5];
   out_4866981896441617964[3] = state[6];
}
void H_32(double *state, double *unused, double *out_743947952601783980) {
   out_743947952601783980[0] = 0;
   out_743947952601783980[1] = 0;
   out_743947952601783980[2] = 0;
   out_743947952601783980[3] = 1;
   out_743947952601783980[4] = 0;
   out_743947952601783980[5] = 0;
   out_743947952601783980[6] = 0;
   out_743947952601783980[7] = 0;
   out_743947952601783980[8] = 0;
   out_743947952601783980[9] = 0;
   out_743947952601783980[10] = 0;
   out_743947952601783980[11] = 0;
   out_743947952601783980[12] = 0;
   out_743947952601783980[13] = 0;
   out_743947952601783980[14] = 0;
   out_743947952601783980[15] = 0;
   out_743947952601783980[16] = 0;
   out_743947952601783980[17] = 0;
   out_743947952601783980[18] = 0;
   out_743947952601783980[19] = 0;
   out_743947952601783980[20] = 0;
   out_743947952601783980[21] = 0;
   out_743947952601783980[22] = 0;
   out_743947952601783980[23] = 0;
   out_743947952601783980[24] = 0;
   out_743947952601783980[25] = 0;
   out_743947952601783980[26] = 1;
   out_743947952601783980[27] = 0;
   out_743947952601783980[28] = 0;
   out_743947952601783980[29] = 0;
   out_743947952601783980[30] = 0;
   out_743947952601783980[31] = 0;
   out_743947952601783980[32] = 0;
   out_743947952601783980[33] = 0;
   out_743947952601783980[34] = 0;
   out_743947952601783980[35] = 0;
   out_743947952601783980[36] = 0;
   out_743947952601783980[37] = 0;
   out_743947952601783980[38] = 0;
   out_743947952601783980[39] = 0;
   out_743947952601783980[40] = 0;
   out_743947952601783980[41] = 0;
   out_743947952601783980[42] = 0;
   out_743947952601783980[43] = 0;
   out_743947952601783980[44] = 0;
   out_743947952601783980[45] = 0;
   out_743947952601783980[46] = 0;
   out_743947952601783980[47] = 0;
   out_743947952601783980[48] = 0;
   out_743947952601783980[49] = 1;
   out_743947952601783980[50] = 0;
   out_743947952601783980[51] = 0;
   out_743947952601783980[52] = 0;
   out_743947952601783980[53] = 0;
   out_743947952601783980[54] = 0;
   out_743947952601783980[55] = 0;
   out_743947952601783980[56] = 0;
   out_743947952601783980[57] = 0;
   out_743947952601783980[58] = 0;
   out_743947952601783980[59] = 0;
   out_743947952601783980[60] = 0;
   out_743947952601783980[61] = 0;
   out_743947952601783980[62] = 0;
   out_743947952601783980[63] = 0;
   out_743947952601783980[64] = 0;
   out_743947952601783980[65] = 0;
   out_743947952601783980[66] = 0;
   out_743947952601783980[67] = 0;
   out_743947952601783980[68] = 0;
   out_743947952601783980[69] = 0;
   out_743947952601783980[70] = 0;
   out_743947952601783980[71] = 0;
   out_743947952601783980[72] = 1;
   out_743947952601783980[73] = 0;
   out_743947952601783980[74] = 0;
   out_743947952601783980[75] = 0;
   out_743947952601783980[76] = 0;
   out_743947952601783980[77] = 0;
   out_743947952601783980[78] = 0;
   out_743947952601783980[79] = 0;
   out_743947952601783980[80] = 0;
   out_743947952601783980[81] = 0;
   out_743947952601783980[82] = 0;
   out_743947952601783980[83] = 0;
   out_743947952601783980[84] = 0;
   out_743947952601783980[85] = 0;
   out_743947952601783980[86] = 0;
   out_743947952601783980[87] = 0;
}
void h_13(double *state, double *unused, double *out_3999760316582370174) {
   out_3999760316582370174[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3999760316582370174[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3999760316582370174[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5263959359015785045) {
   out_5263959359015785045[0] = 0;
   out_5263959359015785045[1] = 0;
   out_5263959359015785045[2] = 0;
   out_5263959359015785045[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5263959359015785045[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5263959359015785045[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5263959359015785045[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5263959359015785045[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5263959359015785045[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5263959359015785045[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5263959359015785045[10] = 0;
   out_5263959359015785045[11] = 0;
   out_5263959359015785045[12] = 0;
   out_5263959359015785045[13] = 0;
   out_5263959359015785045[14] = 0;
   out_5263959359015785045[15] = 0;
   out_5263959359015785045[16] = 0;
   out_5263959359015785045[17] = 0;
   out_5263959359015785045[18] = 0;
   out_5263959359015785045[19] = 0;
   out_5263959359015785045[20] = 0;
   out_5263959359015785045[21] = 0;
   out_5263959359015785045[22] = 0;
   out_5263959359015785045[23] = 0;
   out_5263959359015785045[24] = 0;
   out_5263959359015785045[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5263959359015785045[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5263959359015785045[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5263959359015785045[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5263959359015785045[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5263959359015785045[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5263959359015785045[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5263959359015785045[32] = 0;
   out_5263959359015785045[33] = 0;
   out_5263959359015785045[34] = 0;
   out_5263959359015785045[35] = 0;
   out_5263959359015785045[36] = 0;
   out_5263959359015785045[37] = 0;
   out_5263959359015785045[38] = 0;
   out_5263959359015785045[39] = 0;
   out_5263959359015785045[40] = 0;
   out_5263959359015785045[41] = 0;
   out_5263959359015785045[42] = 0;
   out_5263959359015785045[43] = 0;
   out_5263959359015785045[44] = 0;
   out_5263959359015785045[45] = 0;
   out_5263959359015785045[46] = 0;
   out_5263959359015785045[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5263959359015785045[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5263959359015785045[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5263959359015785045[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5263959359015785045[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5263959359015785045[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5263959359015785045[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5263959359015785045[54] = 0;
   out_5263959359015785045[55] = 0;
   out_5263959359015785045[56] = 0;
   out_5263959359015785045[57] = 0;
   out_5263959359015785045[58] = 0;
   out_5263959359015785045[59] = 0;
   out_5263959359015785045[60] = 0;
   out_5263959359015785045[61] = 0;
   out_5263959359015785045[62] = 0;
   out_5263959359015785045[63] = 0;
   out_5263959359015785045[64] = 0;
   out_5263959359015785045[65] = 0;
}
void h_14(double *state, double *unused, double *out_6612006138927210774) {
   out_6612006138927210774[0] = state[10];
   out_6612006138927210774[1] = state[11];
   out_6612006138927210774[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5865557860376338179) {
   out_5865557860376338179[0] = 0;
   out_5865557860376338179[1] = 0;
   out_5865557860376338179[2] = 0;
   out_5865557860376338179[3] = 0;
   out_5865557860376338179[4] = 0;
   out_5865557860376338179[5] = 0;
   out_5865557860376338179[6] = 0;
   out_5865557860376338179[7] = 0;
   out_5865557860376338179[8] = 0;
   out_5865557860376338179[9] = 0;
   out_5865557860376338179[10] = 1;
   out_5865557860376338179[11] = 0;
   out_5865557860376338179[12] = 0;
   out_5865557860376338179[13] = 0;
   out_5865557860376338179[14] = 0;
   out_5865557860376338179[15] = 0;
   out_5865557860376338179[16] = 0;
   out_5865557860376338179[17] = 0;
   out_5865557860376338179[18] = 0;
   out_5865557860376338179[19] = 0;
   out_5865557860376338179[20] = 0;
   out_5865557860376338179[21] = 0;
   out_5865557860376338179[22] = 0;
   out_5865557860376338179[23] = 0;
   out_5865557860376338179[24] = 0;
   out_5865557860376338179[25] = 0;
   out_5865557860376338179[26] = 0;
   out_5865557860376338179[27] = 0;
   out_5865557860376338179[28] = 0;
   out_5865557860376338179[29] = 0;
   out_5865557860376338179[30] = 0;
   out_5865557860376338179[31] = 0;
   out_5865557860376338179[32] = 0;
   out_5865557860376338179[33] = 1;
   out_5865557860376338179[34] = 0;
   out_5865557860376338179[35] = 0;
   out_5865557860376338179[36] = 0;
   out_5865557860376338179[37] = 0;
   out_5865557860376338179[38] = 0;
   out_5865557860376338179[39] = 0;
   out_5865557860376338179[40] = 0;
   out_5865557860376338179[41] = 0;
   out_5865557860376338179[42] = 0;
   out_5865557860376338179[43] = 0;
   out_5865557860376338179[44] = 0;
   out_5865557860376338179[45] = 0;
   out_5865557860376338179[46] = 0;
   out_5865557860376338179[47] = 0;
   out_5865557860376338179[48] = 0;
   out_5865557860376338179[49] = 0;
   out_5865557860376338179[50] = 0;
   out_5865557860376338179[51] = 0;
   out_5865557860376338179[52] = 0;
   out_5865557860376338179[53] = 0;
   out_5865557860376338179[54] = 0;
   out_5865557860376338179[55] = 0;
   out_5865557860376338179[56] = 1;
   out_5865557860376338179[57] = 0;
   out_5865557860376338179[58] = 0;
   out_5865557860376338179[59] = 0;
   out_5865557860376338179[60] = 0;
   out_5865557860376338179[61] = 0;
   out_5865557860376338179[62] = 0;
   out_5865557860376338179[63] = 0;
   out_5865557860376338179[64] = 0;
   out_5865557860376338179[65] = 0;
}
void h_33(double *state, double *unused, double *out_3205176302055250276) {
   out_3205176302055250276[0] = state[16];
   out_3205176302055250276[1] = state[17];
   out_3205176302055250276[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1906799414966970974) {
   out_1906799414966970974[0] = 0;
   out_1906799414966970974[1] = 0;
   out_1906799414966970974[2] = 0;
   out_1906799414966970974[3] = 0;
   out_1906799414966970974[4] = 0;
   out_1906799414966970974[5] = 0;
   out_1906799414966970974[6] = 0;
   out_1906799414966970974[7] = 0;
   out_1906799414966970974[8] = 0;
   out_1906799414966970974[9] = 0;
   out_1906799414966970974[10] = 0;
   out_1906799414966970974[11] = 0;
   out_1906799414966970974[12] = 0;
   out_1906799414966970974[13] = 0;
   out_1906799414966970974[14] = 0;
   out_1906799414966970974[15] = 0;
   out_1906799414966970974[16] = 1;
   out_1906799414966970974[17] = 0;
   out_1906799414966970974[18] = 0;
   out_1906799414966970974[19] = 0;
   out_1906799414966970974[20] = 0;
   out_1906799414966970974[21] = 0;
   out_1906799414966970974[22] = 0;
   out_1906799414966970974[23] = 0;
   out_1906799414966970974[24] = 0;
   out_1906799414966970974[25] = 0;
   out_1906799414966970974[26] = 0;
   out_1906799414966970974[27] = 0;
   out_1906799414966970974[28] = 0;
   out_1906799414966970974[29] = 0;
   out_1906799414966970974[30] = 0;
   out_1906799414966970974[31] = 0;
   out_1906799414966970974[32] = 0;
   out_1906799414966970974[33] = 0;
   out_1906799414966970974[34] = 0;
   out_1906799414966970974[35] = 0;
   out_1906799414966970974[36] = 0;
   out_1906799414966970974[37] = 0;
   out_1906799414966970974[38] = 0;
   out_1906799414966970974[39] = 1;
   out_1906799414966970974[40] = 0;
   out_1906799414966970974[41] = 0;
   out_1906799414966970974[42] = 0;
   out_1906799414966970974[43] = 0;
   out_1906799414966970974[44] = 0;
   out_1906799414966970974[45] = 0;
   out_1906799414966970974[46] = 0;
   out_1906799414966970974[47] = 0;
   out_1906799414966970974[48] = 0;
   out_1906799414966970974[49] = 0;
   out_1906799414966970974[50] = 0;
   out_1906799414966970974[51] = 0;
   out_1906799414966970974[52] = 0;
   out_1906799414966970974[53] = 0;
   out_1906799414966970974[54] = 0;
   out_1906799414966970974[55] = 0;
   out_1906799414966970974[56] = 0;
   out_1906799414966970974[57] = 0;
   out_1906799414966970974[58] = 0;
   out_1906799414966970974[59] = 0;
   out_1906799414966970974[60] = 0;
   out_1906799414966970974[61] = 0;
   out_1906799414966970974[62] = 1;
   out_1906799414966970974[63] = 0;
   out_1906799414966970974[64] = 0;
   out_1906799414966970974[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7931034220483172819) {
  H(in_vec, out_7931034220483172819);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7889675508931366809) {
  err_fun(nom_x, delta_x, out_7889675508931366809);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1722176044304643195) {
  inv_err_fun(nom_x, true_x, out_1722176044304643195);
}
void live_H_mod_fun(double *state, double *out_256698206982389921) {
  H_mod_fun(state, out_256698206982389921);
}
void live_f_fun(double *state, double dt, double *out_6309503849853188204) {
  f_fun(state,  dt, out_6309503849853188204);
}
void live_F_fun(double *state, double dt, double *out_5723085591556290963) {
  F_fun(state,  dt, out_5723085591556290963);
}
void live_h_4(double *state, double *unused, double *out_2245476565284605540) {
  h_4(state, unused, out_2245476565284605540);
}
void live_H_4(double *state, double *unused, double *out_5624368213746747534) {
  H_4(state, unused, out_5624368213746747534);
}
void live_h_9(double *state, double *unused, double *out_6612006138927210774) {
  h_9(state, unused, out_6612006138927210774);
}
void live_H_9(double *state, double *unused, double *out_5865557860376338179) {
  H_9(state, unused, out_5865557860376338179);
}
void live_h_10(double *state, double *unused, double *out_4552959788951639380) {
  h_10(state, unused, out_4552959788951639380);
}
void live_H_10(double *state, double *unused, double *out_7528269866486764922) {
  H_10(state, unused, out_7528269866486764922);
}
void live_h_12(double *state, double *unused, double *out_3928381731000214158) {
  h_12(state, unused, out_3928381731000214158);
}
void live_H_12(double *state, double *unused, double *out_7802919451930842287) {
  H_12(state, unused, out_7802919451930842287);
}
void live_h_35(double *state, double *unused, double *out_9118307750838053433) {
  h_35(state, unused, out_9118307750838053433);
}
void live_H_35(double *state, double *unused, double *out_5057356419605828578) {
  H_35(state, unused, out_5057356419605828578);
}
void live_h_32(double *state, double *unused, double *out_4866981896441617964) {
  h_32(state, unused, out_4866981896441617964);
}
void live_H_32(double *state, double *unused, double *out_743947952601783980) {
  H_32(state, unused, out_743947952601783980);
}
void live_h_13(double *state, double *unused, double *out_3999760316582370174) {
  h_13(state, unused, out_3999760316582370174);
}
void live_H_13(double *state, double *unused, double *out_5263959359015785045) {
  H_13(state, unused, out_5263959359015785045);
}
void live_h_14(double *state, double *unused, double *out_6612006138927210774) {
  h_14(state, unused, out_6612006138927210774);
}
void live_H_14(double *state, double *unused, double *out_5865557860376338179) {
  H_14(state, unused, out_5865557860376338179);
}
void live_h_33(double *state, double *unused, double *out_3205176302055250276) {
  h_33(state, unused, out_3205176302055250276);
}
void live_H_33(double *state, double *unused, double *out_1906799414966970974) {
  H_33(state, unused, out_1906799414966970974);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
