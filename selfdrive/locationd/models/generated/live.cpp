#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_9148775728180059471) {
   out_9148775728180059471[0] = 0;
   out_9148775728180059471[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_9148775728180059471[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_9148775728180059471[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_9148775728180059471[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_9148775728180059471[5] = -sin(in_vec[1]);
   out_9148775728180059471[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9148775728180059471[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9148775728180059471[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_9148775728180059471[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_9148775728180059471[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_9148775728180059471[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_9148775728180059471[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9148775728180059471[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9148775728180059471[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_9148775728180059471[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_9148775728180059471[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_9148775728180059471[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3413010025723617094) {
   out_3413010025723617094[0] = delta_x[0] + nom_x[0];
   out_3413010025723617094[1] = delta_x[1] + nom_x[1];
   out_3413010025723617094[2] = delta_x[2] + nom_x[2];
   out_3413010025723617094[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3413010025723617094[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3413010025723617094[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3413010025723617094[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3413010025723617094[7] = delta_x[6] + nom_x[7];
   out_3413010025723617094[8] = delta_x[7] + nom_x[8];
   out_3413010025723617094[9] = delta_x[8] + nom_x[9];
   out_3413010025723617094[10] = delta_x[9] + nom_x[10];
   out_3413010025723617094[11] = delta_x[10] + nom_x[11];
   out_3413010025723617094[12] = delta_x[11] + nom_x[12];
   out_3413010025723617094[13] = delta_x[12] + nom_x[13];
   out_3413010025723617094[14] = delta_x[13] + nom_x[14];
   out_3413010025723617094[15] = delta_x[14] + nom_x[15];
   out_3413010025723617094[16] = delta_x[15] + nom_x[16];
   out_3413010025723617094[17] = delta_x[16] + nom_x[17];
   out_3413010025723617094[18] = delta_x[17] + nom_x[18];
   out_3413010025723617094[19] = delta_x[18] + nom_x[19];
   out_3413010025723617094[20] = delta_x[19] + nom_x[20];
   out_3413010025723617094[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3779670744092566616) {
   out_3779670744092566616[0] = -nom_x[0] + true_x[0];
   out_3779670744092566616[1] = -nom_x[1] + true_x[1];
   out_3779670744092566616[2] = -nom_x[2] + true_x[2];
   out_3779670744092566616[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3779670744092566616[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3779670744092566616[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3779670744092566616[6] = -nom_x[7] + true_x[7];
   out_3779670744092566616[7] = -nom_x[8] + true_x[8];
   out_3779670744092566616[8] = -nom_x[9] + true_x[9];
   out_3779670744092566616[9] = -nom_x[10] + true_x[10];
   out_3779670744092566616[10] = -nom_x[11] + true_x[11];
   out_3779670744092566616[11] = -nom_x[12] + true_x[12];
   out_3779670744092566616[12] = -nom_x[13] + true_x[13];
   out_3779670744092566616[13] = -nom_x[14] + true_x[14];
   out_3779670744092566616[14] = -nom_x[15] + true_x[15];
   out_3779670744092566616[15] = -nom_x[16] + true_x[16];
   out_3779670744092566616[16] = -nom_x[17] + true_x[17];
   out_3779670744092566616[17] = -nom_x[18] + true_x[18];
   out_3779670744092566616[18] = -nom_x[19] + true_x[19];
   out_3779670744092566616[19] = -nom_x[20] + true_x[20];
   out_3779670744092566616[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4295184962871595087) {
   out_4295184962871595087[0] = 1.0;
   out_4295184962871595087[1] = 0;
   out_4295184962871595087[2] = 0;
   out_4295184962871595087[3] = 0;
   out_4295184962871595087[4] = 0;
   out_4295184962871595087[5] = 0;
   out_4295184962871595087[6] = 0;
   out_4295184962871595087[7] = 0;
   out_4295184962871595087[8] = 0;
   out_4295184962871595087[9] = 0;
   out_4295184962871595087[10] = 0;
   out_4295184962871595087[11] = 0;
   out_4295184962871595087[12] = 0;
   out_4295184962871595087[13] = 0;
   out_4295184962871595087[14] = 0;
   out_4295184962871595087[15] = 0;
   out_4295184962871595087[16] = 0;
   out_4295184962871595087[17] = 0;
   out_4295184962871595087[18] = 0;
   out_4295184962871595087[19] = 0;
   out_4295184962871595087[20] = 0;
   out_4295184962871595087[21] = 0;
   out_4295184962871595087[22] = 1.0;
   out_4295184962871595087[23] = 0;
   out_4295184962871595087[24] = 0;
   out_4295184962871595087[25] = 0;
   out_4295184962871595087[26] = 0;
   out_4295184962871595087[27] = 0;
   out_4295184962871595087[28] = 0;
   out_4295184962871595087[29] = 0;
   out_4295184962871595087[30] = 0;
   out_4295184962871595087[31] = 0;
   out_4295184962871595087[32] = 0;
   out_4295184962871595087[33] = 0;
   out_4295184962871595087[34] = 0;
   out_4295184962871595087[35] = 0;
   out_4295184962871595087[36] = 0;
   out_4295184962871595087[37] = 0;
   out_4295184962871595087[38] = 0;
   out_4295184962871595087[39] = 0;
   out_4295184962871595087[40] = 0;
   out_4295184962871595087[41] = 0;
   out_4295184962871595087[42] = 0;
   out_4295184962871595087[43] = 0;
   out_4295184962871595087[44] = 1.0;
   out_4295184962871595087[45] = 0;
   out_4295184962871595087[46] = 0;
   out_4295184962871595087[47] = 0;
   out_4295184962871595087[48] = 0;
   out_4295184962871595087[49] = 0;
   out_4295184962871595087[50] = 0;
   out_4295184962871595087[51] = 0;
   out_4295184962871595087[52] = 0;
   out_4295184962871595087[53] = 0;
   out_4295184962871595087[54] = 0;
   out_4295184962871595087[55] = 0;
   out_4295184962871595087[56] = 0;
   out_4295184962871595087[57] = 0;
   out_4295184962871595087[58] = 0;
   out_4295184962871595087[59] = 0;
   out_4295184962871595087[60] = 0;
   out_4295184962871595087[61] = 0;
   out_4295184962871595087[62] = 0;
   out_4295184962871595087[63] = 0;
   out_4295184962871595087[64] = 0;
   out_4295184962871595087[65] = 0;
   out_4295184962871595087[66] = -0.5*state[4];
   out_4295184962871595087[67] = -0.5*state[5];
   out_4295184962871595087[68] = -0.5*state[6];
   out_4295184962871595087[69] = 0;
   out_4295184962871595087[70] = 0;
   out_4295184962871595087[71] = 0;
   out_4295184962871595087[72] = 0;
   out_4295184962871595087[73] = 0;
   out_4295184962871595087[74] = 0;
   out_4295184962871595087[75] = 0;
   out_4295184962871595087[76] = 0;
   out_4295184962871595087[77] = 0;
   out_4295184962871595087[78] = 0;
   out_4295184962871595087[79] = 0;
   out_4295184962871595087[80] = 0;
   out_4295184962871595087[81] = 0;
   out_4295184962871595087[82] = 0;
   out_4295184962871595087[83] = 0;
   out_4295184962871595087[84] = 0;
   out_4295184962871595087[85] = 0;
   out_4295184962871595087[86] = 0;
   out_4295184962871595087[87] = 0.5*state[3];
   out_4295184962871595087[88] = 0.5*state[6];
   out_4295184962871595087[89] = -0.5*state[5];
   out_4295184962871595087[90] = 0;
   out_4295184962871595087[91] = 0;
   out_4295184962871595087[92] = 0;
   out_4295184962871595087[93] = 0;
   out_4295184962871595087[94] = 0;
   out_4295184962871595087[95] = 0;
   out_4295184962871595087[96] = 0;
   out_4295184962871595087[97] = 0;
   out_4295184962871595087[98] = 0;
   out_4295184962871595087[99] = 0;
   out_4295184962871595087[100] = 0;
   out_4295184962871595087[101] = 0;
   out_4295184962871595087[102] = 0;
   out_4295184962871595087[103] = 0;
   out_4295184962871595087[104] = 0;
   out_4295184962871595087[105] = 0;
   out_4295184962871595087[106] = 0;
   out_4295184962871595087[107] = 0;
   out_4295184962871595087[108] = -0.5*state[6];
   out_4295184962871595087[109] = 0.5*state[3];
   out_4295184962871595087[110] = 0.5*state[4];
   out_4295184962871595087[111] = 0;
   out_4295184962871595087[112] = 0;
   out_4295184962871595087[113] = 0;
   out_4295184962871595087[114] = 0;
   out_4295184962871595087[115] = 0;
   out_4295184962871595087[116] = 0;
   out_4295184962871595087[117] = 0;
   out_4295184962871595087[118] = 0;
   out_4295184962871595087[119] = 0;
   out_4295184962871595087[120] = 0;
   out_4295184962871595087[121] = 0;
   out_4295184962871595087[122] = 0;
   out_4295184962871595087[123] = 0;
   out_4295184962871595087[124] = 0;
   out_4295184962871595087[125] = 0;
   out_4295184962871595087[126] = 0;
   out_4295184962871595087[127] = 0;
   out_4295184962871595087[128] = 0;
   out_4295184962871595087[129] = 0.5*state[5];
   out_4295184962871595087[130] = -0.5*state[4];
   out_4295184962871595087[131] = 0.5*state[3];
   out_4295184962871595087[132] = 0;
   out_4295184962871595087[133] = 0;
   out_4295184962871595087[134] = 0;
   out_4295184962871595087[135] = 0;
   out_4295184962871595087[136] = 0;
   out_4295184962871595087[137] = 0;
   out_4295184962871595087[138] = 0;
   out_4295184962871595087[139] = 0;
   out_4295184962871595087[140] = 0;
   out_4295184962871595087[141] = 0;
   out_4295184962871595087[142] = 0;
   out_4295184962871595087[143] = 0;
   out_4295184962871595087[144] = 0;
   out_4295184962871595087[145] = 0;
   out_4295184962871595087[146] = 0;
   out_4295184962871595087[147] = 0;
   out_4295184962871595087[148] = 0;
   out_4295184962871595087[149] = 0;
   out_4295184962871595087[150] = 0;
   out_4295184962871595087[151] = 0;
   out_4295184962871595087[152] = 0;
   out_4295184962871595087[153] = 1.0;
   out_4295184962871595087[154] = 0;
   out_4295184962871595087[155] = 0;
   out_4295184962871595087[156] = 0;
   out_4295184962871595087[157] = 0;
   out_4295184962871595087[158] = 0;
   out_4295184962871595087[159] = 0;
   out_4295184962871595087[160] = 0;
   out_4295184962871595087[161] = 0;
   out_4295184962871595087[162] = 0;
   out_4295184962871595087[163] = 0;
   out_4295184962871595087[164] = 0;
   out_4295184962871595087[165] = 0;
   out_4295184962871595087[166] = 0;
   out_4295184962871595087[167] = 0;
   out_4295184962871595087[168] = 0;
   out_4295184962871595087[169] = 0;
   out_4295184962871595087[170] = 0;
   out_4295184962871595087[171] = 0;
   out_4295184962871595087[172] = 0;
   out_4295184962871595087[173] = 0;
   out_4295184962871595087[174] = 0;
   out_4295184962871595087[175] = 1.0;
   out_4295184962871595087[176] = 0;
   out_4295184962871595087[177] = 0;
   out_4295184962871595087[178] = 0;
   out_4295184962871595087[179] = 0;
   out_4295184962871595087[180] = 0;
   out_4295184962871595087[181] = 0;
   out_4295184962871595087[182] = 0;
   out_4295184962871595087[183] = 0;
   out_4295184962871595087[184] = 0;
   out_4295184962871595087[185] = 0;
   out_4295184962871595087[186] = 0;
   out_4295184962871595087[187] = 0;
   out_4295184962871595087[188] = 0;
   out_4295184962871595087[189] = 0;
   out_4295184962871595087[190] = 0;
   out_4295184962871595087[191] = 0;
   out_4295184962871595087[192] = 0;
   out_4295184962871595087[193] = 0;
   out_4295184962871595087[194] = 0;
   out_4295184962871595087[195] = 0;
   out_4295184962871595087[196] = 0;
   out_4295184962871595087[197] = 1.0;
   out_4295184962871595087[198] = 0;
   out_4295184962871595087[199] = 0;
   out_4295184962871595087[200] = 0;
   out_4295184962871595087[201] = 0;
   out_4295184962871595087[202] = 0;
   out_4295184962871595087[203] = 0;
   out_4295184962871595087[204] = 0;
   out_4295184962871595087[205] = 0;
   out_4295184962871595087[206] = 0;
   out_4295184962871595087[207] = 0;
   out_4295184962871595087[208] = 0;
   out_4295184962871595087[209] = 0;
   out_4295184962871595087[210] = 0;
   out_4295184962871595087[211] = 0;
   out_4295184962871595087[212] = 0;
   out_4295184962871595087[213] = 0;
   out_4295184962871595087[214] = 0;
   out_4295184962871595087[215] = 0;
   out_4295184962871595087[216] = 0;
   out_4295184962871595087[217] = 0;
   out_4295184962871595087[218] = 0;
   out_4295184962871595087[219] = 1.0;
   out_4295184962871595087[220] = 0;
   out_4295184962871595087[221] = 0;
   out_4295184962871595087[222] = 0;
   out_4295184962871595087[223] = 0;
   out_4295184962871595087[224] = 0;
   out_4295184962871595087[225] = 0;
   out_4295184962871595087[226] = 0;
   out_4295184962871595087[227] = 0;
   out_4295184962871595087[228] = 0;
   out_4295184962871595087[229] = 0;
   out_4295184962871595087[230] = 0;
   out_4295184962871595087[231] = 0;
   out_4295184962871595087[232] = 0;
   out_4295184962871595087[233] = 0;
   out_4295184962871595087[234] = 0;
   out_4295184962871595087[235] = 0;
   out_4295184962871595087[236] = 0;
   out_4295184962871595087[237] = 0;
   out_4295184962871595087[238] = 0;
   out_4295184962871595087[239] = 0;
   out_4295184962871595087[240] = 0;
   out_4295184962871595087[241] = 1.0;
   out_4295184962871595087[242] = 0;
   out_4295184962871595087[243] = 0;
   out_4295184962871595087[244] = 0;
   out_4295184962871595087[245] = 0;
   out_4295184962871595087[246] = 0;
   out_4295184962871595087[247] = 0;
   out_4295184962871595087[248] = 0;
   out_4295184962871595087[249] = 0;
   out_4295184962871595087[250] = 0;
   out_4295184962871595087[251] = 0;
   out_4295184962871595087[252] = 0;
   out_4295184962871595087[253] = 0;
   out_4295184962871595087[254] = 0;
   out_4295184962871595087[255] = 0;
   out_4295184962871595087[256] = 0;
   out_4295184962871595087[257] = 0;
   out_4295184962871595087[258] = 0;
   out_4295184962871595087[259] = 0;
   out_4295184962871595087[260] = 0;
   out_4295184962871595087[261] = 0;
   out_4295184962871595087[262] = 0;
   out_4295184962871595087[263] = 1.0;
   out_4295184962871595087[264] = 0;
   out_4295184962871595087[265] = 0;
   out_4295184962871595087[266] = 0;
   out_4295184962871595087[267] = 0;
   out_4295184962871595087[268] = 0;
   out_4295184962871595087[269] = 0;
   out_4295184962871595087[270] = 0;
   out_4295184962871595087[271] = 0;
   out_4295184962871595087[272] = 0;
   out_4295184962871595087[273] = 0;
   out_4295184962871595087[274] = 0;
   out_4295184962871595087[275] = 0;
   out_4295184962871595087[276] = 0;
   out_4295184962871595087[277] = 0;
   out_4295184962871595087[278] = 0;
   out_4295184962871595087[279] = 0;
   out_4295184962871595087[280] = 0;
   out_4295184962871595087[281] = 0;
   out_4295184962871595087[282] = 0;
   out_4295184962871595087[283] = 0;
   out_4295184962871595087[284] = 0;
   out_4295184962871595087[285] = 1.0;
   out_4295184962871595087[286] = 0;
   out_4295184962871595087[287] = 0;
   out_4295184962871595087[288] = 0;
   out_4295184962871595087[289] = 0;
   out_4295184962871595087[290] = 0;
   out_4295184962871595087[291] = 0;
   out_4295184962871595087[292] = 0;
   out_4295184962871595087[293] = 0;
   out_4295184962871595087[294] = 0;
   out_4295184962871595087[295] = 0;
   out_4295184962871595087[296] = 0;
   out_4295184962871595087[297] = 0;
   out_4295184962871595087[298] = 0;
   out_4295184962871595087[299] = 0;
   out_4295184962871595087[300] = 0;
   out_4295184962871595087[301] = 0;
   out_4295184962871595087[302] = 0;
   out_4295184962871595087[303] = 0;
   out_4295184962871595087[304] = 0;
   out_4295184962871595087[305] = 0;
   out_4295184962871595087[306] = 0;
   out_4295184962871595087[307] = 1.0;
   out_4295184962871595087[308] = 0;
   out_4295184962871595087[309] = 0;
   out_4295184962871595087[310] = 0;
   out_4295184962871595087[311] = 0;
   out_4295184962871595087[312] = 0;
   out_4295184962871595087[313] = 0;
   out_4295184962871595087[314] = 0;
   out_4295184962871595087[315] = 0;
   out_4295184962871595087[316] = 0;
   out_4295184962871595087[317] = 0;
   out_4295184962871595087[318] = 0;
   out_4295184962871595087[319] = 0;
   out_4295184962871595087[320] = 0;
   out_4295184962871595087[321] = 0;
   out_4295184962871595087[322] = 0;
   out_4295184962871595087[323] = 0;
   out_4295184962871595087[324] = 0;
   out_4295184962871595087[325] = 0;
   out_4295184962871595087[326] = 0;
   out_4295184962871595087[327] = 0;
   out_4295184962871595087[328] = 0;
   out_4295184962871595087[329] = 1.0;
   out_4295184962871595087[330] = 0;
   out_4295184962871595087[331] = 0;
   out_4295184962871595087[332] = 0;
   out_4295184962871595087[333] = 0;
   out_4295184962871595087[334] = 0;
   out_4295184962871595087[335] = 0;
   out_4295184962871595087[336] = 0;
   out_4295184962871595087[337] = 0;
   out_4295184962871595087[338] = 0;
   out_4295184962871595087[339] = 0;
   out_4295184962871595087[340] = 0;
   out_4295184962871595087[341] = 0;
   out_4295184962871595087[342] = 0;
   out_4295184962871595087[343] = 0;
   out_4295184962871595087[344] = 0;
   out_4295184962871595087[345] = 0;
   out_4295184962871595087[346] = 0;
   out_4295184962871595087[347] = 0;
   out_4295184962871595087[348] = 0;
   out_4295184962871595087[349] = 0;
   out_4295184962871595087[350] = 0;
   out_4295184962871595087[351] = 1.0;
   out_4295184962871595087[352] = 0;
   out_4295184962871595087[353] = 0;
   out_4295184962871595087[354] = 0;
   out_4295184962871595087[355] = 0;
   out_4295184962871595087[356] = 0;
   out_4295184962871595087[357] = 0;
   out_4295184962871595087[358] = 0;
   out_4295184962871595087[359] = 0;
   out_4295184962871595087[360] = 0;
   out_4295184962871595087[361] = 0;
   out_4295184962871595087[362] = 0;
   out_4295184962871595087[363] = 0;
   out_4295184962871595087[364] = 0;
   out_4295184962871595087[365] = 0;
   out_4295184962871595087[366] = 0;
   out_4295184962871595087[367] = 0;
   out_4295184962871595087[368] = 0;
   out_4295184962871595087[369] = 0;
   out_4295184962871595087[370] = 0;
   out_4295184962871595087[371] = 0;
   out_4295184962871595087[372] = 0;
   out_4295184962871595087[373] = 1.0;
   out_4295184962871595087[374] = 0;
   out_4295184962871595087[375] = 0;
   out_4295184962871595087[376] = 0;
   out_4295184962871595087[377] = 0;
   out_4295184962871595087[378] = 0;
   out_4295184962871595087[379] = 0;
   out_4295184962871595087[380] = 0;
   out_4295184962871595087[381] = 0;
   out_4295184962871595087[382] = 0;
   out_4295184962871595087[383] = 0;
   out_4295184962871595087[384] = 0;
   out_4295184962871595087[385] = 0;
   out_4295184962871595087[386] = 0;
   out_4295184962871595087[387] = 0;
   out_4295184962871595087[388] = 0;
   out_4295184962871595087[389] = 0;
   out_4295184962871595087[390] = 0;
   out_4295184962871595087[391] = 0;
   out_4295184962871595087[392] = 0;
   out_4295184962871595087[393] = 0;
   out_4295184962871595087[394] = 0;
   out_4295184962871595087[395] = 1.0;
   out_4295184962871595087[396] = 0;
   out_4295184962871595087[397] = 0;
   out_4295184962871595087[398] = 0;
   out_4295184962871595087[399] = 0;
   out_4295184962871595087[400] = 0;
   out_4295184962871595087[401] = 0;
   out_4295184962871595087[402] = 0;
   out_4295184962871595087[403] = 0;
   out_4295184962871595087[404] = 0;
   out_4295184962871595087[405] = 0;
   out_4295184962871595087[406] = 0;
   out_4295184962871595087[407] = 0;
   out_4295184962871595087[408] = 0;
   out_4295184962871595087[409] = 0;
   out_4295184962871595087[410] = 0;
   out_4295184962871595087[411] = 0;
   out_4295184962871595087[412] = 0;
   out_4295184962871595087[413] = 0;
   out_4295184962871595087[414] = 0;
   out_4295184962871595087[415] = 0;
   out_4295184962871595087[416] = 0;
   out_4295184962871595087[417] = 1.0;
   out_4295184962871595087[418] = 0;
   out_4295184962871595087[419] = 0;
   out_4295184962871595087[420] = 0;
   out_4295184962871595087[421] = 0;
   out_4295184962871595087[422] = 0;
   out_4295184962871595087[423] = 0;
   out_4295184962871595087[424] = 0;
   out_4295184962871595087[425] = 0;
   out_4295184962871595087[426] = 0;
   out_4295184962871595087[427] = 0;
   out_4295184962871595087[428] = 0;
   out_4295184962871595087[429] = 0;
   out_4295184962871595087[430] = 0;
   out_4295184962871595087[431] = 0;
   out_4295184962871595087[432] = 0;
   out_4295184962871595087[433] = 0;
   out_4295184962871595087[434] = 0;
   out_4295184962871595087[435] = 0;
   out_4295184962871595087[436] = 0;
   out_4295184962871595087[437] = 0;
   out_4295184962871595087[438] = 0;
   out_4295184962871595087[439] = 1.0;
   out_4295184962871595087[440] = 0;
   out_4295184962871595087[441] = 0;
   out_4295184962871595087[442] = 0;
   out_4295184962871595087[443] = 0;
   out_4295184962871595087[444] = 0;
   out_4295184962871595087[445] = 0;
   out_4295184962871595087[446] = 0;
   out_4295184962871595087[447] = 0;
   out_4295184962871595087[448] = 0;
   out_4295184962871595087[449] = 0;
   out_4295184962871595087[450] = 0;
   out_4295184962871595087[451] = 0;
   out_4295184962871595087[452] = 0;
   out_4295184962871595087[453] = 0;
   out_4295184962871595087[454] = 0;
   out_4295184962871595087[455] = 0;
   out_4295184962871595087[456] = 0;
   out_4295184962871595087[457] = 0;
   out_4295184962871595087[458] = 0;
   out_4295184962871595087[459] = 0;
   out_4295184962871595087[460] = 0;
   out_4295184962871595087[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5115592690309750942) {
   out_5115592690309750942[0] = dt*state[7] + state[0];
   out_5115592690309750942[1] = dt*state[8] + state[1];
   out_5115592690309750942[2] = dt*state[9] + state[2];
   out_5115592690309750942[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5115592690309750942[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5115592690309750942[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5115592690309750942[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5115592690309750942[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5115592690309750942[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5115592690309750942[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5115592690309750942[10] = state[10];
   out_5115592690309750942[11] = state[11];
   out_5115592690309750942[12] = state[12];
   out_5115592690309750942[13] = state[13];
   out_5115592690309750942[14] = state[14];
   out_5115592690309750942[15] = state[15];
   out_5115592690309750942[16] = state[16];
   out_5115592690309750942[17] = state[17];
   out_5115592690309750942[18] = state[18];
   out_5115592690309750942[19] = state[19];
   out_5115592690309750942[20] = state[20];
   out_5115592690309750942[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3088675301982415145) {
   out_3088675301982415145[0] = 1;
   out_3088675301982415145[1] = 0;
   out_3088675301982415145[2] = 0;
   out_3088675301982415145[3] = 0;
   out_3088675301982415145[4] = 0;
   out_3088675301982415145[5] = 0;
   out_3088675301982415145[6] = dt;
   out_3088675301982415145[7] = 0;
   out_3088675301982415145[8] = 0;
   out_3088675301982415145[9] = 0;
   out_3088675301982415145[10] = 0;
   out_3088675301982415145[11] = 0;
   out_3088675301982415145[12] = 0;
   out_3088675301982415145[13] = 0;
   out_3088675301982415145[14] = 0;
   out_3088675301982415145[15] = 0;
   out_3088675301982415145[16] = 0;
   out_3088675301982415145[17] = 0;
   out_3088675301982415145[18] = 0;
   out_3088675301982415145[19] = 0;
   out_3088675301982415145[20] = 0;
   out_3088675301982415145[21] = 0;
   out_3088675301982415145[22] = 1;
   out_3088675301982415145[23] = 0;
   out_3088675301982415145[24] = 0;
   out_3088675301982415145[25] = 0;
   out_3088675301982415145[26] = 0;
   out_3088675301982415145[27] = 0;
   out_3088675301982415145[28] = dt;
   out_3088675301982415145[29] = 0;
   out_3088675301982415145[30] = 0;
   out_3088675301982415145[31] = 0;
   out_3088675301982415145[32] = 0;
   out_3088675301982415145[33] = 0;
   out_3088675301982415145[34] = 0;
   out_3088675301982415145[35] = 0;
   out_3088675301982415145[36] = 0;
   out_3088675301982415145[37] = 0;
   out_3088675301982415145[38] = 0;
   out_3088675301982415145[39] = 0;
   out_3088675301982415145[40] = 0;
   out_3088675301982415145[41] = 0;
   out_3088675301982415145[42] = 0;
   out_3088675301982415145[43] = 0;
   out_3088675301982415145[44] = 1;
   out_3088675301982415145[45] = 0;
   out_3088675301982415145[46] = 0;
   out_3088675301982415145[47] = 0;
   out_3088675301982415145[48] = 0;
   out_3088675301982415145[49] = 0;
   out_3088675301982415145[50] = dt;
   out_3088675301982415145[51] = 0;
   out_3088675301982415145[52] = 0;
   out_3088675301982415145[53] = 0;
   out_3088675301982415145[54] = 0;
   out_3088675301982415145[55] = 0;
   out_3088675301982415145[56] = 0;
   out_3088675301982415145[57] = 0;
   out_3088675301982415145[58] = 0;
   out_3088675301982415145[59] = 0;
   out_3088675301982415145[60] = 0;
   out_3088675301982415145[61] = 0;
   out_3088675301982415145[62] = 0;
   out_3088675301982415145[63] = 0;
   out_3088675301982415145[64] = 0;
   out_3088675301982415145[65] = 0;
   out_3088675301982415145[66] = 1;
   out_3088675301982415145[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3088675301982415145[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3088675301982415145[69] = 0;
   out_3088675301982415145[70] = 0;
   out_3088675301982415145[71] = 0;
   out_3088675301982415145[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3088675301982415145[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3088675301982415145[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3088675301982415145[75] = 0;
   out_3088675301982415145[76] = 0;
   out_3088675301982415145[77] = 0;
   out_3088675301982415145[78] = 0;
   out_3088675301982415145[79] = 0;
   out_3088675301982415145[80] = 0;
   out_3088675301982415145[81] = 0;
   out_3088675301982415145[82] = 0;
   out_3088675301982415145[83] = 0;
   out_3088675301982415145[84] = 0;
   out_3088675301982415145[85] = 0;
   out_3088675301982415145[86] = 0;
   out_3088675301982415145[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3088675301982415145[88] = 1;
   out_3088675301982415145[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3088675301982415145[90] = 0;
   out_3088675301982415145[91] = 0;
   out_3088675301982415145[92] = 0;
   out_3088675301982415145[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3088675301982415145[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3088675301982415145[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3088675301982415145[96] = 0;
   out_3088675301982415145[97] = 0;
   out_3088675301982415145[98] = 0;
   out_3088675301982415145[99] = 0;
   out_3088675301982415145[100] = 0;
   out_3088675301982415145[101] = 0;
   out_3088675301982415145[102] = 0;
   out_3088675301982415145[103] = 0;
   out_3088675301982415145[104] = 0;
   out_3088675301982415145[105] = 0;
   out_3088675301982415145[106] = 0;
   out_3088675301982415145[107] = 0;
   out_3088675301982415145[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3088675301982415145[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3088675301982415145[110] = 1;
   out_3088675301982415145[111] = 0;
   out_3088675301982415145[112] = 0;
   out_3088675301982415145[113] = 0;
   out_3088675301982415145[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3088675301982415145[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3088675301982415145[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3088675301982415145[117] = 0;
   out_3088675301982415145[118] = 0;
   out_3088675301982415145[119] = 0;
   out_3088675301982415145[120] = 0;
   out_3088675301982415145[121] = 0;
   out_3088675301982415145[122] = 0;
   out_3088675301982415145[123] = 0;
   out_3088675301982415145[124] = 0;
   out_3088675301982415145[125] = 0;
   out_3088675301982415145[126] = 0;
   out_3088675301982415145[127] = 0;
   out_3088675301982415145[128] = 0;
   out_3088675301982415145[129] = 0;
   out_3088675301982415145[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3088675301982415145[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3088675301982415145[132] = 1;
   out_3088675301982415145[133] = 0;
   out_3088675301982415145[134] = 0;
   out_3088675301982415145[135] = 0;
   out_3088675301982415145[136] = 0;
   out_3088675301982415145[137] = 0;
   out_3088675301982415145[138] = 0;
   out_3088675301982415145[139] = 0;
   out_3088675301982415145[140] = 0;
   out_3088675301982415145[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3088675301982415145[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3088675301982415145[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3088675301982415145[144] = 0;
   out_3088675301982415145[145] = 0;
   out_3088675301982415145[146] = 0;
   out_3088675301982415145[147] = 0;
   out_3088675301982415145[148] = 0;
   out_3088675301982415145[149] = 0;
   out_3088675301982415145[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3088675301982415145[151] = 0;
   out_3088675301982415145[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3088675301982415145[153] = 0;
   out_3088675301982415145[154] = 1;
   out_3088675301982415145[155] = 0;
   out_3088675301982415145[156] = 0;
   out_3088675301982415145[157] = 0;
   out_3088675301982415145[158] = 0;
   out_3088675301982415145[159] = 0;
   out_3088675301982415145[160] = 0;
   out_3088675301982415145[161] = 0;
   out_3088675301982415145[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3088675301982415145[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3088675301982415145[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3088675301982415145[165] = 0;
   out_3088675301982415145[166] = 0;
   out_3088675301982415145[167] = 0;
   out_3088675301982415145[168] = 0;
   out_3088675301982415145[169] = 0;
   out_3088675301982415145[170] = 0;
   out_3088675301982415145[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3088675301982415145[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3088675301982415145[173] = 0;
   out_3088675301982415145[174] = 0;
   out_3088675301982415145[175] = 0;
   out_3088675301982415145[176] = 1;
   out_3088675301982415145[177] = 0;
   out_3088675301982415145[178] = 0;
   out_3088675301982415145[179] = 0;
   out_3088675301982415145[180] = 0;
   out_3088675301982415145[181] = 0;
   out_3088675301982415145[182] = 0;
   out_3088675301982415145[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3088675301982415145[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3088675301982415145[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3088675301982415145[186] = 0;
   out_3088675301982415145[187] = 0;
   out_3088675301982415145[188] = 0;
   out_3088675301982415145[189] = 0;
   out_3088675301982415145[190] = 0;
   out_3088675301982415145[191] = 0;
   out_3088675301982415145[192] = 0;
   out_3088675301982415145[193] = 0;
   out_3088675301982415145[194] = 0;
   out_3088675301982415145[195] = 0;
   out_3088675301982415145[196] = 0;
   out_3088675301982415145[197] = 0;
   out_3088675301982415145[198] = 1;
   out_3088675301982415145[199] = 0;
   out_3088675301982415145[200] = 0;
   out_3088675301982415145[201] = 0;
   out_3088675301982415145[202] = 0;
   out_3088675301982415145[203] = 0;
   out_3088675301982415145[204] = 0;
   out_3088675301982415145[205] = 0;
   out_3088675301982415145[206] = 0;
   out_3088675301982415145[207] = 0;
   out_3088675301982415145[208] = 0;
   out_3088675301982415145[209] = 0;
   out_3088675301982415145[210] = 0;
   out_3088675301982415145[211] = 0;
   out_3088675301982415145[212] = 0;
   out_3088675301982415145[213] = 0;
   out_3088675301982415145[214] = 0;
   out_3088675301982415145[215] = 0;
   out_3088675301982415145[216] = 0;
   out_3088675301982415145[217] = 0;
   out_3088675301982415145[218] = 0;
   out_3088675301982415145[219] = 0;
   out_3088675301982415145[220] = 1;
   out_3088675301982415145[221] = 0;
   out_3088675301982415145[222] = 0;
   out_3088675301982415145[223] = 0;
   out_3088675301982415145[224] = 0;
   out_3088675301982415145[225] = 0;
   out_3088675301982415145[226] = 0;
   out_3088675301982415145[227] = 0;
   out_3088675301982415145[228] = 0;
   out_3088675301982415145[229] = 0;
   out_3088675301982415145[230] = 0;
   out_3088675301982415145[231] = 0;
   out_3088675301982415145[232] = 0;
   out_3088675301982415145[233] = 0;
   out_3088675301982415145[234] = 0;
   out_3088675301982415145[235] = 0;
   out_3088675301982415145[236] = 0;
   out_3088675301982415145[237] = 0;
   out_3088675301982415145[238] = 0;
   out_3088675301982415145[239] = 0;
   out_3088675301982415145[240] = 0;
   out_3088675301982415145[241] = 0;
   out_3088675301982415145[242] = 1;
   out_3088675301982415145[243] = 0;
   out_3088675301982415145[244] = 0;
   out_3088675301982415145[245] = 0;
   out_3088675301982415145[246] = 0;
   out_3088675301982415145[247] = 0;
   out_3088675301982415145[248] = 0;
   out_3088675301982415145[249] = 0;
   out_3088675301982415145[250] = 0;
   out_3088675301982415145[251] = 0;
   out_3088675301982415145[252] = 0;
   out_3088675301982415145[253] = 0;
   out_3088675301982415145[254] = 0;
   out_3088675301982415145[255] = 0;
   out_3088675301982415145[256] = 0;
   out_3088675301982415145[257] = 0;
   out_3088675301982415145[258] = 0;
   out_3088675301982415145[259] = 0;
   out_3088675301982415145[260] = 0;
   out_3088675301982415145[261] = 0;
   out_3088675301982415145[262] = 0;
   out_3088675301982415145[263] = 0;
   out_3088675301982415145[264] = 1;
   out_3088675301982415145[265] = 0;
   out_3088675301982415145[266] = 0;
   out_3088675301982415145[267] = 0;
   out_3088675301982415145[268] = 0;
   out_3088675301982415145[269] = 0;
   out_3088675301982415145[270] = 0;
   out_3088675301982415145[271] = 0;
   out_3088675301982415145[272] = 0;
   out_3088675301982415145[273] = 0;
   out_3088675301982415145[274] = 0;
   out_3088675301982415145[275] = 0;
   out_3088675301982415145[276] = 0;
   out_3088675301982415145[277] = 0;
   out_3088675301982415145[278] = 0;
   out_3088675301982415145[279] = 0;
   out_3088675301982415145[280] = 0;
   out_3088675301982415145[281] = 0;
   out_3088675301982415145[282] = 0;
   out_3088675301982415145[283] = 0;
   out_3088675301982415145[284] = 0;
   out_3088675301982415145[285] = 0;
   out_3088675301982415145[286] = 1;
   out_3088675301982415145[287] = 0;
   out_3088675301982415145[288] = 0;
   out_3088675301982415145[289] = 0;
   out_3088675301982415145[290] = 0;
   out_3088675301982415145[291] = 0;
   out_3088675301982415145[292] = 0;
   out_3088675301982415145[293] = 0;
   out_3088675301982415145[294] = 0;
   out_3088675301982415145[295] = 0;
   out_3088675301982415145[296] = 0;
   out_3088675301982415145[297] = 0;
   out_3088675301982415145[298] = 0;
   out_3088675301982415145[299] = 0;
   out_3088675301982415145[300] = 0;
   out_3088675301982415145[301] = 0;
   out_3088675301982415145[302] = 0;
   out_3088675301982415145[303] = 0;
   out_3088675301982415145[304] = 0;
   out_3088675301982415145[305] = 0;
   out_3088675301982415145[306] = 0;
   out_3088675301982415145[307] = 0;
   out_3088675301982415145[308] = 1;
   out_3088675301982415145[309] = 0;
   out_3088675301982415145[310] = 0;
   out_3088675301982415145[311] = 0;
   out_3088675301982415145[312] = 0;
   out_3088675301982415145[313] = 0;
   out_3088675301982415145[314] = 0;
   out_3088675301982415145[315] = 0;
   out_3088675301982415145[316] = 0;
   out_3088675301982415145[317] = 0;
   out_3088675301982415145[318] = 0;
   out_3088675301982415145[319] = 0;
   out_3088675301982415145[320] = 0;
   out_3088675301982415145[321] = 0;
   out_3088675301982415145[322] = 0;
   out_3088675301982415145[323] = 0;
   out_3088675301982415145[324] = 0;
   out_3088675301982415145[325] = 0;
   out_3088675301982415145[326] = 0;
   out_3088675301982415145[327] = 0;
   out_3088675301982415145[328] = 0;
   out_3088675301982415145[329] = 0;
   out_3088675301982415145[330] = 1;
   out_3088675301982415145[331] = 0;
   out_3088675301982415145[332] = 0;
   out_3088675301982415145[333] = 0;
   out_3088675301982415145[334] = 0;
   out_3088675301982415145[335] = 0;
   out_3088675301982415145[336] = 0;
   out_3088675301982415145[337] = 0;
   out_3088675301982415145[338] = 0;
   out_3088675301982415145[339] = 0;
   out_3088675301982415145[340] = 0;
   out_3088675301982415145[341] = 0;
   out_3088675301982415145[342] = 0;
   out_3088675301982415145[343] = 0;
   out_3088675301982415145[344] = 0;
   out_3088675301982415145[345] = 0;
   out_3088675301982415145[346] = 0;
   out_3088675301982415145[347] = 0;
   out_3088675301982415145[348] = 0;
   out_3088675301982415145[349] = 0;
   out_3088675301982415145[350] = 0;
   out_3088675301982415145[351] = 0;
   out_3088675301982415145[352] = 1;
   out_3088675301982415145[353] = 0;
   out_3088675301982415145[354] = 0;
   out_3088675301982415145[355] = 0;
   out_3088675301982415145[356] = 0;
   out_3088675301982415145[357] = 0;
   out_3088675301982415145[358] = 0;
   out_3088675301982415145[359] = 0;
   out_3088675301982415145[360] = 0;
   out_3088675301982415145[361] = 0;
   out_3088675301982415145[362] = 0;
   out_3088675301982415145[363] = 0;
   out_3088675301982415145[364] = 0;
   out_3088675301982415145[365] = 0;
   out_3088675301982415145[366] = 0;
   out_3088675301982415145[367] = 0;
   out_3088675301982415145[368] = 0;
   out_3088675301982415145[369] = 0;
   out_3088675301982415145[370] = 0;
   out_3088675301982415145[371] = 0;
   out_3088675301982415145[372] = 0;
   out_3088675301982415145[373] = 0;
   out_3088675301982415145[374] = 1;
   out_3088675301982415145[375] = 0;
   out_3088675301982415145[376] = 0;
   out_3088675301982415145[377] = 0;
   out_3088675301982415145[378] = 0;
   out_3088675301982415145[379] = 0;
   out_3088675301982415145[380] = 0;
   out_3088675301982415145[381] = 0;
   out_3088675301982415145[382] = 0;
   out_3088675301982415145[383] = 0;
   out_3088675301982415145[384] = 0;
   out_3088675301982415145[385] = 0;
   out_3088675301982415145[386] = 0;
   out_3088675301982415145[387] = 0;
   out_3088675301982415145[388] = 0;
   out_3088675301982415145[389] = 0;
   out_3088675301982415145[390] = 0;
   out_3088675301982415145[391] = 0;
   out_3088675301982415145[392] = 0;
   out_3088675301982415145[393] = 0;
   out_3088675301982415145[394] = 0;
   out_3088675301982415145[395] = 0;
   out_3088675301982415145[396] = 1;
   out_3088675301982415145[397] = 0;
   out_3088675301982415145[398] = 0;
   out_3088675301982415145[399] = 0;
   out_3088675301982415145[400] = 0;
   out_3088675301982415145[401] = 0;
   out_3088675301982415145[402] = 0;
   out_3088675301982415145[403] = 0;
   out_3088675301982415145[404] = 0;
   out_3088675301982415145[405] = 0;
   out_3088675301982415145[406] = 0;
   out_3088675301982415145[407] = 0;
   out_3088675301982415145[408] = 0;
   out_3088675301982415145[409] = 0;
   out_3088675301982415145[410] = 0;
   out_3088675301982415145[411] = 0;
   out_3088675301982415145[412] = 0;
   out_3088675301982415145[413] = 0;
   out_3088675301982415145[414] = 0;
   out_3088675301982415145[415] = 0;
   out_3088675301982415145[416] = 0;
   out_3088675301982415145[417] = 0;
   out_3088675301982415145[418] = 1;
   out_3088675301982415145[419] = 0;
   out_3088675301982415145[420] = 0;
   out_3088675301982415145[421] = 0;
   out_3088675301982415145[422] = 0;
   out_3088675301982415145[423] = 0;
   out_3088675301982415145[424] = 0;
   out_3088675301982415145[425] = 0;
   out_3088675301982415145[426] = 0;
   out_3088675301982415145[427] = 0;
   out_3088675301982415145[428] = 0;
   out_3088675301982415145[429] = 0;
   out_3088675301982415145[430] = 0;
   out_3088675301982415145[431] = 0;
   out_3088675301982415145[432] = 0;
   out_3088675301982415145[433] = 0;
   out_3088675301982415145[434] = 0;
   out_3088675301982415145[435] = 0;
   out_3088675301982415145[436] = 0;
   out_3088675301982415145[437] = 0;
   out_3088675301982415145[438] = 0;
   out_3088675301982415145[439] = 0;
   out_3088675301982415145[440] = 1;
}
void h_4(double *state, double *unused, double *out_5710393782796894152) {
   out_5710393782796894152[0] = state[10] + state[13];
   out_5710393782796894152[1] = state[11] + state[14];
   out_5710393782796894152[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2987914032575237204) {
   out_2987914032575237204[0] = 0;
   out_2987914032575237204[1] = 0;
   out_2987914032575237204[2] = 0;
   out_2987914032575237204[3] = 0;
   out_2987914032575237204[4] = 0;
   out_2987914032575237204[5] = 0;
   out_2987914032575237204[6] = 0;
   out_2987914032575237204[7] = 0;
   out_2987914032575237204[8] = 0;
   out_2987914032575237204[9] = 0;
   out_2987914032575237204[10] = 1;
   out_2987914032575237204[11] = 0;
   out_2987914032575237204[12] = 0;
   out_2987914032575237204[13] = 1;
   out_2987914032575237204[14] = 0;
   out_2987914032575237204[15] = 0;
   out_2987914032575237204[16] = 0;
   out_2987914032575237204[17] = 0;
   out_2987914032575237204[18] = 0;
   out_2987914032575237204[19] = 0;
   out_2987914032575237204[20] = 0;
   out_2987914032575237204[21] = 0;
   out_2987914032575237204[22] = 0;
   out_2987914032575237204[23] = 0;
   out_2987914032575237204[24] = 0;
   out_2987914032575237204[25] = 0;
   out_2987914032575237204[26] = 0;
   out_2987914032575237204[27] = 0;
   out_2987914032575237204[28] = 0;
   out_2987914032575237204[29] = 0;
   out_2987914032575237204[30] = 0;
   out_2987914032575237204[31] = 0;
   out_2987914032575237204[32] = 0;
   out_2987914032575237204[33] = 1;
   out_2987914032575237204[34] = 0;
   out_2987914032575237204[35] = 0;
   out_2987914032575237204[36] = 1;
   out_2987914032575237204[37] = 0;
   out_2987914032575237204[38] = 0;
   out_2987914032575237204[39] = 0;
   out_2987914032575237204[40] = 0;
   out_2987914032575237204[41] = 0;
   out_2987914032575237204[42] = 0;
   out_2987914032575237204[43] = 0;
   out_2987914032575237204[44] = 0;
   out_2987914032575237204[45] = 0;
   out_2987914032575237204[46] = 0;
   out_2987914032575237204[47] = 0;
   out_2987914032575237204[48] = 0;
   out_2987914032575237204[49] = 0;
   out_2987914032575237204[50] = 0;
   out_2987914032575237204[51] = 0;
   out_2987914032575237204[52] = 0;
   out_2987914032575237204[53] = 0;
   out_2987914032575237204[54] = 0;
   out_2987914032575237204[55] = 0;
   out_2987914032575237204[56] = 1;
   out_2987914032575237204[57] = 0;
   out_2987914032575237204[58] = 0;
   out_2987914032575237204[59] = 1;
   out_2987914032575237204[60] = 0;
   out_2987914032575237204[61] = 0;
   out_2987914032575237204[62] = 0;
   out_2987914032575237204[63] = 0;
   out_2987914032575237204[64] = 0;
   out_2987914032575237204[65] = 0;
}
void h_9(double *state, double *unused, double *out_3954576494483260624) {
   out_3954576494483260624[0] = state[10];
   out_3954576494483260624[1] = state[11];
   out_3954576494483260624[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2746724385945646559) {
   out_2746724385945646559[0] = 0;
   out_2746724385945646559[1] = 0;
   out_2746724385945646559[2] = 0;
   out_2746724385945646559[3] = 0;
   out_2746724385945646559[4] = 0;
   out_2746724385945646559[5] = 0;
   out_2746724385945646559[6] = 0;
   out_2746724385945646559[7] = 0;
   out_2746724385945646559[8] = 0;
   out_2746724385945646559[9] = 0;
   out_2746724385945646559[10] = 1;
   out_2746724385945646559[11] = 0;
   out_2746724385945646559[12] = 0;
   out_2746724385945646559[13] = 0;
   out_2746724385945646559[14] = 0;
   out_2746724385945646559[15] = 0;
   out_2746724385945646559[16] = 0;
   out_2746724385945646559[17] = 0;
   out_2746724385945646559[18] = 0;
   out_2746724385945646559[19] = 0;
   out_2746724385945646559[20] = 0;
   out_2746724385945646559[21] = 0;
   out_2746724385945646559[22] = 0;
   out_2746724385945646559[23] = 0;
   out_2746724385945646559[24] = 0;
   out_2746724385945646559[25] = 0;
   out_2746724385945646559[26] = 0;
   out_2746724385945646559[27] = 0;
   out_2746724385945646559[28] = 0;
   out_2746724385945646559[29] = 0;
   out_2746724385945646559[30] = 0;
   out_2746724385945646559[31] = 0;
   out_2746724385945646559[32] = 0;
   out_2746724385945646559[33] = 1;
   out_2746724385945646559[34] = 0;
   out_2746724385945646559[35] = 0;
   out_2746724385945646559[36] = 0;
   out_2746724385945646559[37] = 0;
   out_2746724385945646559[38] = 0;
   out_2746724385945646559[39] = 0;
   out_2746724385945646559[40] = 0;
   out_2746724385945646559[41] = 0;
   out_2746724385945646559[42] = 0;
   out_2746724385945646559[43] = 0;
   out_2746724385945646559[44] = 0;
   out_2746724385945646559[45] = 0;
   out_2746724385945646559[46] = 0;
   out_2746724385945646559[47] = 0;
   out_2746724385945646559[48] = 0;
   out_2746724385945646559[49] = 0;
   out_2746724385945646559[50] = 0;
   out_2746724385945646559[51] = 0;
   out_2746724385945646559[52] = 0;
   out_2746724385945646559[53] = 0;
   out_2746724385945646559[54] = 0;
   out_2746724385945646559[55] = 0;
   out_2746724385945646559[56] = 1;
   out_2746724385945646559[57] = 0;
   out_2746724385945646559[58] = 0;
   out_2746724385945646559[59] = 0;
   out_2746724385945646559[60] = 0;
   out_2746724385945646559[61] = 0;
   out_2746724385945646559[62] = 0;
   out_2746724385945646559[63] = 0;
   out_2746724385945646559[64] = 0;
   out_2746724385945646559[65] = 0;
}
void h_10(double *state, double *unused, double *out_6889954022225579478) {
   out_6889954022225579478[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6889954022225579478[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6889954022225579478[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2321828454944106839) {
   out_2321828454944106839[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2321828454944106839[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2321828454944106839[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2321828454944106839[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2321828454944106839[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2321828454944106839[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2321828454944106839[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2321828454944106839[7] = 0;
   out_2321828454944106839[8] = 0;
   out_2321828454944106839[9] = 0;
   out_2321828454944106839[10] = 0;
   out_2321828454944106839[11] = 0;
   out_2321828454944106839[12] = 0;
   out_2321828454944106839[13] = 0;
   out_2321828454944106839[14] = 0;
   out_2321828454944106839[15] = 0;
   out_2321828454944106839[16] = 1;
   out_2321828454944106839[17] = 0;
   out_2321828454944106839[18] = 0;
   out_2321828454944106839[19] = 1;
   out_2321828454944106839[20] = 0;
   out_2321828454944106839[21] = 0;
   out_2321828454944106839[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2321828454944106839[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2321828454944106839[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2321828454944106839[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2321828454944106839[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2321828454944106839[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2321828454944106839[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2321828454944106839[29] = 0;
   out_2321828454944106839[30] = 0;
   out_2321828454944106839[31] = 0;
   out_2321828454944106839[32] = 0;
   out_2321828454944106839[33] = 0;
   out_2321828454944106839[34] = 0;
   out_2321828454944106839[35] = 0;
   out_2321828454944106839[36] = 0;
   out_2321828454944106839[37] = 0;
   out_2321828454944106839[38] = 0;
   out_2321828454944106839[39] = 1;
   out_2321828454944106839[40] = 0;
   out_2321828454944106839[41] = 0;
   out_2321828454944106839[42] = 1;
   out_2321828454944106839[43] = 0;
   out_2321828454944106839[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2321828454944106839[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2321828454944106839[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2321828454944106839[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2321828454944106839[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2321828454944106839[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2321828454944106839[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2321828454944106839[51] = 0;
   out_2321828454944106839[52] = 0;
   out_2321828454944106839[53] = 0;
   out_2321828454944106839[54] = 0;
   out_2321828454944106839[55] = 0;
   out_2321828454944106839[56] = 0;
   out_2321828454944106839[57] = 0;
   out_2321828454944106839[58] = 0;
   out_2321828454944106839[59] = 0;
   out_2321828454944106839[60] = 0;
   out_2321828454944106839[61] = 0;
   out_2321828454944106839[62] = 1;
   out_2321828454944106839[63] = 0;
   out_2321828454944106839[64] = 0;
   out_2321828454944106839[65] = 1;
}
void h_12(double *state, double *unused, double *out_4454861798004054201) {
   out_4454861798004054201[0] = state[0];
   out_4454861798004054201[1] = state[1];
   out_4454861798004054201[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2031542375456724591) {
   out_2031542375456724591[0] = 1;
   out_2031542375456724591[1] = 0;
   out_2031542375456724591[2] = 0;
   out_2031542375456724591[3] = 0;
   out_2031542375456724591[4] = 0;
   out_2031542375456724591[5] = 0;
   out_2031542375456724591[6] = 0;
   out_2031542375456724591[7] = 0;
   out_2031542375456724591[8] = 0;
   out_2031542375456724591[9] = 0;
   out_2031542375456724591[10] = 0;
   out_2031542375456724591[11] = 0;
   out_2031542375456724591[12] = 0;
   out_2031542375456724591[13] = 0;
   out_2031542375456724591[14] = 0;
   out_2031542375456724591[15] = 0;
   out_2031542375456724591[16] = 0;
   out_2031542375456724591[17] = 0;
   out_2031542375456724591[18] = 0;
   out_2031542375456724591[19] = 0;
   out_2031542375456724591[20] = 0;
   out_2031542375456724591[21] = 0;
   out_2031542375456724591[22] = 0;
   out_2031542375456724591[23] = 1;
   out_2031542375456724591[24] = 0;
   out_2031542375456724591[25] = 0;
   out_2031542375456724591[26] = 0;
   out_2031542375456724591[27] = 0;
   out_2031542375456724591[28] = 0;
   out_2031542375456724591[29] = 0;
   out_2031542375456724591[30] = 0;
   out_2031542375456724591[31] = 0;
   out_2031542375456724591[32] = 0;
   out_2031542375456724591[33] = 0;
   out_2031542375456724591[34] = 0;
   out_2031542375456724591[35] = 0;
   out_2031542375456724591[36] = 0;
   out_2031542375456724591[37] = 0;
   out_2031542375456724591[38] = 0;
   out_2031542375456724591[39] = 0;
   out_2031542375456724591[40] = 0;
   out_2031542375456724591[41] = 0;
   out_2031542375456724591[42] = 0;
   out_2031542375456724591[43] = 0;
   out_2031542375456724591[44] = 0;
   out_2031542375456724591[45] = 0;
   out_2031542375456724591[46] = 1;
   out_2031542375456724591[47] = 0;
   out_2031542375456724591[48] = 0;
   out_2031542375456724591[49] = 0;
   out_2031542375456724591[50] = 0;
   out_2031542375456724591[51] = 0;
   out_2031542375456724591[52] = 0;
   out_2031542375456724591[53] = 0;
   out_2031542375456724591[54] = 0;
   out_2031542375456724591[55] = 0;
   out_2031542375456724591[56] = 0;
   out_2031542375456724591[57] = 0;
   out_2031542375456724591[58] = 0;
   out_2031542375456724591[59] = 0;
   out_2031542375456724591[60] = 0;
   out_2031542375456724591[61] = 0;
   out_2031542375456724591[62] = 0;
   out_2031542375456724591[63] = 0;
   out_2031542375456724591[64] = 0;
   out_2031542375456724591[65] = 0;
}
void h_35(double *state, double *unused, double *out_5620060991852582617) {
   out_5620060991852582617[0] = state[7];
   out_5620060991852582617[1] = state[8];
   out_5620060991852582617[2] = state[9];
}
void H_35(double *state, double *unused, double *out_378748024797370172) {
   out_378748024797370172[0] = 0;
   out_378748024797370172[1] = 0;
   out_378748024797370172[2] = 0;
   out_378748024797370172[3] = 0;
   out_378748024797370172[4] = 0;
   out_378748024797370172[5] = 0;
   out_378748024797370172[6] = 0;
   out_378748024797370172[7] = 1;
   out_378748024797370172[8] = 0;
   out_378748024797370172[9] = 0;
   out_378748024797370172[10] = 0;
   out_378748024797370172[11] = 0;
   out_378748024797370172[12] = 0;
   out_378748024797370172[13] = 0;
   out_378748024797370172[14] = 0;
   out_378748024797370172[15] = 0;
   out_378748024797370172[16] = 0;
   out_378748024797370172[17] = 0;
   out_378748024797370172[18] = 0;
   out_378748024797370172[19] = 0;
   out_378748024797370172[20] = 0;
   out_378748024797370172[21] = 0;
   out_378748024797370172[22] = 0;
   out_378748024797370172[23] = 0;
   out_378748024797370172[24] = 0;
   out_378748024797370172[25] = 0;
   out_378748024797370172[26] = 0;
   out_378748024797370172[27] = 0;
   out_378748024797370172[28] = 0;
   out_378748024797370172[29] = 0;
   out_378748024797370172[30] = 1;
   out_378748024797370172[31] = 0;
   out_378748024797370172[32] = 0;
   out_378748024797370172[33] = 0;
   out_378748024797370172[34] = 0;
   out_378748024797370172[35] = 0;
   out_378748024797370172[36] = 0;
   out_378748024797370172[37] = 0;
   out_378748024797370172[38] = 0;
   out_378748024797370172[39] = 0;
   out_378748024797370172[40] = 0;
   out_378748024797370172[41] = 0;
   out_378748024797370172[42] = 0;
   out_378748024797370172[43] = 0;
   out_378748024797370172[44] = 0;
   out_378748024797370172[45] = 0;
   out_378748024797370172[46] = 0;
   out_378748024797370172[47] = 0;
   out_378748024797370172[48] = 0;
   out_378748024797370172[49] = 0;
   out_378748024797370172[50] = 0;
   out_378748024797370172[51] = 0;
   out_378748024797370172[52] = 0;
   out_378748024797370172[53] = 1;
   out_378748024797370172[54] = 0;
   out_378748024797370172[55] = 0;
   out_378748024797370172[56] = 0;
   out_378748024797370172[57] = 0;
   out_378748024797370172[58] = 0;
   out_378748024797370172[59] = 0;
   out_378748024797370172[60] = 0;
   out_378748024797370172[61] = 0;
   out_378748024797370172[62] = 0;
   out_378748024797370172[63] = 0;
   out_378748024797370172[64] = 0;
   out_378748024797370172[65] = 0;
}
void h_32(double *state, double *unused, double *out_8575046110308319096) {
   out_8575046110308319096[0] = state[3];
   out_8575046110308319096[1] = state[4];
   out_8575046110308319096[2] = state[5];
   out_8575046110308319096[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1266091484913529430) {
   out_1266091484913529430[0] = 0;
   out_1266091484913529430[1] = 0;
   out_1266091484913529430[2] = 0;
   out_1266091484913529430[3] = 1;
   out_1266091484913529430[4] = 0;
   out_1266091484913529430[5] = 0;
   out_1266091484913529430[6] = 0;
   out_1266091484913529430[7] = 0;
   out_1266091484913529430[8] = 0;
   out_1266091484913529430[9] = 0;
   out_1266091484913529430[10] = 0;
   out_1266091484913529430[11] = 0;
   out_1266091484913529430[12] = 0;
   out_1266091484913529430[13] = 0;
   out_1266091484913529430[14] = 0;
   out_1266091484913529430[15] = 0;
   out_1266091484913529430[16] = 0;
   out_1266091484913529430[17] = 0;
   out_1266091484913529430[18] = 0;
   out_1266091484913529430[19] = 0;
   out_1266091484913529430[20] = 0;
   out_1266091484913529430[21] = 0;
   out_1266091484913529430[22] = 0;
   out_1266091484913529430[23] = 0;
   out_1266091484913529430[24] = 0;
   out_1266091484913529430[25] = 0;
   out_1266091484913529430[26] = 1;
   out_1266091484913529430[27] = 0;
   out_1266091484913529430[28] = 0;
   out_1266091484913529430[29] = 0;
   out_1266091484913529430[30] = 0;
   out_1266091484913529430[31] = 0;
   out_1266091484913529430[32] = 0;
   out_1266091484913529430[33] = 0;
   out_1266091484913529430[34] = 0;
   out_1266091484913529430[35] = 0;
   out_1266091484913529430[36] = 0;
   out_1266091484913529430[37] = 0;
   out_1266091484913529430[38] = 0;
   out_1266091484913529430[39] = 0;
   out_1266091484913529430[40] = 0;
   out_1266091484913529430[41] = 0;
   out_1266091484913529430[42] = 0;
   out_1266091484913529430[43] = 0;
   out_1266091484913529430[44] = 0;
   out_1266091484913529430[45] = 0;
   out_1266091484913529430[46] = 0;
   out_1266091484913529430[47] = 0;
   out_1266091484913529430[48] = 0;
   out_1266091484913529430[49] = 1;
   out_1266091484913529430[50] = 0;
   out_1266091484913529430[51] = 0;
   out_1266091484913529430[52] = 0;
   out_1266091484913529430[53] = 0;
   out_1266091484913529430[54] = 0;
   out_1266091484913529430[55] = 0;
   out_1266091484913529430[56] = 0;
   out_1266091484913529430[57] = 0;
   out_1266091484913529430[58] = 0;
   out_1266091484913529430[59] = 0;
   out_1266091484913529430[60] = 0;
   out_1266091484913529430[61] = 0;
   out_1266091484913529430[62] = 0;
   out_1266091484913529430[63] = 0;
   out_1266091484913529430[64] = 0;
   out_1266091484913529430[65] = 0;
   out_1266091484913529430[66] = 0;
   out_1266091484913529430[67] = 0;
   out_1266091484913529430[68] = 0;
   out_1266091484913529430[69] = 0;
   out_1266091484913529430[70] = 0;
   out_1266091484913529430[71] = 0;
   out_1266091484913529430[72] = 1;
   out_1266091484913529430[73] = 0;
   out_1266091484913529430[74] = 0;
   out_1266091484913529430[75] = 0;
   out_1266091484913529430[76] = 0;
   out_1266091484913529430[77] = 0;
   out_1266091484913529430[78] = 0;
   out_1266091484913529430[79] = 0;
   out_1266091484913529430[80] = 0;
   out_1266091484913529430[81] = 0;
   out_1266091484913529430[82] = 0;
   out_1266091484913529430[83] = 0;
   out_1266091484913529430[84] = 0;
   out_1266091484913529430[85] = 0;
   out_1266091484913529430[86] = 0;
   out_1266091484913529430[87] = 0;
}
void h_13(double *state, double *unused, double *out_7258967790393439300) {
   out_7258967790393439300[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7258967790393439300[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7258967790393439300[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4668847084540179673) {
   out_4668847084540179673[0] = 0;
   out_4668847084540179673[1] = 0;
   out_4668847084540179673[2] = 0;
   out_4668847084540179673[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4668847084540179673[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4668847084540179673[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4668847084540179673[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4668847084540179673[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4668847084540179673[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4668847084540179673[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4668847084540179673[10] = 0;
   out_4668847084540179673[11] = 0;
   out_4668847084540179673[12] = 0;
   out_4668847084540179673[13] = 0;
   out_4668847084540179673[14] = 0;
   out_4668847084540179673[15] = 0;
   out_4668847084540179673[16] = 0;
   out_4668847084540179673[17] = 0;
   out_4668847084540179673[18] = 0;
   out_4668847084540179673[19] = 0;
   out_4668847084540179673[20] = 0;
   out_4668847084540179673[21] = 0;
   out_4668847084540179673[22] = 0;
   out_4668847084540179673[23] = 0;
   out_4668847084540179673[24] = 0;
   out_4668847084540179673[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4668847084540179673[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4668847084540179673[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4668847084540179673[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4668847084540179673[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4668847084540179673[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4668847084540179673[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4668847084540179673[32] = 0;
   out_4668847084540179673[33] = 0;
   out_4668847084540179673[34] = 0;
   out_4668847084540179673[35] = 0;
   out_4668847084540179673[36] = 0;
   out_4668847084540179673[37] = 0;
   out_4668847084540179673[38] = 0;
   out_4668847084540179673[39] = 0;
   out_4668847084540179673[40] = 0;
   out_4668847084540179673[41] = 0;
   out_4668847084540179673[42] = 0;
   out_4668847084540179673[43] = 0;
   out_4668847084540179673[44] = 0;
   out_4668847084540179673[45] = 0;
   out_4668847084540179673[46] = 0;
   out_4668847084540179673[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4668847084540179673[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4668847084540179673[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4668847084540179673[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4668847084540179673[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4668847084540179673[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4668847084540179673[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4668847084540179673[54] = 0;
   out_4668847084540179673[55] = 0;
   out_4668847084540179673[56] = 0;
   out_4668847084540179673[57] = 0;
   out_4668847084540179673[58] = 0;
   out_4668847084540179673[59] = 0;
   out_4668847084540179673[60] = 0;
   out_4668847084540179673[61] = 0;
   out_4668847084540179673[62] = 0;
   out_4668847084540179673[63] = 0;
   out_4668847084540179673[64] = 0;
   out_4668847084540179673[65] = 0;
}
void h_14(double *state, double *unused, double *out_3954576494483260624) {
   out_3954576494483260624[0] = state[10];
   out_3954576494483260624[1] = state[11];
   out_3954576494483260624[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2746724385945646559) {
   out_2746724385945646559[0] = 0;
   out_2746724385945646559[1] = 0;
   out_2746724385945646559[2] = 0;
   out_2746724385945646559[3] = 0;
   out_2746724385945646559[4] = 0;
   out_2746724385945646559[5] = 0;
   out_2746724385945646559[6] = 0;
   out_2746724385945646559[7] = 0;
   out_2746724385945646559[8] = 0;
   out_2746724385945646559[9] = 0;
   out_2746724385945646559[10] = 1;
   out_2746724385945646559[11] = 0;
   out_2746724385945646559[12] = 0;
   out_2746724385945646559[13] = 0;
   out_2746724385945646559[14] = 0;
   out_2746724385945646559[15] = 0;
   out_2746724385945646559[16] = 0;
   out_2746724385945646559[17] = 0;
   out_2746724385945646559[18] = 0;
   out_2746724385945646559[19] = 0;
   out_2746724385945646559[20] = 0;
   out_2746724385945646559[21] = 0;
   out_2746724385945646559[22] = 0;
   out_2746724385945646559[23] = 0;
   out_2746724385945646559[24] = 0;
   out_2746724385945646559[25] = 0;
   out_2746724385945646559[26] = 0;
   out_2746724385945646559[27] = 0;
   out_2746724385945646559[28] = 0;
   out_2746724385945646559[29] = 0;
   out_2746724385945646559[30] = 0;
   out_2746724385945646559[31] = 0;
   out_2746724385945646559[32] = 0;
   out_2746724385945646559[33] = 1;
   out_2746724385945646559[34] = 0;
   out_2746724385945646559[35] = 0;
   out_2746724385945646559[36] = 0;
   out_2746724385945646559[37] = 0;
   out_2746724385945646559[38] = 0;
   out_2746724385945646559[39] = 0;
   out_2746724385945646559[40] = 0;
   out_2746724385945646559[41] = 0;
   out_2746724385945646559[42] = 0;
   out_2746724385945646559[43] = 0;
   out_2746724385945646559[44] = 0;
   out_2746724385945646559[45] = 0;
   out_2746724385945646559[46] = 0;
   out_2746724385945646559[47] = 0;
   out_2746724385945646559[48] = 0;
   out_2746724385945646559[49] = 0;
   out_2746724385945646559[50] = 0;
   out_2746724385945646559[51] = 0;
   out_2746724385945646559[52] = 0;
   out_2746724385945646559[53] = 0;
   out_2746724385945646559[54] = 0;
   out_2746724385945646559[55] = 0;
   out_2746724385945646559[56] = 1;
   out_2746724385945646559[57] = 0;
   out_2746724385945646559[58] = 0;
   out_2746724385945646559[59] = 0;
   out_2746724385945646559[60] = 0;
   out_2746724385945646559[61] = 0;
   out_2746724385945646559[62] = 0;
   out_2746724385945646559[63] = 0;
   out_2746724385945646559[64] = 0;
   out_2746724385945646559[65] = 0;
}
void h_33(double *state, double *unused, double *out_3414685795134678859) {
   out_3414685795134678859[0] = state[16];
   out_3414685795134678859[1] = state[17];
   out_3414685795134678859[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3529305029436227776) {
   out_3529305029436227776[0] = 0;
   out_3529305029436227776[1] = 0;
   out_3529305029436227776[2] = 0;
   out_3529305029436227776[3] = 0;
   out_3529305029436227776[4] = 0;
   out_3529305029436227776[5] = 0;
   out_3529305029436227776[6] = 0;
   out_3529305029436227776[7] = 0;
   out_3529305029436227776[8] = 0;
   out_3529305029436227776[9] = 0;
   out_3529305029436227776[10] = 0;
   out_3529305029436227776[11] = 0;
   out_3529305029436227776[12] = 0;
   out_3529305029436227776[13] = 0;
   out_3529305029436227776[14] = 0;
   out_3529305029436227776[15] = 0;
   out_3529305029436227776[16] = 1;
   out_3529305029436227776[17] = 0;
   out_3529305029436227776[18] = 0;
   out_3529305029436227776[19] = 0;
   out_3529305029436227776[20] = 0;
   out_3529305029436227776[21] = 0;
   out_3529305029436227776[22] = 0;
   out_3529305029436227776[23] = 0;
   out_3529305029436227776[24] = 0;
   out_3529305029436227776[25] = 0;
   out_3529305029436227776[26] = 0;
   out_3529305029436227776[27] = 0;
   out_3529305029436227776[28] = 0;
   out_3529305029436227776[29] = 0;
   out_3529305029436227776[30] = 0;
   out_3529305029436227776[31] = 0;
   out_3529305029436227776[32] = 0;
   out_3529305029436227776[33] = 0;
   out_3529305029436227776[34] = 0;
   out_3529305029436227776[35] = 0;
   out_3529305029436227776[36] = 0;
   out_3529305029436227776[37] = 0;
   out_3529305029436227776[38] = 0;
   out_3529305029436227776[39] = 1;
   out_3529305029436227776[40] = 0;
   out_3529305029436227776[41] = 0;
   out_3529305029436227776[42] = 0;
   out_3529305029436227776[43] = 0;
   out_3529305029436227776[44] = 0;
   out_3529305029436227776[45] = 0;
   out_3529305029436227776[46] = 0;
   out_3529305029436227776[47] = 0;
   out_3529305029436227776[48] = 0;
   out_3529305029436227776[49] = 0;
   out_3529305029436227776[50] = 0;
   out_3529305029436227776[51] = 0;
   out_3529305029436227776[52] = 0;
   out_3529305029436227776[53] = 0;
   out_3529305029436227776[54] = 0;
   out_3529305029436227776[55] = 0;
   out_3529305029436227776[56] = 0;
   out_3529305029436227776[57] = 0;
   out_3529305029436227776[58] = 0;
   out_3529305029436227776[59] = 0;
   out_3529305029436227776[60] = 0;
   out_3529305029436227776[61] = 0;
   out_3529305029436227776[62] = 1;
   out_3529305029436227776[63] = 0;
   out_3529305029436227776[64] = 0;
   out_3529305029436227776[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_9148775728180059471) {
  H(in_vec, out_9148775728180059471);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3413010025723617094) {
  err_fun(nom_x, delta_x, out_3413010025723617094);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3779670744092566616) {
  inv_err_fun(nom_x, true_x, out_3779670744092566616);
}
void live_H_mod_fun(double *state, double *out_4295184962871595087) {
  H_mod_fun(state, out_4295184962871595087);
}
void live_f_fun(double *state, double dt, double *out_5115592690309750942) {
  f_fun(state,  dt, out_5115592690309750942);
}
void live_F_fun(double *state, double dt, double *out_3088675301982415145) {
  F_fun(state,  dt, out_3088675301982415145);
}
void live_h_4(double *state, double *unused, double *out_5710393782796894152) {
  h_4(state, unused, out_5710393782796894152);
}
void live_H_4(double *state, double *unused, double *out_2987914032575237204) {
  H_4(state, unused, out_2987914032575237204);
}
void live_h_9(double *state, double *unused, double *out_3954576494483260624) {
  h_9(state, unused, out_3954576494483260624);
}
void live_H_9(double *state, double *unused, double *out_2746724385945646559) {
  H_9(state, unused, out_2746724385945646559);
}
void live_h_10(double *state, double *unused, double *out_6889954022225579478) {
  h_10(state, unused, out_6889954022225579478);
}
void live_H_10(double *state, double *unused, double *out_2321828454944106839) {
  H_10(state, unused, out_2321828454944106839);
}
void live_h_12(double *state, double *unused, double *out_4454861798004054201) {
  h_12(state, unused, out_4454861798004054201);
}
void live_H_12(double *state, double *unused, double *out_2031542375456724591) {
  H_12(state, unused, out_2031542375456724591);
}
void live_h_35(double *state, double *unused, double *out_5620060991852582617) {
  h_35(state, unused, out_5620060991852582617);
}
void live_H_35(double *state, double *unused, double *out_378748024797370172) {
  H_35(state, unused, out_378748024797370172);
}
void live_h_32(double *state, double *unused, double *out_8575046110308319096) {
  h_32(state, unused, out_8575046110308319096);
}
void live_H_32(double *state, double *unused, double *out_1266091484913529430) {
  H_32(state, unused, out_1266091484913529430);
}
void live_h_13(double *state, double *unused, double *out_7258967790393439300) {
  h_13(state, unused, out_7258967790393439300);
}
void live_H_13(double *state, double *unused, double *out_4668847084540179673) {
  H_13(state, unused, out_4668847084540179673);
}
void live_h_14(double *state, double *unused, double *out_3954576494483260624) {
  h_14(state, unused, out_3954576494483260624);
}
void live_H_14(double *state, double *unused, double *out_2746724385945646559) {
  H_14(state, unused, out_2746724385945646559);
}
void live_h_33(double *state, double *unused, double *out_3414685795134678859) {
  h_33(state, unused, out_3414685795134678859);
}
void live_H_33(double *state, double *unused, double *out_3529305029436227776) {
  H_33(state, unused, out_3529305029436227776);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
