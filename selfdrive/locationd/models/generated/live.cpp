#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4901497926982652881) {
   out_4901497926982652881[0] = 0;
   out_4901497926982652881[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4901497926982652881[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4901497926982652881[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4901497926982652881[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4901497926982652881[5] = -sin(in_vec[1]);
   out_4901497926982652881[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4901497926982652881[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4901497926982652881[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4901497926982652881[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4901497926982652881[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4901497926982652881[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4901497926982652881[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4901497926982652881[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4901497926982652881[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4901497926982652881[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4901497926982652881[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4901497926982652881[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4218550092640272468) {
   out_4218550092640272468[0] = delta_x[0] + nom_x[0];
   out_4218550092640272468[1] = delta_x[1] + nom_x[1];
   out_4218550092640272468[2] = delta_x[2] + nom_x[2];
   out_4218550092640272468[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4218550092640272468[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4218550092640272468[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4218550092640272468[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4218550092640272468[7] = delta_x[6] + nom_x[7];
   out_4218550092640272468[8] = delta_x[7] + nom_x[8];
   out_4218550092640272468[9] = delta_x[8] + nom_x[9];
   out_4218550092640272468[10] = delta_x[9] + nom_x[10];
   out_4218550092640272468[11] = delta_x[10] + nom_x[11];
   out_4218550092640272468[12] = delta_x[11] + nom_x[12];
   out_4218550092640272468[13] = delta_x[12] + nom_x[13];
   out_4218550092640272468[14] = delta_x[13] + nom_x[14];
   out_4218550092640272468[15] = delta_x[14] + nom_x[15];
   out_4218550092640272468[16] = delta_x[15] + nom_x[16];
   out_4218550092640272468[17] = delta_x[16] + nom_x[17];
   out_4218550092640272468[18] = delta_x[17] + nom_x[18];
   out_4218550092640272468[19] = delta_x[18] + nom_x[19];
   out_4218550092640272468[20] = delta_x[19] + nom_x[20];
   out_4218550092640272468[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7473104647569890902) {
   out_7473104647569890902[0] = -nom_x[0] + true_x[0];
   out_7473104647569890902[1] = -nom_x[1] + true_x[1];
   out_7473104647569890902[2] = -nom_x[2] + true_x[2];
   out_7473104647569890902[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7473104647569890902[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7473104647569890902[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7473104647569890902[6] = -nom_x[7] + true_x[7];
   out_7473104647569890902[7] = -nom_x[8] + true_x[8];
   out_7473104647569890902[8] = -nom_x[9] + true_x[9];
   out_7473104647569890902[9] = -nom_x[10] + true_x[10];
   out_7473104647569890902[10] = -nom_x[11] + true_x[11];
   out_7473104647569890902[11] = -nom_x[12] + true_x[12];
   out_7473104647569890902[12] = -nom_x[13] + true_x[13];
   out_7473104647569890902[13] = -nom_x[14] + true_x[14];
   out_7473104647569890902[14] = -nom_x[15] + true_x[15];
   out_7473104647569890902[15] = -nom_x[16] + true_x[16];
   out_7473104647569890902[16] = -nom_x[17] + true_x[17];
   out_7473104647569890902[17] = -nom_x[18] + true_x[18];
   out_7473104647569890902[18] = -nom_x[19] + true_x[19];
   out_7473104647569890902[19] = -nom_x[20] + true_x[20];
   out_7473104647569890902[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1172482510687413770) {
   out_1172482510687413770[0] = 1.0;
   out_1172482510687413770[1] = 0;
   out_1172482510687413770[2] = 0;
   out_1172482510687413770[3] = 0;
   out_1172482510687413770[4] = 0;
   out_1172482510687413770[5] = 0;
   out_1172482510687413770[6] = 0;
   out_1172482510687413770[7] = 0;
   out_1172482510687413770[8] = 0;
   out_1172482510687413770[9] = 0;
   out_1172482510687413770[10] = 0;
   out_1172482510687413770[11] = 0;
   out_1172482510687413770[12] = 0;
   out_1172482510687413770[13] = 0;
   out_1172482510687413770[14] = 0;
   out_1172482510687413770[15] = 0;
   out_1172482510687413770[16] = 0;
   out_1172482510687413770[17] = 0;
   out_1172482510687413770[18] = 0;
   out_1172482510687413770[19] = 0;
   out_1172482510687413770[20] = 0;
   out_1172482510687413770[21] = 0;
   out_1172482510687413770[22] = 1.0;
   out_1172482510687413770[23] = 0;
   out_1172482510687413770[24] = 0;
   out_1172482510687413770[25] = 0;
   out_1172482510687413770[26] = 0;
   out_1172482510687413770[27] = 0;
   out_1172482510687413770[28] = 0;
   out_1172482510687413770[29] = 0;
   out_1172482510687413770[30] = 0;
   out_1172482510687413770[31] = 0;
   out_1172482510687413770[32] = 0;
   out_1172482510687413770[33] = 0;
   out_1172482510687413770[34] = 0;
   out_1172482510687413770[35] = 0;
   out_1172482510687413770[36] = 0;
   out_1172482510687413770[37] = 0;
   out_1172482510687413770[38] = 0;
   out_1172482510687413770[39] = 0;
   out_1172482510687413770[40] = 0;
   out_1172482510687413770[41] = 0;
   out_1172482510687413770[42] = 0;
   out_1172482510687413770[43] = 0;
   out_1172482510687413770[44] = 1.0;
   out_1172482510687413770[45] = 0;
   out_1172482510687413770[46] = 0;
   out_1172482510687413770[47] = 0;
   out_1172482510687413770[48] = 0;
   out_1172482510687413770[49] = 0;
   out_1172482510687413770[50] = 0;
   out_1172482510687413770[51] = 0;
   out_1172482510687413770[52] = 0;
   out_1172482510687413770[53] = 0;
   out_1172482510687413770[54] = 0;
   out_1172482510687413770[55] = 0;
   out_1172482510687413770[56] = 0;
   out_1172482510687413770[57] = 0;
   out_1172482510687413770[58] = 0;
   out_1172482510687413770[59] = 0;
   out_1172482510687413770[60] = 0;
   out_1172482510687413770[61] = 0;
   out_1172482510687413770[62] = 0;
   out_1172482510687413770[63] = 0;
   out_1172482510687413770[64] = 0;
   out_1172482510687413770[65] = 0;
   out_1172482510687413770[66] = -0.5*state[4];
   out_1172482510687413770[67] = -0.5*state[5];
   out_1172482510687413770[68] = -0.5*state[6];
   out_1172482510687413770[69] = 0;
   out_1172482510687413770[70] = 0;
   out_1172482510687413770[71] = 0;
   out_1172482510687413770[72] = 0;
   out_1172482510687413770[73] = 0;
   out_1172482510687413770[74] = 0;
   out_1172482510687413770[75] = 0;
   out_1172482510687413770[76] = 0;
   out_1172482510687413770[77] = 0;
   out_1172482510687413770[78] = 0;
   out_1172482510687413770[79] = 0;
   out_1172482510687413770[80] = 0;
   out_1172482510687413770[81] = 0;
   out_1172482510687413770[82] = 0;
   out_1172482510687413770[83] = 0;
   out_1172482510687413770[84] = 0;
   out_1172482510687413770[85] = 0;
   out_1172482510687413770[86] = 0;
   out_1172482510687413770[87] = 0.5*state[3];
   out_1172482510687413770[88] = 0.5*state[6];
   out_1172482510687413770[89] = -0.5*state[5];
   out_1172482510687413770[90] = 0;
   out_1172482510687413770[91] = 0;
   out_1172482510687413770[92] = 0;
   out_1172482510687413770[93] = 0;
   out_1172482510687413770[94] = 0;
   out_1172482510687413770[95] = 0;
   out_1172482510687413770[96] = 0;
   out_1172482510687413770[97] = 0;
   out_1172482510687413770[98] = 0;
   out_1172482510687413770[99] = 0;
   out_1172482510687413770[100] = 0;
   out_1172482510687413770[101] = 0;
   out_1172482510687413770[102] = 0;
   out_1172482510687413770[103] = 0;
   out_1172482510687413770[104] = 0;
   out_1172482510687413770[105] = 0;
   out_1172482510687413770[106] = 0;
   out_1172482510687413770[107] = 0;
   out_1172482510687413770[108] = -0.5*state[6];
   out_1172482510687413770[109] = 0.5*state[3];
   out_1172482510687413770[110] = 0.5*state[4];
   out_1172482510687413770[111] = 0;
   out_1172482510687413770[112] = 0;
   out_1172482510687413770[113] = 0;
   out_1172482510687413770[114] = 0;
   out_1172482510687413770[115] = 0;
   out_1172482510687413770[116] = 0;
   out_1172482510687413770[117] = 0;
   out_1172482510687413770[118] = 0;
   out_1172482510687413770[119] = 0;
   out_1172482510687413770[120] = 0;
   out_1172482510687413770[121] = 0;
   out_1172482510687413770[122] = 0;
   out_1172482510687413770[123] = 0;
   out_1172482510687413770[124] = 0;
   out_1172482510687413770[125] = 0;
   out_1172482510687413770[126] = 0;
   out_1172482510687413770[127] = 0;
   out_1172482510687413770[128] = 0;
   out_1172482510687413770[129] = 0.5*state[5];
   out_1172482510687413770[130] = -0.5*state[4];
   out_1172482510687413770[131] = 0.5*state[3];
   out_1172482510687413770[132] = 0;
   out_1172482510687413770[133] = 0;
   out_1172482510687413770[134] = 0;
   out_1172482510687413770[135] = 0;
   out_1172482510687413770[136] = 0;
   out_1172482510687413770[137] = 0;
   out_1172482510687413770[138] = 0;
   out_1172482510687413770[139] = 0;
   out_1172482510687413770[140] = 0;
   out_1172482510687413770[141] = 0;
   out_1172482510687413770[142] = 0;
   out_1172482510687413770[143] = 0;
   out_1172482510687413770[144] = 0;
   out_1172482510687413770[145] = 0;
   out_1172482510687413770[146] = 0;
   out_1172482510687413770[147] = 0;
   out_1172482510687413770[148] = 0;
   out_1172482510687413770[149] = 0;
   out_1172482510687413770[150] = 0;
   out_1172482510687413770[151] = 0;
   out_1172482510687413770[152] = 0;
   out_1172482510687413770[153] = 1.0;
   out_1172482510687413770[154] = 0;
   out_1172482510687413770[155] = 0;
   out_1172482510687413770[156] = 0;
   out_1172482510687413770[157] = 0;
   out_1172482510687413770[158] = 0;
   out_1172482510687413770[159] = 0;
   out_1172482510687413770[160] = 0;
   out_1172482510687413770[161] = 0;
   out_1172482510687413770[162] = 0;
   out_1172482510687413770[163] = 0;
   out_1172482510687413770[164] = 0;
   out_1172482510687413770[165] = 0;
   out_1172482510687413770[166] = 0;
   out_1172482510687413770[167] = 0;
   out_1172482510687413770[168] = 0;
   out_1172482510687413770[169] = 0;
   out_1172482510687413770[170] = 0;
   out_1172482510687413770[171] = 0;
   out_1172482510687413770[172] = 0;
   out_1172482510687413770[173] = 0;
   out_1172482510687413770[174] = 0;
   out_1172482510687413770[175] = 1.0;
   out_1172482510687413770[176] = 0;
   out_1172482510687413770[177] = 0;
   out_1172482510687413770[178] = 0;
   out_1172482510687413770[179] = 0;
   out_1172482510687413770[180] = 0;
   out_1172482510687413770[181] = 0;
   out_1172482510687413770[182] = 0;
   out_1172482510687413770[183] = 0;
   out_1172482510687413770[184] = 0;
   out_1172482510687413770[185] = 0;
   out_1172482510687413770[186] = 0;
   out_1172482510687413770[187] = 0;
   out_1172482510687413770[188] = 0;
   out_1172482510687413770[189] = 0;
   out_1172482510687413770[190] = 0;
   out_1172482510687413770[191] = 0;
   out_1172482510687413770[192] = 0;
   out_1172482510687413770[193] = 0;
   out_1172482510687413770[194] = 0;
   out_1172482510687413770[195] = 0;
   out_1172482510687413770[196] = 0;
   out_1172482510687413770[197] = 1.0;
   out_1172482510687413770[198] = 0;
   out_1172482510687413770[199] = 0;
   out_1172482510687413770[200] = 0;
   out_1172482510687413770[201] = 0;
   out_1172482510687413770[202] = 0;
   out_1172482510687413770[203] = 0;
   out_1172482510687413770[204] = 0;
   out_1172482510687413770[205] = 0;
   out_1172482510687413770[206] = 0;
   out_1172482510687413770[207] = 0;
   out_1172482510687413770[208] = 0;
   out_1172482510687413770[209] = 0;
   out_1172482510687413770[210] = 0;
   out_1172482510687413770[211] = 0;
   out_1172482510687413770[212] = 0;
   out_1172482510687413770[213] = 0;
   out_1172482510687413770[214] = 0;
   out_1172482510687413770[215] = 0;
   out_1172482510687413770[216] = 0;
   out_1172482510687413770[217] = 0;
   out_1172482510687413770[218] = 0;
   out_1172482510687413770[219] = 1.0;
   out_1172482510687413770[220] = 0;
   out_1172482510687413770[221] = 0;
   out_1172482510687413770[222] = 0;
   out_1172482510687413770[223] = 0;
   out_1172482510687413770[224] = 0;
   out_1172482510687413770[225] = 0;
   out_1172482510687413770[226] = 0;
   out_1172482510687413770[227] = 0;
   out_1172482510687413770[228] = 0;
   out_1172482510687413770[229] = 0;
   out_1172482510687413770[230] = 0;
   out_1172482510687413770[231] = 0;
   out_1172482510687413770[232] = 0;
   out_1172482510687413770[233] = 0;
   out_1172482510687413770[234] = 0;
   out_1172482510687413770[235] = 0;
   out_1172482510687413770[236] = 0;
   out_1172482510687413770[237] = 0;
   out_1172482510687413770[238] = 0;
   out_1172482510687413770[239] = 0;
   out_1172482510687413770[240] = 0;
   out_1172482510687413770[241] = 1.0;
   out_1172482510687413770[242] = 0;
   out_1172482510687413770[243] = 0;
   out_1172482510687413770[244] = 0;
   out_1172482510687413770[245] = 0;
   out_1172482510687413770[246] = 0;
   out_1172482510687413770[247] = 0;
   out_1172482510687413770[248] = 0;
   out_1172482510687413770[249] = 0;
   out_1172482510687413770[250] = 0;
   out_1172482510687413770[251] = 0;
   out_1172482510687413770[252] = 0;
   out_1172482510687413770[253] = 0;
   out_1172482510687413770[254] = 0;
   out_1172482510687413770[255] = 0;
   out_1172482510687413770[256] = 0;
   out_1172482510687413770[257] = 0;
   out_1172482510687413770[258] = 0;
   out_1172482510687413770[259] = 0;
   out_1172482510687413770[260] = 0;
   out_1172482510687413770[261] = 0;
   out_1172482510687413770[262] = 0;
   out_1172482510687413770[263] = 1.0;
   out_1172482510687413770[264] = 0;
   out_1172482510687413770[265] = 0;
   out_1172482510687413770[266] = 0;
   out_1172482510687413770[267] = 0;
   out_1172482510687413770[268] = 0;
   out_1172482510687413770[269] = 0;
   out_1172482510687413770[270] = 0;
   out_1172482510687413770[271] = 0;
   out_1172482510687413770[272] = 0;
   out_1172482510687413770[273] = 0;
   out_1172482510687413770[274] = 0;
   out_1172482510687413770[275] = 0;
   out_1172482510687413770[276] = 0;
   out_1172482510687413770[277] = 0;
   out_1172482510687413770[278] = 0;
   out_1172482510687413770[279] = 0;
   out_1172482510687413770[280] = 0;
   out_1172482510687413770[281] = 0;
   out_1172482510687413770[282] = 0;
   out_1172482510687413770[283] = 0;
   out_1172482510687413770[284] = 0;
   out_1172482510687413770[285] = 1.0;
   out_1172482510687413770[286] = 0;
   out_1172482510687413770[287] = 0;
   out_1172482510687413770[288] = 0;
   out_1172482510687413770[289] = 0;
   out_1172482510687413770[290] = 0;
   out_1172482510687413770[291] = 0;
   out_1172482510687413770[292] = 0;
   out_1172482510687413770[293] = 0;
   out_1172482510687413770[294] = 0;
   out_1172482510687413770[295] = 0;
   out_1172482510687413770[296] = 0;
   out_1172482510687413770[297] = 0;
   out_1172482510687413770[298] = 0;
   out_1172482510687413770[299] = 0;
   out_1172482510687413770[300] = 0;
   out_1172482510687413770[301] = 0;
   out_1172482510687413770[302] = 0;
   out_1172482510687413770[303] = 0;
   out_1172482510687413770[304] = 0;
   out_1172482510687413770[305] = 0;
   out_1172482510687413770[306] = 0;
   out_1172482510687413770[307] = 1.0;
   out_1172482510687413770[308] = 0;
   out_1172482510687413770[309] = 0;
   out_1172482510687413770[310] = 0;
   out_1172482510687413770[311] = 0;
   out_1172482510687413770[312] = 0;
   out_1172482510687413770[313] = 0;
   out_1172482510687413770[314] = 0;
   out_1172482510687413770[315] = 0;
   out_1172482510687413770[316] = 0;
   out_1172482510687413770[317] = 0;
   out_1172482510687413770[318] = 0;
   out_1172482510687413770[319] = 0;
   out_1172482510687413770[320] = 0;
   out_1172482510687413770[321] = 0;
   out_1172482510687413770[322] = 0;
   out_1172482510687413770[323] = 0;
   out_1172482510687413770[324] = 0;
   out_1172482510687413770[325] = 0;
   out_1172482510687413770[326] = 0;
   out_1172482510687413770[327] = 0;
   out_1172482510687413770[328] = 0;
   out_1172482510687413770[329] = 1.0;
   out_1172482510687413770[330] = 0;
   out_1172482510687413770[331] = 0;
   out_1172482510687413770[332] = 0;
   out_1172482510687413770[333] = 0;
   out_1172482510687413770[334] = 0;
   out_1172482510687413770[335] = 0;
   out_1172482510687413770[336] = 0;
   out_1172482510687413770[337] = 0;
   out_1172482510687413770[338] = 0;
   out_1172482510687413770[339] = 0;
   out_1172482510687413770[340] = 0;
   out_1172482510687413770[341] = 0;
   out_1172482510687413770[342] = 0;
   out_1172482510687413770[343] = 0;
   out_1172482510687413770[344] = 0;
   out_1172482510687413770[345] = 0;
   out_1172482510687413770[346] = 0;
   out_1172482510687413770[347] = 0;
   out_1172482510687413770[348] = 0;
   out_1172482510687413770[349] = 0;
   out_1172482510687413770[350] = 0;
   out_1172482510687413770[351] = 1.0;
   out_1172482510687413770[352] = 0;
   out_1172482510687413770[353] = 0;
   out_1172482510687413770[354] = 0;
   out_1172482510687413770[355] = 0;
   out_1172482510687413770[356] = 0;
   out_1172482510687413770[357] = 0;
   out_1172482510687413770[358] = 0;
   out_1172482510687413770[359] = 0;
   out_1172482510687413770[360] = 0;
   out_1172482510687413770[361] = 0;
   out_1172482510687413770[362] = 0;
   out_1172482510687413770[363] = 0;
   out_1172482510687413770[364] = 0;
   out_1172482510687413770[365] = 0;
   out_1172482510687413770[366] = 0;
   out_1172482510687413770[367] = 0;
   out_1172482510687413770[368] = 0;
   out_1172482510687413770[369] = 0;
   out_1172482510687413770[370] = 0;
   out_1172482510687413770[371] = 0;
   out_1172482510687413770[372] = 0;
   out_1172482510687413770[373] = 1.0;
   out_1172482510687413770[374] = 0;
   out_1172482510687413770[375] = 0;
   out_1172482510687413770[376] = 0;
   out_1172482510687413770[377] = 0;
   out_1172482510687413770[378] = 0;
   out_1172482510687413770[379] = 0;
   out_1172482510687413770[380] = 0;
   out_1172482510687413770[381] = 0;
   out_1172482510687413770[382] = 0;
   out_1172482510687413770[383] = 0;
   out_1172482510687413770[384] = 0;
   out_1172482510687413770[385] = 0;
   out_1172482510687413770[386] = 0;
   out_1172482510687413770[387] = 0;
   out_1172482510687413770[388] = 0;
   out_1172482510687413770[389] = 0;
   out_1172482510687413770[390] = 0;
   out_1172482510687413770[391] = 0;
   out_1172482510687413770[392] = 0;
   out_1172482510687413770[393] = 0;
   out_1172482510687413770[394] = 0;
   out_1172482510687413770[395] = 1.0;
   out_1172482510687413770[396] = 0;
   out_1172482510687413770[397] = 0;
   out_1172482510687413770[398] = 0;
   out_1172482510687413770[399] = 0;
   out_1172482510687413770[400] = 0;
   out_1172482510687413770[401] = 0;
   out_1172482510687413770[402] = 0;
   out_1172482510687413770[403] = 0;
   out_1172482510687413770[404] = 0;
   out_1172482510687413770[405] = 0;
   out_1172482510687413770[406] = 0;
   out_1172482510687413770[407] = 0;
   out_1172482510687413770[408] = 0;
   out_1172482510687413770[409] = 0;
   out_1172482510687413770[410] = 0;
   out_1172482510687413770[411] = 0;
   out_1172482510687413770[412] = 0;
   out_1172482510687413770[413] = 0;
   out_1172482510687413770[414] = 0;
   out_1172482510687413770[415] = 0;
   out_1172482510687413770[416] = 0;
   out_1172482510687413770[417] = 1.0;
   out_1172482510687413770[418] = 0;
   out_1172482510687413770[419] = 0;
   out_1172482510687413770[420] = 0;
   out_1172482510687413770[421] = 0;
   out_1172482510687413770[422] = 0;
   out_1172482510687413770[423] = 0;
   out_1172482510687413770[424] = 0;
   out_1172482510687413770[425] = 0;
   out_1172482510687413770[426] = 0;
   out_1172482510687413770[427] = 0;
   out_1172482510687413770[428] = 0;
   out_1172482510687413770[429] = 0;
   out_1172482510687413770[430] = 0;
   out_1172482510687413770[431] = 0;
   out_1172482510687413770[432] = 0;
   out_1172482510687413770[433] = 0;
   out_1172482510687413770[434] = 0;
   out_1172482510687413770[435] = 0;
   out_1172482510687413770[436] = 0;
   out_1172482510687413770[437] = 0;
   out_1172482510687413770[438] = 0;
   out_1172482510687413770[439] = 1.0;
   out_1172482510687413770[440] = 0;
   out_1172482510687413770[441] = 0;
   out_1172482510687413770[442] = 0;
   out_1172482510687413770[443] = 0;
   out_1172482510687413770[444] = 0;
   out_1172482510687413770[445] = 0;
   out_1172482510687413770[446] = 0;
   out_1172482510687413770[447] = 0;
   out_1172482510687413770[448] = 0;
   out_1172482510687413770[449] = 0;
   out_1172482510687413770[450] = 0;
   out_1172482510687413770[451] = 0;
   out_1172482510687413770[452] = 0;
   out_1172482510687413770[453] = 0;
   out_1172482510687413770[454] = 0;
   out_1172482510687413770[455] = 0;
   out_1172482510687413770[456] = 0;
   out_1172482510687413770[457] = 0;
   out_1172482510687413770[458] = 0;
   out_1172482510687413770[459] = 0;
   out_1172482510687413770[460] = 0;
   out_1172482510687413770[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6680059142450056333) {
   out_6680059142450056333[0] = dt*state[7] + state[0];
   out_6680059142450056333[1] = dt*state[8] + state[1];
   out_6680059142450056333[2] = dt*state[9] + state[2];
   out_6680059142450056333[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6680059142450056333[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6680059142450056333[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6680059142450056333[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6680059142450056333[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6680059142450056333[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6680059142450056333[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6680059142450056333[10] = state[10];
   out_6680059142450056333[11] = state[11];
   out_6680059142450056333[12] = state[12];
   out_6680059142450056333[13] = state[13];
   out_6680059142450056333[14] = state[14];
   out_6680059142450056333[15] = state[15];
   out_6680059142450056333[16] = state[16];
   out_6680059142450056333[17] = state[17];
   out_6680059142450056333[18] = state[18];
   out_6680059142450056333[19] = state[19];
   out_6680059142450056333[20] = state[20];
   out_6680059142450056333[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6093395981269628726) {
   out_6093395981269628726[0] = 1;
   out_6093395981269628726[1] = 0;
   out_6093395981269628726[2] = 0;
   out_6093395981269628726[3] = 0;
   out_6093395981269628726[4] = 0;
   out_6093395981269628726[5] = 0;
   out_6093395981269628726[6] = dt;
   out_6093395981269628726[7] = 0;
   out_6093395981269628726[8] = 0;
   out_6093395981269628726[9] = 0;
   out_6093395981269628726[10] = 0;
   out_6093395981269628726[11] = 0;
   out_6093395981269628726[12] = 0;
   out_6093395981269628726[13] = 0;
   out_6093395981269628726[14] = 0;
   out_6093395981269628726[15] = 0;
   out_6093395981269628726[16] = 0;
   out_6093395981269628726[17] = 0;
   out_6093395981269628726[18] = 0;
   out_6093395981269628726[19] = 0;
   out_6093395981269628726[20] = 0;
   out_6093395981269628726[21] = 0;
   out_6093395981269628726[22] = 1;
   out_6093395981269628726[23] = 0;
   out_6093395981269628726[24] = 0;
   out_6093395981269628726[25] = 0;
   out_6093395981269628726[26] = 0;
   out_6093395981269628726[27] = 0;
   out_6093395981269628726[28] = dt;
   out_6093395981269628726[29] = 0;
   out_6093395981269628726[30] = 0;
   out_6093395981269628726[31] = 0;
   out_6093395981269628726[32] = 0;
   out_6093395981269628726[33] = 0;
   out_6093395981269628726[34] = 0;
   out_6093395981269628726[35] = 0;
   out_6093395981269628726[36] = 0;
   out_6093395981269628726[37] = 0;
   out_6093395981269628726[38] = 0;
   out_6093395981269628726[39] = 0;
   out_6093395981269628726[40] = 0;
   out_6093395981269628726[41] = 0;
   out_6093395981269628726[42] = 0;
   out_6093395981269628726[43] = 0;
   out_6093395981269628726[44] = 1;
   out_6093395981269628726[45] = 0;
   out_6093395981269628726[46] = 0;
   out_6093395981269628726[47] = 0;
   out_6093395981269628726[48] = 0;
   out_6093395981269628726[49] = 0;
   out_6093395981269628726[50] = dt;
   out_6093395981269628726[51] = 0;
   out_6093395981269628726[52] = 0;
   out_6093395981269628726[53] = 0;
   out_6093395981269628726[54] = 0;
   out_6093395981269628726[55] = 0;
   out_6093395981269628726[56] = 0;
   out_6093395981269628726[57] = 0;
   out_6093395981269628726[58] = 0;
   out_6093395981269628726[59] = 0;
   out_6093395981269628726[60] = 0;
   out_6093395981269628726[61] = 0;
   out_6093395981269628726[62] = 0;
   out_6093395981269628726[63] = 0;
   out_6093395981269628726[64] = 0;
   out_6093395981269628726[65] = 0;
   out_6093395981269628726[66] = 1;
   out_6093395981269628726[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6093395981269628726[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6093395981269628726[69] = 0;
   out_6093395981269628726[70] = 0;
   out_6093395981269628726[71] = 0;
   out_6093395981269628726[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6093395981269628726[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6093395981269628726[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6093395981269628726[75] = 0;
   out_6093395981269628726[76] = 0;
   out_6093395981269628726[77] = 0;
   out_6093395981269628726[78] = 0;
   out_6093395981269628726[79] = 0;
   out_6093395981269628726[80] = 0;
   out_6093395981269628726[81] = 0;
   out_6093395981269628726[82] = 0;
   out_6093395981269628726[83] = 0;
   out_6093395981269628726[84] = 0;
   out_6093395981269628726[85] = 0;
   out_6093395981269628726[86] = 0;
   out_6093395981269628726[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6093395981269628726[88] = 1;
   out_6093395981269628726[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6093395981269628726[90] = 0;
   out_6093395981269628726[91] = 0;
   out_6093395981269628726[92] = 0;
   out_6093395981269628726[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6093395981269628726[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6093395981269628726[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6093395981269628726[96] = 0;
   out_6093395981269628726[97] = 0;
   out_6093395981269628726[98] = 0;
   out_6093395981269628726[99] = 0;
   out_6093395981269628726[100] = 0;
   out_6093395981269628726[101] = 0;
   out_6093395981269628726[102] = 0;
   out_6093395981269628726[103] = 0;
   out_6093395981269628726[104] = 0;
   out_6093395981269628726[105] = 0;
   out_6093395981269628726[106] = 0;
   out_6093395981269628726[107] = 0;
   out_6093395981269628726[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6093395981269628726[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6093395981269628726[110] = 1;
   out_6093395981269628726[111] = 0;
   out_6093395981269628726[112] = 0;
   out_6093395981269628726[113] = 0;
   out_6093395981269628726[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6093395981269628726[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6093395981269628726[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6093395981269628726[117] = 0;
   out_6093395981269628726[118] = 0;
   out_6093395981269628726[119] = 0;
   out_6093395981269628726[120] = 0;
   out_6093395981269628726[121] = 0;
   out_6093395981269628726[122] = 0;
   out_6093395981269628726[123] = 0;
   out_6093395981269628726[124] = 0;
   out_6093395981269628726[125] = 0;
   out_6093395981269628726[126] = 0;
   out_6093395981269628726[127] = 0;
   out_6093395981269628726[128] = 0;
   out_6093395981269628726[129] = 0;
   out_6093395981269628726[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6093395981269628726[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6093395981269628726[132] = 1;
   out_6093395981269628726[133] = 0;
   out_6093395981269628726[134] = 0;
   out_6093395981269628726[135] = 0;
   out_6093395981269628726[136] = 0;
   out_6093395981269628726[137] = 0;
   out_6093395981269628726[138] = 0;
   out_6093395981269628726[139] = 0;
   out_6093395981269628726[140] = 0;
   out_6093395981269628726[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6093395981269628726[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6093395981269628726[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6093395981269628726[144] = 0;
   out_6093395981269628726[145] = 0;
   out_6093395981269628726[146] = 0;
   out_6093395981269628726[147] = 0;
   out_6093395981269628726[148] = 0;
   out_6093395981269628726[149] = 0;
   out_6093395981269628726[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6093395981269628726[151] = 0;
   out_6093395981269628726[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6093395981269628726[153] = 0;
   out_6093395981269628726[154] = 1;
   out_6093395981269628726[155] = 0;
   out_6093395981269628726[156] = 0;
   out_6093395981269628726[157] = 0;
   out_6093395981269628726[158] = 0;
   out_6093395981269628726[159] = 0;
   out_6093395981269628726[160] = 0;
   out_6093395981269628726[161] = 0;
   out_6093395981269628726[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6093395981269628726[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6093395981269628726[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6093395981269628726[165] = 0;
   out_6093395981269628726[166] = 0;
   out_6093395981269628726[167] = 0;
   out_6093395981269628726[168] = 0;
   out_6093395981269628726[169] = 0;
   out_6093395981269628726[170] = 0;
   out_6093395981269628726[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6093395981269628726[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6093395981269628726[173] = 0;
   out_6093395981269628726[174] = 0;
   out_6093395981269628726[175] = 0;
   out_6093395981269628726[176] = 1;
   out_6093395981269628726[177] = 0;
   out_6093395981269628726[178] = 0;
   out_6093395981269628726[179] = 0;
   out_6093395981269628726[180] = 0;
   out_6093395981269628726[181] = 0;
   out_6093395981269628726[182] = 0;
   out_6093395981269628726[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6093395981269628726[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6093395981269628726[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6093395981269628726[186] = 0;
   out_6093395981269628726[187] = 0;
   out_6093395981269628726[188] = 0;
   out_6093395981269628726[189] = 0;
   out_6093395981269628726[190] = 0;
   out_6093395981269628726[191] = 0;
   out_6093395981269628726[192] = 0;
   out_6093395981269628726[193] = 0;
   out_6093395981269628726[194] = 0;
   out_6093395981269628726[195] = 0;
   out_6093395981269628726[196] = 0;
   out_6093395981269628726[197] = 0;
   out_6093395981269628726[198] = 1;
   out_6093395981269628726[199] = 0;
   out_6093395981269628726[200] = 0;
   out_6093395981269628726[201] = 0;
   out_6093395981269628726[202] = 0;
   out_6093395981269628726[203] = 0;
   out_6093395981269628726[204] = 0;
   out_6093395981269628726[205] = 0;
   out_6093395981269628726[206] = 0;
   out_6093395981269628726[207] = 0;
   out_6093395981269628726[208] = 0;
   out_6093395981269628726[209] = 0;
   out_6093395981269628726[210] = 0;
   out_6093395981269628726[211] = 0;
   out_6093395981269628726[212] = 0;
   out_6093395981269628726[213] = 0;
   out_6093395981269628726[214] = 0;
   out_6093395981269628726[215] = 0;
   out_6093395981269628726[216] = 0;
   out_6093395981269628726[217] = 0;
   out_6093395981269628726[218] = 0;
   out_6093395981269628726[219] = 0;
   out_6093395981269628726[220] = 1;
   out_6093395981269628726[221] = 0;
   out_6093395981269628726[222] = 0;
   out_6093395981269628726[223] = 0;
   out_6093395981269628726[224] = 0;
   out_6093395981269628726[225] = 0;
   out_6093395981269628726[226] = 0;
   out_6093395981269628726[227] = 0;
   out_6093395981269628726[228] = 0;
   out_6093395981269628726[229] = 0;
   out_6093395981269628726[230] = 0;
   out_6093395981269628726[231] = 0;
   out_6093395981269628726[232] = 0;
   out_6093395981269628726[233] = 0;
   out_6093395981269628726[234] = 0;
   out_6093395981269628726[235] = 0;
   out_6093395981269628726[236] = 0;
   out_6093395981269628726[237] = 0;
   out_6093395981269628726[238] = 0;
   out_6093395981269628726[239] = 0;
   out_6093395981269628726[240] = 0;
   out_6093395981269628726[241] = 0;
   out_6093395981269628726[242] = 1;
   out_6093395981269628726[243] = 0;
   out_6093395981269628726[244] = 0;
   out_6093395981269628726[245] = 0;
   out_6093395981269628726[246] = 0;
   out_6093395981269628726[247] = 0;
   out_6093395981269628726[248] = 0;
   out_6093395981269628726[249] = 0;
   out_6093395981269628726[250] = 0;
   out_6093395981269628726[251] = 0;
   out_6093395981269628726[252] = 0;
   out_6093395981269628726[253] = 0;
   out_6093395981269628726[254] = 0;
   out_6093395981269628726[255] = 0;
   out_6093395981269628726[256] = 0;
   out_6093395981269628726[257] = 0;
   out_6093395981269628726[258] = 0;
   out_6093395981269628726[259] = 0;
   out_6093395981269628726[260] = 0;
   out_6093395981269628726[261] = 0;
   out_6093395981269628726[262] = 0;
   out_6093395981269628726[263] = 0;
   out_6093395981269628726[264] = 1;
   out_6093395981269628726[265] = 0;
   out_6093395981269628726[266] = 0;
   out_6093395981269628726[267] = 0;
   out_6093395981269628726[268] = 0;
   out_6093395981269628726[269] = 0;
   out_6093395981269628726[270] = 0;
   out_6093395981269628726[271] = 0;
   out_6093395981269628726[272] = 0;
   out_6093395981269628726[273] = 0;
   out_6093395981269628726[274] = 0;
   out_6093395981269628726[275] = 0;
   out_6093395981269628726[276] = 0;
   out_6093395981269628726[277] = 0;
   out_6093395981269628726[278] = 0;
   out_6093395981269628726[279] = 0;
   out_6093395981269628726[280] = 0;
   out_6093395981269628726[281] = 0;
   out_6093395981269628726[282] = 0;
   out_6093395981269628726[283] = 0;
   out_6093395981269628726[284] = 0;
   out_6093395981269628726[285] = 0;
   out_6093395981269628726[286] = 1;
   out_6093395981269628726[287] = 0;
   out_6093395981269628726[288] = 0;
   out_6093395981269628726[289] = 0;
   out_6093395981269628726[290] = 0;
   out_6093395981269628726[291] = 0;
   out_6093395981269628726[292] = 0;
   out_6093395981269628726[293] = 0;
   out_6093395981269628726[294] = 0;
   out_6093395981269628726[295] = 0;
   out_6093395981269628726[296] = 0;
   out_6093395981269628726[297] = 0;
   out_6093395981269628726[298] = 0;
   out_6093395981269628726[299] = 0;
   out_6093395981269628726[300] = 0;
   out_6093395981269628726[301] = 0;
   out_6093395981269628726[302] = 0;
   out_6093395981269628726[303] = 0;
   out_6093395981269628726[304] = 0;
   out_6093395981269628726[305] = 0;
   out_6093395981269628726[306] = 0;
   out_6093395981269628726[307] = 0;
   out_6093395981269628726[308] = 1;
   out_6093395981269628726[309] = 0;
   out_6093395981269628726[310] = 0;
   out_6093395981269628726[311] = 0;
   out_6093395981269628726[312] = 0;
   out_6093395981269628726[313] = 0;
   out_6093395981269628726[314] = 0;
   out_6093395981269628726[315] = 0;
   out_6093395981269628726[316] = 0;
   out_6093395981269628726[317] = 0;
   out_6093395981269628726[318] = 0;
   out_6093395981269628726[319] = 0;
   out_6093395981269628726[320] = 0;
   out_6093395981269628726[321] = 0;
   out_6093395981269628726[322] = 0;
   out_6093395981269628726[323] = 0;
   out_6093395981269628726[324] = 0;
   out_6093395981269628726[325] = 0;
   out_6093395981269628726[326] = 0;
   out_6093395981269628726[327] = 0;
   out_6093395981269628726[328] = 0;
   out_6093395981269628726[329] = 0;
   out_6093395981269628726[330] = 1;
   out_6093395981269628726[331] = 0;
   out_6093395981269628726[332] = 0;
   out_6093395981269628726[333] = 0;
   out_6093395981269628726[334] = 0;
   out_6093395981269628726[335] = 0;
   out_6093395981269628726[336] = 0;
   out_6093395981269628726[337] = 0;
   out_6093395981269628726[338] = 0;
   out_6093395981269628726[339] = 0;
   out_6093395981269628726[340] = 0;
   out_6093395981269628726[341] = 0;
   out_6093395981269628726[342] = 0;
   out_6093395981269628726[343] = 0;
   out_6093395981269628726[344] = 0;
   out_6093395981269628726[345] = 0;
   out_6093395981269628726[346] = 0;
   out_6093395981269628726[347] = 0;
   out_6093395981269628726[348] = 0;
   out_6093395981269628726[349] = 0;
   out_6093395981269628726[350] = 0;
   out_6093395981269628726[351] = 0;
   out_6093395981269628726[352] = 1;
   out_6093395981269628726[353] = 0;
   out_6093395981269628726[354] = 0;
   out_6093395981269628726[355] = 0;
   out_6093395981269628726[356] = 0;
   out_6093395981269628726[357] = 0;
   out_6093395981269628726[358] = 0;
   out_6093395981269628726[359] = 0;
   out_6093395981269628726[360] = 0;
   out_6093395981269628726[361] = 0;
   out_6093395981269628726[362] = 0;
   out_6093395981269628726[363] = 0;
   out_6093395981269628726[364] = 0;
   out_6093395981269628726[365] = 0;
   out_6093395981269628726[366] = 0;
   out_6093395981269628726[367] = 0;
   out_6093395981269628726[368] = 0;
   out_6093395981269628726[369] = 0;
   out_6093395981269628726[370] = 0;
   out_6093395981269628726[371] = 0;
   out_6093395981269628726[372] = 0;
   out_6093395981269628726[373] = 0;
   out_6093395981269628726[374] = 1;
   out_6093395981269628726[375] = 0;
   out_6093395981269628726[376] = 0;
   out_6093395981269628726[377] = 0;
   out_6093395981269628726[378] = 0;
   out_6093395981269628726[379] = 0;
   out_6093395981269628726[380] = 0;
   out_6093395981269628726[381] = 0;
   out_6093395981269628726[382] = 0;
   out_6093395981269628726[383] = 0;
   out_6093395981269628726[384] = 0;
   out_6093395981269628726[385] = 0;
   out_6093395981269628726[386] = 0;
   out_6093395981269628726[387] = 0;
   out_6093395981269628726[388] = 0;
   out_6093395981269628726[389] = 0;
   out_6093395981269628726[390] = 0;
   out_6093395981269628726[391] = 0;
   out_6093395981269628726[392] = 0;
   out_6093395981269628726[393] = 0;
   out_6093395981269628726[394] = 0;
   out_6093395981269628726[395] = 0;
   out_6093395981269628726[396] = 1;
   out_6093395981269628726[397] = 0;
   out_6093395981269628726[398] = 0;
   out_6093395981269628726[399] = 0;
   out_6093395981269628726[400] = 0;
   out_6093395981269628726[401] = 0;
   out_6093395981269628726[402] = 0;
   out_6093395981269628726[403] = 0;
   out_6093395981269628726[404] = 0;
   out_6093395981269628726[405] = 0;
   out_6093395981269628726[406] = 0;
   out_6093395981269628726[407] = 0;
   out_6093395981269628726[408] = 0;
   out_6093395981269628726[409] = 0;
   out_6093395981269628726[410] = 0;
   out_6093395981269628726[411] = 0;
   out_6093395981269628726[412] = 0;
   out_6093395981269628726[413] = 0;
   out_6093395981269628726[414] = 0;
   out_6093395981269628726[415] = 0;
   out_6093395981269628726[416] = 0;
   out_6093395981269628726[417] = 0;
   out_6093395981269628726[418] = 1;
   out_6093395981269628726[419] = 0;
   out_6093395981269628726[420] = 0;
   out_6093395981269628726[421] = 0;
   out_6093395981269628726[422] = 0;
   out_6093395981269628726[423] = 0;
   out_6093395981269628726[424] = 0;
   out_6093395981269628726[425] = 0;
   out_6093395981269628726[426] = 0;
   out_6093395981269628726[427] = 0;
   out_6093395981269628726[428] = 0;
   out_6093395981269628726[429] = 0;
   out_6093395981269628726[430] = 0;
   out_6093395981269628726[431] = 0;
   out_6093395981269628726[432] = 0;
   out_6093395981269628726[433] = 0;
   out_6093395981269628726[434] = 0;
   out_6093395981269628726[435] = 0;
   out_6093395981269628726[436] = 0;
   out_6093395981269628726[437] = 0;
   out_6093395981269628726[438] = 0;
   out_6093395981269628726[439] = 0;
   out_6093395981269628726[440] = 1;
}
void h_4(double *state, double *unused, double *out_4363039283608560512) {
   out_4363039283608560512[0] = state[10] + state[13];
   out_4363039283608560512[1] = state[11] + state[14];
   out_4363039283608560512[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1208285306707785397) {
   out_1208285306707785397[0] = 0;
   out_1208285306707785397[1] = 0;
   out_1208285306707785397[2] = 0;
   out_1208285306707785397[3] = 0;
   out_1208285306707785397[4] = 0;
   out_1208285306707785397[5] = 0;
   out_1208285306707785397[6] = 0;
   out_1208285306707785397[7] = 0;
   out_1208285306707785397[8] = 0;
   out_1208285306707785397[9] = 0;
   out_1208285306707785397[10] = 1;
   out_1208285306707785397[11] = 0;
   out_1208285306707785397[12] = 0;
   out_1208285306707785397[13] = 1;
   out_1208285306707785397[14] = 0;
   out_1208285306707785397[15] = 0;
   out_1208285306707785397[16] = 0;
   out_1208285306707785397[17] = 0;
   out_1208285306707785397[18] = 0;
   out_1208285306707785397[19] = 0;
   out_1208285306707785397[20] = 0;
   out_1208285306707785397[21] = 0;
   out_1208285306707785397[22] = 0;
   out_1208285306707785397[23] = 0;
   out_1208285306707785397[24] = 0;
   out_1208285306707785397[25] = 0;
   out_1208285306707785397[26] = 0;
   out_1208285306707785397[27] = 0;
   out_1208285306707785397[28] = 0;
   out_1208285306707785397[29] = 0;
   out_1208285306707785397[30] = 0;
   out_1208285306707785397[31] = 0;
   out_1208285306707785397[32] = 0;
   out_1208285306707785397[33] = 1;
   out_1208285306707785397[34] = 0;
   out_1208285306707785397[35] = 0;
   out_1208285306707785397[36] = 1;
   out_1208285306707785397[37] = 0;
   out_1208285306707785397[38] = 0;
   out_1208285306707785397[39] = 0;
   out_1208285306707785397[40] = 0;
   out_1208285306707785397[41] = 0;
   out_1208285306707785397[42] = 0;
   out_1208285306707785397[43] = 0;
   out_1208285306707785397[44] = 0;
   out_1208285306707785397[45] = 0;
   out_1208285306707785397[46] = 0;
   out_1208285306707785397[47] = 0;
   out_1208285306707785397[48] = 0;
   out_1208285306707785397[49] = 0;
   out_1208285306707785397[50] = 0;
   out_1208285306707785397[51] = 0;
   out_1208285306707785397[52] = 0;
   out_1208285306707785397[53] = 0;
   out_1208285306707785397[54] = 0;
   out_1208285306707785397[55] = 0;
   out_1208285306707785397[56] = 1;
   out_1208285306707785397[57] = 0;
   out_1208285306707785397[58] = 0;
   out_1208285306707785397[59] = 1;
   out_1208285306707785397[60] = 0;
   out_1208285306707785397[61] = 0;
   out_1208285306707785397[62] = 0;
   out_1208285306707785397[63] = 0;
   out_1208285306707785397[64] = 0;
   out_1208285306707785397[65] = 0;
}
void h_9(double *state, double *unused, double *out_114298876477406303) {
   out_114298876477406303[0] = state[10];
   out_114298876477406303[1] = state[11];
   out_114298876477406303[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6078933628556662073) {
   out_6078933628556662073[0] = 0;
   out_6078933628556662073[1] = 0;
   out_6078933628556662073[2] = 0;
   out_6078933628556662073[3] = 0;
   out_6078933628556662073[4] = 0;
   out_6078933628556662073[5] = 0;
   out_6078933628556662073[6] = 0;
   out_6078933628556662073[7] = 0;
   out_6078933628556662073[8] = 0;
   out_6078933628556662073[9] = 0;
   out_6078933628556662073[10] = 1;
   out_6078933628556662073[11] = 0;
   out_6078933628556662073[12] = 0;
   out_6078933628556662073[13] = 0;
   out_6078933628556662073[14] = 0;
   out_6078933628556662073[15] = 0;
   out_6078933628556662073[16] = 0;
   out_6078933628556662073[17] = 0;
   out_6078933628556662073[18] = 0;
   out_6078933628556662073[19] = 0;
   out_6078933628556662073[20] = 0;
   out_6078933628556662073[21] = 0;
   out_6078933628556662073[22] = 0;
   out_6078933628556662073[23] = 0;
   out_6078933628556662073[24] = 0;
   out_6078933628556662073[25] = 0;
   out_6078933628556662073[26] = 0;
   out_6078933628556662073[27] = 0;
   out_6078933628556662073[28] = 0;
   out_6078933628556662073[29] = 0;
   out_6078933628556662073[30] = 0;
   out_6078933628556662073[31] = 0;
   out_6078933628556662073[32] = 0;
   out_6078933628556662073[33] = 1;
   out_6078933628556662073[34] = 0;
   out_6078933628556662073[35] = 0;
   out_6078933628556662073[36] = 0;
   out_6078933628556662073[37] = 0;
   out_6078933628556662073[38] = 0;
   out_6078933628556662073[39] = 0;
   out_6078933628556662073[40] = 0;
   out_6078933628556662073[41] = 0;
   out_6078933628556662073[42] = 0;
   out_6078933628556662073[43] = 0;
   out_6078933628556662073[44] = 0;
   out_6078933628556662073[45] = 0;
   out_6078933628556662073[46] = 0;
   out_6078933628556662073[47] = 0;
   out_6078933628556662073[48] = 0;
   out_6078933628556662073[49] = 0;
   out_6078933628556662073[50] = 0;
   out_6078933628556662073[51] = 0;
   out_6078933628556662073[52] = 0;
   out_6078933628556662073[53] = 0;
   out_6078933628556662073[54] = 0;
   out_6078933628556662073[55] = 0;
   out_6078933628556662073[56] = 1;
   out_6078933628556662073[57] = 0;
   out_6078933628556662073[58] = 0;
   out_6078933628556662073[59] = 0;
   out_6078933628556662073[60] = 0;
   out_6078933628556662073[61] = 0;
   out_6078933628556662073[62] = 0;
   out_6078933628556662073[63] = 0;
   out_6078933628556662073[64] = 0;
   out_6078933628556662073[65] = 0;
}
void h_10(double *state, double *unused, double *out_4017517240206656995) {
   out_4017517240206656995[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4017517240206656995[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4017517240206656995[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_974291533584954603) {
   out_974291533584954603[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_974291533584954603[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_974291533584954603[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_974291533584954603[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_974291533584954603[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_974291533584954603[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_974291533584954603[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_974291533584954603[7] = 0;
   out_974291533584954603[8] = 0;
   out_974291533584954603[9] = 0;
   out_974291533584954603[10] = 0;
   out_974291533584954603[11] = 0;
   out_974291533584954603[12] = 0;
   out_974291533584954603[13] = 0;
   out_974291533584954603[14] = 0;
   out_974291533584954603[15] = 0;
   out_974291533584954603[16] = 1;
   out_974291533584954603[17] = 0;
   out_974291533584954603[18] = 0;
   out_974291533584954603[19] = 1;
   out_974291533584954603[20] = 0;
   out_974291533584954603[21] = 0;
   out_974291533584954603[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_974291533584954603[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_974291533584954603[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_974291533584954603[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_974291533584954603[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_974291533584954603[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_974291533584954603[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_974291533584954603[29] = 0;
   out_974291533584954603[30] = 0;
   out_974291533584954603[31] = 0;
   out_974291533584954603[32] = 0;
   out_974291533584954603[33] = 0;
   out_974291533584954603[34] = 0;
   out_974291533584954603[35] = 0;
   out_974291533584954603[36] = 0;
   out_974291533584954603[37] = 0;
   out_974291533584954603[38] = 0;
   out_974291533584954603[39] = 1;
   out_974291533584954603[40] = 0;
   out_974291533584954603[41] = 0;
   out_974291533584954603[42] = 1;
   out_974291533584954603[43] = 0;
   out_974291533584954603[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_974291533584954603[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_974291533584954603[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_974291533584954603[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_974291533584954603[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_974291533584954603[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_974291533584954603[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_974291533584954603[51] = 0;
   out_974291533584954603[52] = 0;
   out_974291533584954603[53] = 0;
   out_974291533584954603[54] = 0;
   out_974291533584954603[55] = 0;
   out_974291533584954603[56] = 0;
   out_974291533584954603[57] = 0;
   out_974291533584954603[58] = 0;
   out_974291533584954603[59] = 0;
   out_974291533584954603[60] = 0;
   out_974291533584954603[61] = 0;
   out_974291533584954603[62] = 1;
   out_974291533584954603[63] = 0;
   out_974291533584954603[64] = 0;
   out_974291533584954603[65] = 1;
}
void h_12(double *state, double *unused, double *out_4500566853436925760) {
   out_4500566853436925760[0] = state[0];
   out_4500566853436925760[1] = state[1];
   out_4500566853436925760[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7589543683750518393) {
   out_7589543683750518393[0] = 1;
   out_7589543683750518393[1] = 0;
   out_7589543683750518393[2] = 0;
   out_7589543683750518393[3] = 0;
   out_7589543683750518393[4] = 0;
   out_7589543683750518393[5] = 0;
   out_7589543683750518393[6] = 0;
   out_7589543683750518393[7] = 0;
   out_7589543683750518393[8] = 0;
   out_7589543683750518393[9] = 0;
   out_7589543683750518393[10] = 0;
   out_7589543683750518393[11] = 0;
   out_7589543683750518393[12] = 0;
   out_7589543683750518393[13] = 0;
   out_7589543683750518393[14] = 0;
   out_7589543683750518393[15] = 0;
   out_7589543683750518393[16] = 0;
   out_7589543683750518393[17] = 0;
   out_7589543683750518393[18] = 0;
   out_7589543683750518393[19] = 0;
   out_7589543683750518393[20] = 0;
   out_7589543683750518393[21] = 0;
   out_7589543683750518393[22] = 0;
   out_7589543683750518393[23] = 1;
   out_7589543683750518393[24] = 0;
   out_7589543683750518393[25] = 0;
   out_7589543683750518393[26] = 0;
   out_7589543683750518393[27] = 0;
   out_7589543683750518393[28] = 0;
   out_7589543683750518393[29] = 0;
   out_7589543683750518393[30] = 0;
   out_7589543683750518393[31] = 0;
   out_7589543683750518393[32] = 0;
   out_7589543683750518393[33] = 0;
   out_7589543683750518393[34] = 0;
   out_7589543683750518393[35] = 0;
   out_7589543683750518393[36] = 0;
   out_7589543683750518393[37] = 0;
   out_7589543683750518393[38] = 0;
   out_7589543683750518393[39] = 0;
   out_7589543683750518393[40] = 0;
   out_7589543683750518393[41] = 0;
   out_7589543683750518393[42] = 0;
   out_7589543683750518393[43] = 0;
   out_7589543683750518393[44] = 0;
   out_7589543683750518393[45] = 0;
   out_7589543683750518393[46] = 1;
   out_7589543683750518393[47] = 0;
   out_7589543683750518393[48] = 0;
   out_7589543683750518393[49] = 0;
   out_7589543683750518393[50] = 0;
   out_7589543683750518393[51] = 0;
   out_7589543683750518393[52] = 0;
   out_7589543683750518393[53] = 0;
   out_7589543683750518393[54] = 0;
   out_7589543683750518393[55] = 0;
   out_7589543683750518393[56] = 0;
   out_7589543683750518393[57] = 0;
   out_7589543683750518393[58] = 0;
   out_7589543683750518393[59] = 0;
   out_7589543683750518393[60] = 0;
   out_7589543683750518393[61] = 0;
   out_7589543683750518393[62] = 0;
   out_7589543683750518393[63] = 0;
   out_7589543683750518393[64] = 0;
   out_7589543683750518393[65] = 0;
}
void h_35(double *state, double *unused, double *out_4288276543319315052) {
   out_4288276543319315052[0] = state[7];
   out_4288276543319315052[1] = state[8];
   out_4288276543319315052[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4843980651425504684) {
   out_4843980651425504684[0] = 0;
   out_4843980651425504684[1] = 0;
   out_4843980651425504684[2] = 0;
   out_4843980651425504684[3] = 0;
   out_4843980651425504684[4] = 0;
   out_4843980651425504684[5] = 0;
   out_4843980651425504684[6] = 0;
   out_4843980651425504684[7] = 1;
   out_4843980651425504684[8] = 0;
   out_4843980651425504684[9] = 0;
   out_4843980651425504684[10] = 0;
   out_4843980651425504684[11] = 0;
   out_4843980651425504684[12] = 0;
   out_4843980651425504684[13] = 0;
   out_4843980651425504684[14] = 0;
   out_4843980651425504684[15] = 0;
   out_4843980651425504684[16] = 0;
   out_4843980651425504684[17] = 0;
   out_4843980651425504684[18] = 0;
   out_4843980651425504684[19] = 0;
   out_4843980651425504684[20] = 0;
   out_4843980651425504684[21] = 0;
   out_4843980651425504684[22] = 0;
   out_4843980651425504684[23] = 0;
   out_4843980651425504684[24] = 0;
   out_4843980651425504684[25] = 0;
   out_4843980651425504684[26] = 0;
   out_4843980651425504684[27] = 0;
   out_4843980651425504684[28] = 0;
   out_4843980651425504684[29] = 0;
   out_4843980651425504684[30] = 1;
   out_4843980651425504684[31] = 0;
   out_4843980651425504684[32] = 0;
   out_4843980651425504684[33] = 0;
   out_4843980651425504684[34] = 0;
   out_4843980651425504684[35] = 0;
   out_4843980651425504684[36] = 0;
   out_4843980651425504684[37] = 0;
   out_4843980651425504684[38] = 0;
   out_4843980651425504684[39] = 0;
   out_4843980651425504684[40] = 0;
   out_4843980651425504684[41] = 0;
   out_4843980651425504684[42] = 0;
   out_4843980651425504684[43] = 0;
   out_4843980651425504684[44] = 0;
   out_4843980651425504684[45] = 0;
   out_4843980651425504684[46] = 0;
   out_4843980651425504684[47] = 0;
   out_4843980651425504684[48] = 0;
   out_4843980651425504684[49] = 0;
   out_4843980651425504684[50] = 0;
   out_4843980651425504684[51] = 0;
   out_4843980651425504684[52] = 0;
   out_4843980651425504684[53] = 1;
   out_4843980651425504684[54] = 0;
   out_4843980651425504684[55] = 0;
   out_4843980651425504684[56] = 0;
   out_4843980651425504684[57] = 0;
   out_4843980651425504684[58] = 0;
   out_4843980651425504684[59] = 0;
   out_4843980651425504684[60] = 0;
   out_4843980651425504684[61] = 0;
   out_4843980651425504684[62] = 0;
   out_4843980651425504684[63] = 0;
   out_4843980651425504684[64] = 0;
   out_4843980651425504684[65] = 0;
}
void h_32(double *state, double *unused, double *out_5500753020028864922) {
   out_5500753020028864922[0] = state[3];
   out_5500753020028864922[1] = state[4];
   out_5500753020028864922[2] = state[5];
   out_5500753020028864922[3] = state[6];
}
void H_32(double *state, double *unused, double *out_9184985427158611572) {
   out_9184985427158611572[0] = 0;
   out_9184985427158611572[1] = 0;
   out_9184985427158611572[2] = 0;
   out_9184985427158611572[3] = 1;
   out_9184985427158611572[4] = 0;
   out_9184985427158611572[5] = 0;
   out_9184985427158611572[6] = 0;
   out_9184985427158611572[7] = 0;
   out_9184985427158611572[8] = 0;
   out_9184985427158611572[9] = 0;
   out_9184985427158611572[10] = 0;
   out_9184985427158611572[11] = 0;
   out_9184985427158611572[12] = 0;
   out_9184985427158611572[13] = 0;
   out_9184985427158611572[14] = 0;
   out_9184985427158611572[15] = 0;
   out_9184985427158611572[16] = 0;
   out_9184985427158611572[17] = 0;
   out_9184985427158611572[18] = 0;
   out_9184985427158611572[19] = 0;
   out_9184985427158611572[20] = 0;
   out_9184985427158611572[21] = 0;
   out_9184985427158611572[22] = 0;
   out_9184985427158611572[23] = 0;
   out_9184985427158611572[24] = 0;
   out_9184985427158611572[25] = 0;
   out_9184985427158611572[26] = 1;
   out_9184985427158611572[27] = 0;
   out_9184985427158611572[28] = 0;
   out_9184985427158611572[29] = 0;
   out_9184985427158611572[30] = 0;
   out_9184985427158611572[31] = 0;
   out_9184985427158611572[32] = 0;
   out_9184985427158611572[33] = 0;
   out_9184985427158611572[34] = 0;
   out_9184985427158611572[35] = 0;
   out_9184985427158611572[36] = 0;
   out_9184985427158611572[37] = 0;
   out_9184985427158611572[38] = 0;
   out_9184985427158611572[39] = 0;
   out_9184985427158611572[40] = 0;
   out_9184985427158611572[41] = 0;
   out_9184985427158611572[42] = 0;
   out_9184985427158611572[43] = 0;
   out_9184985427158611572[44] = 0;
   out_9184985427158611572[45] = 0;
   out_9184985427158611572[46] = 0;
   out_9184985427158611572[47] = 0;
   out_9184985427158611572[48] = 0;
   out_9184985427158611572[49] = 1;
   out_9184985427158611572[50] = 0;
   out_9184985427158611572[51] = 0;
   out_9184985427158611572[52] = 0;
   out_9184985427158611572[53] = 0;
   out_9184985427158611572[54] = 0;
   out_9184985427158611572[55] = 0;
   out_9184985427158611572[56] = 0;
   out_9184985427158611572[57] = 0;
   out_9184985427158611572[58] = 0;
   out_9184985427158611572[59] = 0;
   out_9184985427158611572[60] = 0;
   out_9184985427158611572[61] = 0;
   out_9184985427158611572[62] = 0;
   out_9184985427158611572[63] = 0;
   out_9184985427158611572[64] = 0;
   out_9184985427158611572[65] = 0;
   out_9184985427158611572[66] = 0;
   out_9184985427158611572[67] = 0;
   out_9184985427158611572[68] = 0;
   out_9184985427158611572[69] = 0;
   out_9184985427158611572[70] = 0;
   out_9184985427158611572[71] = 0;
   out_9184985427158611572[72] = 1;
   out_9184985427158611572[73] = 0;
   out_9184985427158611572[74] = 0;
   out_9184985427158611572[75] = 0;
   out_9184985427158611572[76] = 0;
   out_9184985427158611572[77] = 0;
   out_9184985427158611572[78] = 0;
   out_9184985427158611572[79] = 0;
   out_9184985427158611572[80] = 0;
   out_9184985427158611572[81] = 0;
   out_9184985427158611572[82] = 0;
   out_9184985427158611572[83] = 0;
   out_9184985427158611572[84] = 0;
   out_9184985427158611572[85] = 0;
   out_9184985427158611572[86] = 0;
   out_9184985427158611572[87] = 0;
}
void h_13(double *state, double *unused, double *out_9140390590474376911) {
   out_9140390590474376911[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_9140390590474376911[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_9140390590474376911[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5368614765188541145) {
   out_5368614765188541145[0] = 0;
   out_5368614765188541145[1] = 0;
   out_5368614765188541145[2] = 0;
   out_5368614765188541145[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5368614765188541145[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5368614765188541145[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5368614765188541145[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5368614765188541145[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5368614765188541145[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5368614765188541145[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5368614765188541145[10] = 0;
   out_5368614765188541145[11] = 0;
   out_5368614765188541145[12] = 0;
   out_5368614765188541145[13] = 0;
   out_5368614765188541145[14] = 0;
   out_5368614765188541145[15] = 0;
   out_5368614765188541145[16] = 0;
   out_5368614765188541145[17] = 0;
   out_5368614765188541145[18] = 0;
   out_5368614765188541145[19] = 0;
   out_5368614765188541145[20] = 0;
   out_5368614765188541145[21] = 0;
   out_5368614765188541145[22] = 0;
   out_5368614765188541145[23] = 0;
   out_5368614765188541145[24] = 0;
   out_5368614765188541145[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5368614765188541145[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5368614765188541145[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5368614765188541145[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5368614765188541145[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5368614765188541145[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5368614765188541145[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5368614765188541145[32] = 0;
   out_5368614765188541145[33] = 0;
   out_5368614765188541145[34] = 0;
   out_5368614765188541145[35] = 0;
   out_5368614765188541145[36] = 0;
   out_5368614765188541145[37] = 0;
   out_5368614765188541145[38] = 0;
   out_5368614765188541145[39] = 0;
   out_5368614765188541145[40] = 0;
   out_5368614765188541145[41] = 0;
   out_5368614765188541145[42] = 0;
   out_5368614765188541145[43] = 0;
   out_5368614765188541145[44] = 0;
   out_5368614765188541145[45] = 0;
   out_5368614765188541145[46] = 0;
   out_5368614765188541145[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5368614765188541145[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5368614765188541145[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5368614765188541145[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5368614765188541145[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5368614765188541145[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5368614765188541145[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5368614765188541145[54] = 0;
   out_5368614765188541145[55] = 0;
   out_5368614765188541145[56] = 0;
   out_5368614765188541145[57] = 0;
   out_5368614765188541145[58] = 0;
   out_5368614765188541145[59] = 0;
   out_5368614765188541145[60] = 0;
   out_5368614765188541145[61] = 0;
   out_5368614765188541145[62] = 0;
   out_5368614765188541145[63] = 0;
   out_5368614765188541145[64] = 0;
   out_5368614765188541145[65] = 0;
}
void h_14(double *state, double *unused, double *out_114298876477406303) {
   out_114298876477406303[0] = state[10];
   out_114298876477406303[1] = state[11];
   out_114298876477406303[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6078933628556662073) {
   out_6078933628556662073[0] = 0;
   out_6078933628556662073[1] = 0;
   out_6078933628556662073[2] = 0;
   out_6078933628556662073[3] = 0;
   out_6078933628556662073[4] = 0;
   out_6078933628556662073[5] = 0;
   out_6078933628556662073[6] = 0;
   out_6078933628556662073[7] = 0;
   out_6078933628556662073[8] = 0;
   out_6078933628556662073[9] = 0;
   out_6078933628556662073[10] = 1;
   out_6078933628556662073[11] = 0;
   out_6078933628556662073[12] = 0;
   out_6078933628556662073[13] = 0;
   out_6078933628556662073[14] = 0;
   out_6078933628556662073[15] = 0;
   out_6078933628556662073[16] = 0;
   out_6078933628556662073[17] = 0;
   out_6078933628556662073[18] = 0;
   out_6078933628556662073[19] = 0;
   out_6078933628556662073[20] = 0;
   out_6078933628556662073[21] = 0;
   out_6078933628556662073[22] = 0;
   out_6078933628556662073[23] = 0;
   out_6078933628556662073[24] = 0;
   out_6078933628556662073[25] = 0;
   out_6078933628556662073[26] = 0;
   out_6078933628556662073[27] = 0;
   out_6078933628556662073[28] = 0;
   out_6078933628556662073[29] = 0;
   out_6078933628556662073[30] = 0;
   out_6078933628556662073[31] = 0;
   out_6078933628556662073[32] = 0;
   out_6078933628556662073[33] = 1;
   out_6078933628556662073[34] = 0;
   out_6078933628556662073[35] = 0;
   out_6078933628556662073[36] = 0;
   out_6078933628556662073[37] = 0;
   out_6078933628556662073[38] = 0;
   out_6078933628556662073[39] = 0;
   out_6078933628556662073[40] = 0;
   out_6078933628556662073[41] = 0;
   out_6078933628556662073[42] = 0;
   out_6078933628556662073[43] = 0;
   out_6078933628556662073[44] = 0;
   out_6078933628556662073[45] = 0;
   out_6078933628556662073[46] = 0;
   out_6078933628556662073[47] = 0;
   out_6078933628556662073[48] = 0;
   out_6078933628556662073[49] = 0;
   out_6078933628556662073[50] = 0;
   out_6078933628556662073[51] = 0;
   out_6078933628556662073[52] = 0;
   out_6078933628556662073[53] = 0;
   out_6078933628556662073[54] = 0;
   out_6078933628556662073[55] = 0;
   out_6078933628556662073[56] = 1;
   out_6078933628556662073[57] = 0;
   out_6078933628556662073[58] = 0;
   out_6078933628556662073[59] = 0;
   out_6078933628556662073[60] = 0;
   out_6078933628556662073[61] = 0;
   out_6078933628556662073[62] = 0;
   out_6078933628556662073[63] = 0;
   out_6078933628556662073[64] = 0;
   out_6078933628556662073[65] = 0;
}
void h_33(double *state, double *unused, double *out_6487249515284105110) {
   out_6487249515284105110[0] = state[16];
   out_6487249515284105110[1] = state[17];
   out_6487249515284105110[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1693423646786647080) {
   out_1693423646786647080[0] = 0;
   out_1693423646786647080[1] = 0;
   out_1693423646786647080[2] = 0;
   out_1693423646786647080[3] = 0;
   out_1693423646786647080[4] = 0;
   out_1693423646786647080[5] = 0;
   out_1693423646786647080[6] = 0;
   out_1693423646786647080[7] = 0;
   out_1693423646786647080[8] = 0;
   out_1693423646786647080[9] = 0;
   out_1693423646786647080[10] = 0;
   out_1693423646786647080[11] = 0;
   out_1693423646786647080[12] = 0;
   out_1693423646786647080[13] = 0;
   out_1693423646786647080[14] = 0;
   out_1693423646786647080[15] = 0;
   out_1693423646786647080[16] = 1;
   out_1693423646786647080[17] = 0;
   out_1693423646786647080[18] = 0;
   out_1693423646786647080[19] = 0;
   out_1693423646786647080[20] = 0;
   out_1693423646786647080[21] = 0;
   out_1693423646786647080[22] = 0;
   out_1693423646786647080[23] = 0;
   out_1693423646786647080[24] = 0;
   out_1693423646786647080[25] = 0;
   out_1693423646786647080[26] = 0;
   out_1693423646786647080[27] = 0;
   out_1693423646786647080[28] = 0;
   out_1693423646786647080[29] = 0;
   out_1693423646786647080[30] = 0;
   out_1693423646786647080[31] = 0;
   out_1693423646786647080[32] = 0;
   out_1693423646786647080[33] = 0;
   out_1693423646786647080[34] = 0;
   out_1693423646786647080[35] = 0;
   out_1693423646786647080[36] = 0;
   out_1693423646786647080[37] = 0;
   out_1693423646786647080[38] = 0;
   out_1693423646786647080[39] = 1;
   out_1693423646786647080[40] = 0;
   out_1693423646786647080[41] = 0;
   out_1693423646786647080[42] = 0;
   out_1693423646786647080[43] = 0;
   out_1693423646786647080[44] = 0;
   out_1693423646786647080[45] = 0;
   out_1693423646786647080[46] = 0;
   out_1693423646786647080[47] = 0;
   out_1693423646786647080[48] = 0;
   out_1693423646786647080[49] = 0;
   out_1693423646786647080[50] = 0;
   out_1693423646786647080[51] = 0;
   out_1693423646786647080[52] = 0;
   out_1693423646786647080[53] = 0;
   out_1693423646786647080[54] = 0;
   out_1693423646786647080[55] = 0;
   out_1693423646786647080[56] = 0;
   out_1693423646786647080[57] = 0;
   out_1693423646786647080[58] = 0;
   out_1693423646786647080[59] = 0;
   out_1693423646786647080[60] = 0;
   out_1693423646786647080[61] = 0;
   out_1693423646786647080[62] = 1;
   out_1693423646786647080[63] = 0;
   out_1693423646786647080[64] = 0;
   out_1693423646786647080[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4901497926982652881) {
  H(in_vec, out_4901497926982652881);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4218550092640272468) {
  err_fun(nom_x, delta_x, out_4218550092640272468);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7473104647569890902) {
  inv_err_fun(nom_x, true_x, out_7473104647569890902);
}
void live_H_mod_fun(double *state, double *out_1172482510687413770) {
  H_mod_fun(state, out_1172482510687413770);
}
void live_f_fun(double *state, double dt, double *out_6680059142450056333) {
  f_fun(state,  dt, out_6680059142450056333);
}
void live_F_fun(double *state, double dt, double *out_6093395981269628726) {
  F_fun(state,  dt, out_6093395981269628726);
}
void live_h_4(double *state, double *unused, double *out_4363039283608560512) {
  h_4(state, unused, out_4363039283608560512);
}
void live_H_4(double *state, double *unused, double *out_1208285306707785397) {
  H_4(state, unused, out_1208285306707785397);
}
void live_h_9(double *state, double *unused, double *out_114298876477406303) {
  h_9(state, unused, out_114298876477406303);
}
void live_H_9(double *state, double *unused, double *out_6078933628556662073) {
  H_9(state, unused, out_6078933628556662073);
}
void live_h_10(double *state, double *unused, double *out_4017517240206656995) {
  h_10(state, unused, out_4017517240206656995);
}
void live_H_10(double *state, double *unused, double *out_974291533584954603) {
  H_10(state, unused, out_974291533584954603);
}
void live_h_12(double *state, double *unused, double *out_4500566853436925760) {
  h_12(state, unused, out_4500566853436925760);
}
void live_H_12(double *state, double *unused, double *out_7589543683750518393) {
  H_12(state, unused, out_7589543683750518393);
}
void live_h_35(double *state, double *unused, double *out_4288276543319315052) {
  h_35(state, unused, out_4288276543319315052);
}
void live_H_35(double *state, double *unused, double *out_4843980651425504684) {
  H_35(state, unused, out_4843980651425504684);
}
void live_h_32(double *state, double *unused, double *out_5500753020028864922) {
  h_32(state, unused, out_5500753020028864922);
}
void live_H_32(double *state, double *unused, double *out_9184985427158611572) {
  H_32(state, unused, out_9184985427158611572);
}
void live_h_13(double *state, double *unused, double *out_9140390590474376911) {
  h_13(state, unused, out_9140390590474376911);
}
void live_H_13(double *state, double *unused, double *out_5368614765188541145) {
  H_13(state, unused, out_5368614765188541145);
}
void live_h_14(double *state, double *unused, double *out_114298876477406303) {
  h_14(state, unused, out_114298876477406303);
}
void live_H_14(double *state, double *unused, double *out_6078933628556662073) {
  H_14(state, unused, out_6078933628556662073);
}
void live_h_33(double *state, double *unused, double *out_6487249515284105110) {
  h_33(state, unused, out_6487249515284105110);
}
void live_H_33(double *state, double *unused, double *out_1693423646786647080) {
  H_33(state, unused, out_1693423646786647080);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
