#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_861237878813259636) {
   out_861237878813259636[0] = 0;
   out_861237878813259636[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_861237878813259636[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_861237878813259636[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_861237878813259636[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_861237878813259636[5] = -sin(in_vec[1]);
   out_861237878813259636[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_861237878813259636[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_861237878813259636[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_861237878813259636[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_861237878813259636[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_861237878813259636[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_861237878813259636[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_861237878813259636[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_861237878813259636[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_861237878813259636[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_861237878813259636[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_861237878813259636[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4278313452328263927) {
   out_4278313452328263927[0] = delta_x[0] + nom_x[0];
   out_4278313452328263927[1] = delta_x[1] + nom_x[1];
   out_4278313452328263927[2] = delta_x[2] + nom_x[2];
   out_4278313452328263927[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4278313452328263927[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4278313452328263927[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4278313452328263927[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4278313452328263927[7] = delta_x[6] + nom_x[7];
   out_4278313452328263927[8] = delta_x[7] + nom_x[8];
   out_4278313452328263927[9] = delta_x[8] + nom_x[9];
   out_4278313452328263927[10] = delta_x[9] + nom_x[10];
   out_4278313452328263927[11] = delta_x[10] + nom_x[11];
   out_4278313452328263927[12] = delta_x[11] + nom_x[12];
   out_4278313452328263927[13] = delta_x[12] + nom_x[13];
   out_4278313452328263927[14] = delta_x[13] + nom_x[14];
   out_4278313452328263927[15] = delta_x[14] + nom_x[15];
   out_4278313452328263927[16] = delta_x[15] + nom_x[16];
   out_4278313452328263927[17] = delta_x[16] + nom_x[17];
   out_4278313452328263927[18] = delta_x[17] + nom_x[18];
   out_4278313452328263927[19] = delta_x[18] + nom_x[19];
   out_4278313452328263927[20] = delta_x[19] + nom_x[20];
   out_4278313452328263927[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1517975704244355627) {
   out_1517975704244355627[0] = -nom_x[0] + true_x[0];
   out_1517975704244355627[1] = -nom_x[1] + true_x[1];
   out_1517975704244355627[2] = -nom_x[2] + true_x[2];
   out_1517975704244355627[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1517975704244355627[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1517975704244355627[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1517975704244355627[6] = -nom_x[7] + true_x[7];
   out_1517975704244355627[7] = -nom_x[8] + true_x[8];
   out_1517975704244355627[8] = -nom_x[9] + true_x[9];
   out_1517975704244355627[9] = -nom_x[10] + true_x[10];
   out_1517975704244355627[10] = -nom_x[11] + true_x[11];
   out_1517975704244355627[11] = -nom_x[12] + true_x[12];
   out_1517975704244355627[12] = -nom_x[13] + true_x[13];
   out_1517975704244355627[13] = -nom_x[14] + true_x[14];
   out_1517975704244355627[14] = -nom_x[15] + true_x[15];
   out_1517975704244355627[15] = -nom_x[16] + true_x[16];
   out_1517975704244355627[16] = -nom_x[17] + true_x[17];
   out_1517975704244355627[17] = -nom_x[18] + true_x[18];
   out_1517975704244355627[18] = -nom_x[19] + true_x[19];
   out_1517975704244355627[19] = -nom_x[20] + true_x[20];
   out_1517975704244355627[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3134635268669904023) {
   out_3134635268669904023[0] = 1.0;
   out_3134635268669904023[1] = 0;
   out_3134635268669904023[2] = 0;
   out_3134635268669904023[3] = 0;
   out_3134635268669904023[4] = 0;
   out_3134635268669904023[5] = 0;
   out_3134635268669904023[6] = 0;
   out_3134635268669904023[7] = 0;
   out_3134635268669904023[8] = 0;
   out_3134635268669904023[9] = 0;
   out_3134635268669904023[10] = 0;
   out_3134635268669904023[11] = 0;
   out_3134635268669904023[12] = 0;
   out_3134635268669904023[13] = 0;
   out_3134635268669904023[14] = 0;
   out_3134635268669904023[15] = 0;
   out_3134635268669904023[16] = 0;
   out_3134635268669904023[17] = 0;
   out_3134635268669904023[18] = 0;
   out_3134635268669904023[19] = 0;
   out_3134635268669904023[20] = 0;
   out_3134635268669904023[21] = 0;
   out_3134635268669904023[22] = 1.0;
   out_3134635268669904023[23] = 0;
   out_3134635268669904023[24] = 0;
   out_3134635268669904023[25] = 0;
   out_3134635268669904023[26] = 0;
   out_3134635268669904023[27] = 0;
   out_3134635268669904023[28] = 0;
   out_3134635268669904023[29] = 0;
   out_3134635268669904023[30] = 0;
   out_3134635268669904023[31] = 0;
   out_3134635268669904023[32] = 0;
   out_3134635268669904023[33] = 0;
   out_3134635268669904023[34] = 0;
   out_3134635268669904023[35] = 0;
   out_3134635268669904023[36] = 0;
   out_3134635268669904023[37] = 0;
   out_3134635268669904023[38] = 0;
   out_3134635268669904023[39] = 0;
   out_3134635268669904023[40] = 0;
   out_3134635268669904023[41] = 0;
   out_3134635268669904023[42] = 0;
   out_3134635268669904023[43] = 0;
   out_3134635268669904023[44] = 1.0;
   out_3134635268669904023[45] = 0;
   out_3134635268669904023[46] = 0;
   out_3134635268669904023[47] = 0;
   out_3134635268669904023[48] = 0;
   out_3134635268669904023[49] = 0;
   out_3134635268669904023[50] = 0;
   out_3134635268669904023[51] = 0;
   out_3134635268669904023[52] = 0;
   out_3134635268669904023[53] = 0;
   out_3134635268669904023[54] = 0;
   out_3134635268669904023[55] = 0;
   out_3134635268669904023[56] = 0;
   out_3134635268669904023[57] = 0;
   out_3134635268669904023[58] = 0;
   out_3134635268669904023[59] = 0;
   out_3134635268669904023[60] = 0;
   out_3134635268669904023[61] = 0;
   out_3134635268669904023[62] = 0;
   out_3134635268669904023[63] = 0;
   out_3134635268669904023[64] = 0;
   out_3134635268669904023[65] = 0;
   out_3134635268669904023[66] = -0.5*state[4];
   out_3134635268669904023[67] = -0.5*state[5];
   out_3134635268669904023[68] = -0.5*state[6];
   out_3134635268669904023[69] = 0;
   out_3134635268669904023[70] = 0;
   out_3134635268669904023[71] = 0;
   out_3134635268669904023[72] = 0;
   out_3134635268669904023[73] = 0;
   out_3134635268669904023[74] = 0;
   out_3134635268669904023[75] = 0;
   out_3134635268669904023[76] = 0;
   out_3134635268669904023[77] = 0;
   out_3134635268669904023[78] = 0;
   out_3134635268669904023[79] = 0;
   out_3134635268669904023[80] = 0;
   out_3134635268669904023[81] = 0;
   out_3134635268669904023[82] = 0;
   out_3134635268669904023[83] = 0;
   out_3134635268669904023[84] = 0;
   out_3134635268669904023[85] = 0;
   out_3134635268669904023[86] = 0;
   out_3134635268669904023[87] = 0.5*state[3];
   out_3134635268669904023[88] = 0.5*state[6];
   out_3134635268669904023[89] = -0.5*state[5];
   out_3134635268669904023[90] = 0;
   out_3134635268669904023[91] = 0;
   out_3134635268669904023[92] = 0;
   out_3134635268669904023[93] = 0;
   out_3134635268669904023[94] = 0;
   out_3134635268669904023[95] = 0;
   out_3134635268669904023[96] = 0;
   out_3134635268669904023[97] = 0;
   out_3134635268669904023[98] = 0;
   out_3134635268669904023[99] = 0;
   out_3134635268669904023[100] = 0;
   out_3134635268669904023[101] = 0;
   out_3134635268669904023[102] = 0;
   out_3134635268669904023[103] = 0;
   out_3134635268669904023[104] = 0;
   out_3134635268669904023[105] = 0;
   out_3134635268669904023[106] = 0;
   out_3134635268669904023[107] = 0;
   out_3134635268669904023[108] = -0.5*state[6];
   out_3134635268669904023[109] = 0.5*state[3];
   out_3134635268669904023[110] = 0.5*state[4];
   out_3134635268669904023[111] = 0;
   out_3134635268669904023[112] = 0;
   out_3134635268669904023[113] = 0;
   out_3134635268669904023[114] = 0;
   out_3134635268669904023[115] = 0;
   out_3134635268669904023[116] = 0;
   out_3134635268669904023[117] = 0;
   out_3134635268669904023[118] = 0;
   out_3134635268669904023[119] = 0;
   out_3134635268669904023[120] = 0;
   out_3134635268669904023[121] = 0;
   out_3134635268669904023[122] = 0;
   out_3134635268669904023[123] = 0;
   out_3134635268669904023[124] = 0;
   out_3134635268669904023[125] = 0;
   out_3134635268669904023[126] = 0;
   out_3134635268669904023[127] = 0;
   out_3134635268669904023[128] = 0;
   out_3134635268669904023[129] = 0.5*state[5];
   out_3134635268669904023[130] = -0.5*state[4];
   out_3134635268669904023[131] = 0.5*state[3];
   out_3134635268669904023[132] = 0;
   out_3134635268669904023[133] = 0;
   out_3134635268669904023[134] = 0;
   out_3134635268669904023[135] = 0;
   out_3134635268669904023[136] = 0;
   out_3134635268669904023[137] = 0;
   out_3134635268669904023[138] = 0;
   out_3134635268669904023[139] = 0;
   out_3134635268669904023[140] = 0;
   out_3134635268669904023[141] = 0;
   out_3134635268669904023[142] = 0;
   out_3134635268669904023[143] = 0;
   out_3134635268669904023[144] = 0;
   out_3134635268669904023[145] = 0;
   out_3134635268669904023[146] = 0;
   out_3134635268669904023[147] = 0;
   out_3134635268669904023[148] = 0;
   out_3134635268669904023[149] = 0;
   out_3134635268669904023[150] = 0;
   out_3134635268669904023[151] = 0;
   out_3134635268669904023[152] = 0;
   out_3134635268669904023[153] = 1.0;
   out_3134635268669904023[154] = 0;
   out_3134635268669904023[155] = 0;
   out_3134635268669904023[156] = 0;
   out_3134635268669904023[157] = 0;
   out_3134635268669904023[158] = 0;
   out_3134635268669904023[159] = 0;
   out_3134635268669904023[160] = 0;
   out_3134635268669904023[161] = 0;
   out_3134635268669904023[162] = 0;
   out_3134635268669904023[163] = 0;
   out_3134635268669904023[164] = 0;
   out_3134635268669904023[165] = 0;
   out_3134635268669904023[166] = 0;
   out_3134635268669904023[167] = 0;
   out_3134635268669904023[168] = 0;
   out_3134635268669904023[169] = 0;
   out_3134635268669904023[170] = 0;
   out_3134635268669904023[171] = 0;
   out_3134635268669904023[172] = 0;
   out_3134635268669904023[173] = 0;
   out_3134635268669904023[174] = 0;
   out_3134635268669904023[175] = 1.0;
   out_3134635268669904023[176] = 0;
   out_3134635268669904023[177] = 0;
   out_3134635268669904023[178] = 0;
   out_3134635268669904023[179] = 0;
   out_3134635268669904023[180] = 0;
   out_3134635268669904023[181] = 0;
   out_3134635268669904023[182] = 0;
   out_3134635268669904023[183] = 0;
   out_3134635268669904023[184] = 0;
   out_3134635268669904023[185] = 0;
   out_3134635268669904023[186] = 0;
   out_3134635268669904023[187] = 0;
   out_3134635268669904023[188] = 0;
   out_3134635268669904023[189] = 0;
   out_3134635268669904023[190] = 0;
   out_3134635268669904023[191] = 0;
   out_3134635268669904023[192] = 0;
   out_3134635268669904023[193] = 0;
   out_3134635268669904023[194] = 0;
   out_3134635268669904023[195] = 0;
   out_3134635268669904023[196] = 0;
   out_3134635268669904023[197] = 1.0;
   out_3134635268669904023[198] = 0;
   out_3134635268669904023[199] = 0;
   out_3134635268669904023[200] = 0;
   out_3134635268669904023[201] = 0;
   out_3134635268669904023[202] = 0;
   out_3134635268669904023[203] = 0;
   out_3134635268669904023[204] = 0;
   out_3134635268669904023[205] = 0;
   out_3134635268669904023[206] = 0;
   out_3134635268669904023[207] = 0;
   out_3134635268669904023[208] = 0;
   out_3134635268669904023[209] = 0;
   out_3134635268669904023[210] = 0;
   out_3134635268669904023[211] = 0;
   out_3134635268669904023[212] = 0;
   out_3134635268669904023[213] = 0;
   out_3134635268669904023[214] = 0;
   out_3134635268669904023[215] = 0;
   out_3134635268669904023[216] = 0;
   out_3134635268669904023[217] = 0;
   out_3134635268669904023[218] = 0;
   out_3134635268669904023[219] = 1.0;
   out_3134635268669904023[220] = 0;
   out_3134635268669904023[221] = 0;
   out_3134635268669904023[222] = 0;
   out_3134635268669904023[223] = 0;
   out_3134635268669904023[224] = 0;
   out_3134635268669904023[225] = 0;
   out_3134635268669904023[226] = 0;
   out_3134635268669904023[227] = 0;
   out_3134635268669904023[228] = 0;
   out_3134635268669904023[229] = 0;
   out_3134635268669904023[230] = 0;
   out_3134635268669904023[231] = 0;
   out_3134635268669904023[232] = 0;
   out_3134635268669904023[233] = 0;
   out_3134635268669904023[234] = 0;
   out_3134635268669904023[235] = 0;
   out_3134635268669904023[236] = 0;
   out_3134635268669904023[237] = 0;
   out_3134635268669904023[238] = 0;
   out_3134635268669904023[239] = 0;
   out_3134635268669904023[240] = 0;
   out_3134635268669904023[241] = 1.0;
   out_3134635268669904023[242] = 0;
   out_3134635268669904023[243] = 0;
   out_3134635268669904023[244] = 0;
   out_3134635268669904023[245] = 0;
   out_3134635268669904023[246] = 0;
   out_3134635268669904023[247] = 0;
   out_3134635268669904023[248] = 0;
   out_3134635268669904023[249] = 0;
   out_3134635268669904023[250] = 0;
   out_3134635268669904023[251] = 0;
   out_3134635268669904023[252] = 0;
   out_3134635268669904023[253] = 0;
   out_3134635268669904023[254] = 0;
   out_3134635268669904023[255] = 0;
   out_3134635268669904023[256] = 0;
   out_3134635268669904023[257] = 0;
   out_3134635268669904023[258] = 0;
   out_3134635268669904023[259] = 0;
   out_3134635268669904023[260] = 0;
   out_3134635268669904023[261] = 0;
   out_3134635268669904023[262] = 0;
   out_3134635268669904023[263] = 1.0;
   out_3134635268669904023[264] = 0;
   out_3134635268669904023[265] = 0;
   out_3134635268669904023[266] = 0;
   out_3134635268669904023[267] = 0;
   out_3134635268669904023[268] = 0;
   out_3134635268669904023[269] = 0;
   out_3134635268669904023[270] = 0;
   out_3134635268669904023[271] = 0;
   out_3134635268669904023[272] = 0;
   out_3134635268669904023[273] = 0;
   out_3134635268669904023[274] = 0;
   out_3134635268669904023[275] = 0;
   out_3134635268669904023[276] = 0;
   out_3134635268669904023[277] = 0;
   out_3134635268669904023[278] = 0;
   out_3134635268669904023[279] = 0;
   out_3134635268669904023[280] = 0;
   out_3134635268669904023[281] = 0;
   out_3134635268669904023[282] = 0;
   out_3134635268669904023[283] = 0;
   out_3134635268669904023[284] = 0;
   out_3134635268669904023[285] = 1.0;
   out_3134635268669904023[286] = 0;
   out_3134635268669904023[287] = 0;
   out_3134635268669904023[288] = 0;
   out_3134635268669904023[289] = 0;
   out_3134635268669904023[290] = 0;
   out_3134635268669904023[291] = 0;
   out_3134635268669904023[292] = 0;
   out_3134635268669904023[293] = 0;
   out_3134635268669904023[294] = 0;
   out_3134635268669904023[295] = 0;
   out_3134635268669904023[296] = 0;
   out_3134635268669904023[297] = 0;
   out_3134635268669904023[298] = 0;
   out_3134635268669904023[299] = 0;
   out_3134635268669904023[300] = 0;
   out_3134635268669904023[301] = 0;
   out_3134635268669904023[302] = 0;
   out_3134635268669904023[303] = 0;
   out_3134635268669904023[304] = 0;
   out_3134635268669904023[305] = 0;
   out_3134635268669904023[306] = 0;
   out_3134635268669904023[307] = 1.0;
   out_3134635268669904023[308] = 0;
   out_3134635268669904023[309] = 0;
   out_3134635268669904023[310] = 0;
   out_3134635268669904023[311] = 0;
   out_3134635268669904023[312] = 0;
   out_3134635268669904023[313] = 0;
   out_3134635268669904023[314] = 0;
   out_3134635268669904023[315] = 0;
   out_3134635268669904023[316] = 0;
   out_3134635268669904023[317] = 0;
   out_3134635268669904023[318] = 0;
   out_3134635268669904023[319] = 0;
   out_3134635268669904023[320] = 0;
   out_3134635268669904023[321] = 0;
   out_3134635268669904023[322] = 0;
   out_3134635268669904023[323] = 0;
   out_3134635268669904023[324] = 0;
   out_3134635268669904023[325] = 0;
   out_3134635268669904023[326] = 0;
   out_3134635268669904023[327] = 0;
   out_3134635268669904023[328] = 0;
   out_3134635268669904023[329] = 1.0;
   out_3134635268669904023[330] = 0;
   out_3134635268669904023[331] = 0;
   out_3134635268669904023[332] = 0;
   out_3134635268669904023[333] = 0;
   out_3134635268669904023[334] = 0;
   out_3134635268669904023[335] = 0;
   out_3134635268669904023[336] = 0;
   out_3134635268669904023[337] = 0;
   out_3134635268669904023[338] = 0;
   out_3134635268669904023[339] = 0;
   out_3134635268669904023[340] = 0;
   out_3134635268669904023[341] = 0;
   out_3134635268669904023[342] = 0;
   out_3134635268669904023[343] = 0;
   out_3134635268669904023[344] = 0;
   out_3134635268669904023[345] = 0;
   out_3134635268669904023[346] = 0;
   out_3134635268669904023[347] = 0;
   out_3134635268669904023[348] = 0;
   out_3134635268669904023[349] = 0;
   out_3134635268669904023[350] = 0;
   out_3134635268669904023[351] = 1.0;
   out_3134635268669904023[352] = 0;
   out_3134635268669904023[353] = 0;
   out_3134635268669904023[354] = 0;
   out_3134635268669904023[355] = 0;
   out_3134635268669904023[356] = 0;
   out_3134635268669904023[357] = 0;
   out_3134635268669904023[358] = 0;
   out_3134635268669904023[359] = 0;
   out_3134635268669904023[360] = 0;
   out_3134635268669904023[361] = 0;
   out_3134635268669904023[362] = 0;
   out_3134635268669904023[363] = 0;
   out_3134635268669904023[364] = 0;
   out_3134635268669904023[365] = 0;
   out_3134635268669904023[366] = 0;
   out_3134635268669904023[367] = 0;
   out_3134635268669904023[368] = 0;
   out_3134635268669904023[369] = 0;
   out_3134635268669904023[370] = 0;
   out_3134635268669904023[371] = 0;
   out_3134635268669904023[372] = 0;
   out_3134635268669904023[373] = 1.0;
   out_3134635268669904023[374] = 0;
   out_3134635268669904023[375] = 0;
   out_3134635268669904023[376] = 0;
   out_3134635268669904023[377] = 0;
   out_3134635268669904023[378] = 0;
   out_3134635268669904023[379] = 0;
   out_3134635268669904023[380] = 0;
   out_3134635268669904023[381] = 0;
   out_3134635268669904023[382] = 0;
   out_3134635268669904023[383] = 0;
   out_3134635268669904023[384] = 0;
   out_3134635268669904023[385] = 0;
   out_3134635268669904023[386] = 0;
   out_3134635268669904023[387] = 0;
   out_3134635268669904023[388] = 0;
   out_3134635268669904023[389] = 0;
   out_3134635268669904023[390] = 0;
   out_3134635268669904023[391] = 0;
   out_3134635268669904023[392] = 0;
   out_3134635268669904023[393] = 0;
   out_3134635268669904023[394] = 0;
   out_3134635268669904023[395] = 1.0;
   out_3134635268669904023[396] = 0;
   out_3134635268669904023[397] = 0;
   out_3134635268669904023[398] = 0;
   out_3134635268669904023[399] = 0;
   out_3134635268669904023[400] = 0;
   out_3134635268669904023[401] = 0;
   out_3134635268669904023[402] = 0;
   out_3134635268669904023[403] = 0;
   out_3134635268669904023[404] = 0;
   out_3134635268669904023[405] = 0;
   out_3134635268669904023[406] = 0;
   out_3134635268669904023[407] = 0;
   out_3134635268669904023[408] = 0;
   out_3134635268669904023[409] = 0;
   out_3134635268669904023[410] = 0;
   out_3134635268669904023[411] = 0;
   out_3134635268669904023[412] = 0;
   out_3134635268669904023[413] = 0;
   out_3134635268669904023[414] = 0;
   out_3134635268669904023[415] = 0;
   out_3134635268669904023[416] = 0;
   out_3134635268669904023[417] = 1.0;
   out_3134635268669904023[418] = 0;
   out_3134635268669904023[419] = 0;
   out_3134635268669904023[420] = 0;
   out_3134635268669904023[421] = 0;
   out_3134635268669904023[422] = 0;
   out_3134635268669904023[423] = 0;
   out_3134635268669904023[424] = 0;
   out_3134635268669904023[425] = 0;
   out_3134635268669904023[426] = 0;
   out_3134635268669904023[427] = 0;
   out_3134635268669904023[428] = 0;
   out_3134635268669904023[429] = 0;
   out_3134635268669904023[430] = 0;
   out_3134635268669904023[431] = 0;
   out_3134635268669904023[432] = 0;
   out_3134635268669904023[433] = 0;
   out_3134635268669904023[434] = 0;
   out_3134635268669904023[435] = 0;
   out_3134635268669904023[436] = 0;
   out_3134635268669904023[437] = 0;
   out_3134635268669904023[438] = 0;
   out_3134635268669904023[439] = 1.0;
   out_3134635268669904023[440] = 0;
   out_3134635268669904023[441] = 0;
   out_3134635268669904023[442] = 0;
   out_3134635268669904023[443] = 0;
   out_3134635268669904023[444] = 0;
   out_3134635268669904023[445] = 0;
   out_3134635268669904023[446] = 0;
   out_3134635268669904023[447] = 0;
   out_3134635268669904023[448] = 0;
   out_3134635268669904023[449] = 0;
   out_3134635268669904023[450] = 0;
   out_3134635268669904023[451] = 0;
   out_3134635268669904023[452] = 0;
   out_3134635268669904023[453] = 0;
   out_3134635268669904023[454] = 0;
   out_3134635268669904023[455] = 0;
   out_3134635268669904023[456] = 0;
   out_3134635268669904023[457] = 0;
   out_3134635268669904023[458] = 0;
   out_3134635268669904023[459] = 0;
   out_3134635268669904023[460] = 0;
   out_3134635268669904023[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7726404459010263191) {
   out_7726404459010263191[0] = dt*state[7] + state[0];
   out_7726404459010263191[1] = dt*state[8] + state[1];
   out_7726404459010263191[2] = dt*state[9] + state[2];
   out_7726404459010263191[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7726404459010263191[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7726404459010263191[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7726404459010263191[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7726404459010263191[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7726404459010263191[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7726404459010263191[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7726404459010263191[10] = state[10];
   out_7726404459010263191[11] = state[11];
   out_7726404459010263191[12] = state[12];
   out_7726404459010263191[13] = state[13];
   out_7726404459010263191[14] = state[14];
   out_7726404459010263191[15] = state[15];
   out_7726404459010263191[16] = state[16];
   out_7726404459010263191[17] = state[17];
   out_7726404459010263191[18] = state[18];
   out_7726404459010263191[19] = state[19];
   out_7726404459010263191[20] = state[20];
   out_7726404459010263191[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2183412921899053228) {
   out_2183412921899053228[0] = 1;
   out_2183412921899053228[1] = 0;
   out_2183412921899053228[2] = 0;
   out_2183412921899053228[3] = 0;
   out_2183412921899053228[4] = 0;
   out_2183412921899053228[5] = 0;
   out_2183412921899053228[6] = dt;
   out_2183412921899053228[7] = 0;
   out_2183412921899053228[8] = 0;
   out_2183412921899053228[9] = 0;
   out_2183412921899053228[10] = 0;
   out_2183412921899053228[11] = 0;
   out_2183412921899053228[12] = 0;
   out_2183412921899053228[13] = 0;
   out_2183412921899053228[14] = 0;
   out_2183412921899053228[15] = 0;
   out_2183412921899053228[16] = 0;
   out_2183412921899053228[17] = 0;
   out_2183412921899053228[18] = 0;
   out_2183412921899053228[19] = 0;
   out_2183412921899053228[20] = 0;
   out_2183412921899053228[21] = 0;
   out_2183412921899053228[22] = 1;
   out_2183412921899053228[23] = 0;
   out_2183412921899053228[24] = 0;
   out_2183412921899053228[25] = 0;
   out_2183412921899053228[26] = 0;
   out_2183412921899053228[27] = 0;
   out_2183412921899053228[28] = dt;
   out_2183412921899053228[29] = 0;
   out_2183412921899053228[30] = 0;
   out_2183412921899053228[31] = 0;
   out_2183412921899053228[32] = 0;
   out_2183412921899053228[33] = 0;
   out_2183412921899053228[34] = 0;
   out_2183412921899053228[35] = 0;
   out_2183412921899053228[36] = 0;
   out_2183412921899053228[37] = 0;
   out_2183412921899053228[38] = 0;
   out_2183412921899053228[39] = 0;
   out_2183412921899053228[40] = 0;
   out_2183412921899053228[41] = 0;
   out_2183412921899053228[42] = 0;
   out_2183412921899053228[43] = 0;
   out_2183412921899053228[44] = 1;
   out_2183412921899053228[45] = 0;
   out_2183412921899053228[46] = 0;
   out_2183412921899053228[47] = 0;
   out_2183412921899053228[48] = 0;
   out_2183412921899053228[49] = 0;
   out_2183412921899053228[50] = dt;
   out_2183412921899053228[51] = 0;
   out_2183412921899053228[52] = 0;
   out_2183412921899053228[53] = 0;
   out_2183412921899053228[54] = 0;
   out_2183412921899053228[55] = 0;
   out_2183412921899053228[56] = 0;
   out_2183412921899053228[57] = 0;
   out_2183412921899053228[58] = 0;
   out_2183412921899053228[59] = 0;
   out_2183412921899053228[60] = 0;
   out_2183412921899053228[61] = 0;
   out_2183412921899053228[62] = 0;
   out_2183412921899053228[63] = 0;
   out_2183412921899053228[64] = 0;
   out_2183412921899053228[65] = 0;
   out_2183412921899053228[66] = 1;
   out_2183412921899053228[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2183412921899053228[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2183412921899053228[69] = 0;
   out_2183412921899053228[70] = 0;
   out_2183412921899053228[71] = 0;
   out_2183412921899053228[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2183412921899053228[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2183412921899053228[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2183412921899053228[75] = 0;
   out_2183412921899053228[76] = 0;
   out_2183412921899053228[77] = 0;
   out_2183412921899053228[78] = 0;
   out_2183412921899053228[79] = 0;
   out_2183412921899053228[80] = 0;
   out_2183412921899053228[81] = 0;
   out_2183412921899053228[82] = 0;
   out_2183412921899053228[83] = 0;
   out_2183412921899053228[84] = 0;
   out_2183412921899053228[85] = 0;
   out_2183412921899053228[86] = 0;
   out_2183412921899053228[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2183412921899053228[88] = 1;
   out_2183412921899053228[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2183412921899053228[90] = 0;
   out_2183412921899053228[91] = 0;
   out_2183412921899053228[92] = 0;
   out_2183412921899053228[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2183412921899053228[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2183412921899053228[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2183412921899053228[96] = 0;
   out_2183412921899053228[97] = 0;
   out_2183412921899053228[98] = 0;
   out_2183412921899053228[99] = 0;
   out_2183412921899053228[100] = 0;
   out_2183412921899053228[101] = 0;
   out_2183412921899053228[102] = 0;
   out_2183412921899053228[103] = 0;
   out_2183412921899053228[104] = 0;
   out_2183412921899053228[105] = 0;
   out_2183412921899053228[106] = 0;
   out_2183412921899053228[107] = 0;
   out_2183412921899053228[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2183412921899053228[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2183412921899053228[110] = 1;
   out_2183412921899053228[111] = 0;
   out_2183412921899053228[112] = 0;
   out_2183412921899053228[113] = 0;
   out_2183412921899053228[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2183412921899053228[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2183412921899053228[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2183412921899053228[117] = 0;
   out_2183412921899053228[118] = 0;
   out_2183412921899053228[119] = 0;
   out_2183412921899053228[120] = 0;
   out_2183412921899053228[121] = 0;
   out_2183412921899053228[122] = 0;
   out_2183412921899053228[123] = 0;
   out_2183412921899053228[124] = 0;
   out_2183412921899053228[125] = 0;
   out_2183412921899053228[126] = 0;
   out_2183412921899053228[127] = 0;
   out_2183412921899053228[128] = 0;
   out_2183412921899053228[129] = 0;
   out_2183412921899053228[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2183412921899053228[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2183412921899053228[132] = 1;
   out_2183412921899053228[133] = 0;
   out_2183412921899053228[134] = 0;
   out_2183412921899053228[135] = 0;
   out_2183412921899053228[136] = 0;
   out_2183412921899053228[137] = 0;
   out_2183412921899053228[138] = 0;
   out_2183412921899053228[139] = 0;
   out_2183412921899053228[140] = 0;
   out_2183412921899053228[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2183412921899053228[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2183412921899053228[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2183412921899053228[144] = 0;
   out_2183412921899053228[145] = 0;
   out_2183412921899053228[146] = 0;
   out_2183412921899053228[147] = 0;
   out_2183412921899053228[148] = 0;
   out_2183412921899053228[149] = 0;
   out_2183412921899053228[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2183412921899053228[151] = 0;
   out_2183412921899053228[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2183412921899053228[153] = 0;
   out_2183412921899053228[154] = 1;
   out_2183412921899053228[155] = 0;
   out_2183412921899053228[156] = 0;
   out_2183412921899053228[157] = 0;
   out_2183412921899053228[158] = 0;
   out_2183412921899053228[159] = 0;
   out_2183412921899053228[160] = 0;
   out_2183412921899053228[161] = 0;
   out_2183412921899053228[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2183412921899053228[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2183412921899053228[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2183412921899053228[165] = 0;
   out_2183412921899053228[166] = 0;
   out_2183412921899053228[167] = 0;
   out_2183412921899053228[168] = 0;
   out_2183412921899053228[169] = 0;
   out_2183412921899053228[170] = 0;
   out_2183412921899053228[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2183412921899053228[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2183412921899053228[173] = 0;
   out_2183412921899053228[174] = 0;
   out_2183412921899053228[175] = 0;
   out_2183412921899053228[176] = 1;
   out_2183412921899053228[177] = 0;
   out_2183412921899053228[178] = 0;
   out_2183412921899053228[179] = 0;
   out_2183412921899053228[180] = 0;
   out_2183412921899053228[181] = 0;
   out_2183412921899053228[182] = 0;
   out_2183412921899053228[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2183412921899053228[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2183412921899053228[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2183412921899053228[186] = 0;
   out_2183412921899053228[187] = 0;
   out_2183412921899053228[188] = 0;
   out_2183412921899053228[189] = 0;
   out_2183412921899053228[190] = 0;
   out_2183412921899053228[191] = 0;
   out_2183412921899053228[192] = 0;
   out_2183412921899053228[193] = 0;
   out_2183412921899053228[194] = 0;
   out_2183412921899053228[195] = 0;
   out_2183412921899053228[196] = 0;
   out_2183412921899053228[197] = 0;
   out_2183412921899053228[198] = 1;
   out_2183412921899053228[199] = 0;
   out_2183412921899053228[200] = 0;
   out_2183412921899053228[201] = 0;
   out_2183412921899053228[202] = 0;
   out_2183412921899053228[203] = 0;
   out_2183412921899053228[204] = 0;
   out_2183412921899053228[205] = 0;
   out_2183412921899053228[206] = 0;
   out_2183412921899053228[207] = 0;
   out_2183412921899053228[208] = 0;
   out_2183412921899053228[209] = 0;
   out_2183412921899053228[210] = 0;
   out_2183412921899053228[211] = 0;
   out_2183412921899053228[212] = 0;
   out_2183412921899053228[213] = 0;
   out_2183412921899053228[214] = 0;
   out_2183412921899053228[215] = 0;
   out_2183412921899053228[216] = 0;
   out_2183412921899053228[217] = 0;
   out_2183412921899053228[218] = 0;
   out_2183412921899053228[219] = 0;
   out_2183412921899053228[220] = 1;
   out_2183412921899053228[221] = 0;
   out_2183412921899053228[222] = 0;
   out_2183412921899053228[223] = 0;
   out_2183412921899053228[224] = 0;
   out_2183412921899053228[225] = 0;
   out_2183412921899053228[226] = 0;
   out_2183412921899053228[227] = 0;
   out_2183412921899053228[228] = 0;
   out_2183412921899053228[229] = 0;
   out_2183412921899053228[230] = 0;
   out_2183412921899053228[231] = 0;
   out_2183412921899053228[232] = 0;
   out_2183412921899053228[233] = 0;
   out_2183412921899053228[234] = 0;
   out_2183412921899053228[235] = 0;
   out_2183412921899053228[236] = 0;
   out_2183412921899053228[237] = 0;
   out_2183412921899053228[238] = 0;
   out_2183412921899053228[239] = 0;
   out_2183412921899053228[240] = 0;
   out_2183412921899053228[241] = 0;
   out_2183412921899053228[242] = 1;
   out_2183412921899053228[243] = 0;
   out_2183412921899053228[244] = 0;
   out_2183412921899053228[245] = 0;
   out_2183412921899053228[246] = 0;
   out_2183412921899053228[247] = 0;
   out_2183412921899053228[248] = 0;
   out_2183412921899053228[249] = 0;
   out_2183412921899053228[250] = 0;
   out_2183412921899053228[251] = 0;
   out_2183412921899053228[252] = 0;
   out_2183412921899053228[253] = 0;
   out_2183412921899053228[254] = 0;
   out_2183412921899053228[255] = 0;
   out_2183412921899053228[256] = 0;
   out_2183412921899053228[257] = 0;
   out_2183412921899053228[258] = 0;
   out_2183412921899053228[259] = 0;
   out_2183412921899053228[260] = 0;
   out_2183412921899053228[261] = 0;
   out_2183412921899053228[262] = 0;
   out_2183412921899053228[263] = 0;
   out_2183412921899053228[264] = 1;
   out_2183412921899053228[265] = 0;
   out_2183412921899053228[266] = 0;
   out_2183412921899053228[267] = 0;
   out_2183412921899053228[268] = 0;
   out_2183412921899053228[269] = 0;
   out_2183412921899053228[270] = 0;
   out_2183412921899053228[271] = 0;
   out_2183412921899053228[272] = 0;
   out_2183412921899053228[273] = 0;
   out_2183412921899053228[274] = 0;
   out_2183412921899053228[275] = 0;
   out_2183412921899053228[276] = 0;
   out_2183412921899053228[277] = 0;
   out_2183412921899053228[278] = 0;
   out_2183412921899053228[279] = 0;
   out_2183412921899053228[280] = 0;
   out_2183412921899053228[281] = 0;
   out_2183412921899053228[282] = 0;
   out_2183412921899053228[283] = 0;
   out_2183412921899053228[284] = 0;
   out_2183412921899053228[285] = 0;
   out_2183412921899053228[286] = 1;
   out_2183412921899053228[287] = 0;
   out_2183412921899053228[288] = 0;
   out_2183412921899053228[289] = 0;
   out_2183412921899053228[290] = 0;
   out_2183412921899053228[291] = 0;
   out_2183412921899053228[292] = 0;
   out_2183412921899053228[293] = 0;
   out_2183412921899053228[294] = 0;
   out_2183412921899053228[295] = 0;
   out_2183412921899053228[296] = 0;
   out_2183412921899053228[297] = 0;
   out_2183412921899053228[298] = 0;
   out_2183412921899053228[299] = 0;
   out_2183412921899053228[300] = 0;
   out_2183412921899053228[301] = 0;
   out_2183412921899053228[302] = 0;
   out_2183412921899053228[303] = 0;
   out_2183412921899053228[304] = 0;
   out_2183412921899053228[305] = 0;
   out_2183412921899053228[306] = 0;
   out_2183412921899053228[307] = 0;
   out_2183412921899053228[308] = 1;
   out_2183412921899053228[309] = 0;
   out_2183412921899053228[310] = 0;
   out_2183412921899053228[311] = 0;
   out_2183412921899053228[312] = 0;
   out_2183412921899053228[313] = 0;
   out_2183412921899053228[314] = 0;
   out_2183412921899053228[315] = 0;
   out_2183412921899053228[316] = 0;
   out_2183412921899053228[317] = 0;
   out_2183412921899053228[318] = 0;
   out_2183412921899053228[319] = 0;
   out_2183412921899053228[320] = 0;
   out_2183412921899053228[321] = 0;
   out_2183412921899053228[322] = 0;
   out_2183412921899053228[323] = 0;
   out_2183412921899053228[324] = 0;
   out_2183412921899053228[325] = 0;
   out_2183412921899053228[326] = 0;
   out_2183412921899053228[327] = 0;
   out_2183412921899053228[328] = 0;
   out_2183412921899053228[329] = 0;
   out_2183412921899053228[330] = 1;
   out_2183412921899053228[331] = 0;
   out_2183412921899053228[332] = 0;
   out_2183412921899053228[333] = 0;
   out_2183412921899053228[334] = 0;
   out_2183412921899053228[335] = 0;
   out_2183412921899053228[336] = 0;
   out_2183412921899053228[337] = 0;
   out_2183412921899053228[338] = 0;
   out_2183412921899053228[339] = 0;
   out_2183412921899053228[340] = 0;
   out_2183412921899053228[341] = 0;
   out_2183412921899053228[342] = 0;
   out_2183412921899053228[343] = 0;
   out_2183412921899053228[344] = 0;
   out_2183412921899053228[345] = 0;
   out_2183412921899053228[346] = 0;
   out_2183412921899053228[347] = 0;
   out_2183412921899053228[348] = 0;
   out_2183412921899053228[349] = 0;
   out_2183412921899053228[350] = 0;
   out_2183412921899053228[351] = 0;
   out_2183412921899053228[352] = 1;
   out_2183412921899053228[353] = 0;
   out_2183412921899053228[354] = 0;
   out_2183412921899053228[355] = 0;
   out_2183412921899053228[356] = 0;
   out_2183412921899053228[357] = 0;
   out_2183412921899053228[358] = 0;
   out_2183412921899053228[359] = 0;
   out_2183412921899053228[360] = 0;
   out_2183412921899053228[361] = 0;
   out_2183412921899053228[362] = 0;
   out_2183412921899053228[363] = 0;
   out_2183412921899053228[364] = 0;
   out_2183412921899053228[365] = 0;
   out_2183412921899053228[366] = 0;
   out_2183412921899053228[367] = 0;
   out_2183412921899053228[368] = 0;
   out_2183412921899053228[369] = 0;
   out_2183412921899053228[370] = 0;
   out_2183412921899053228[371] = 0;
   out_2183412921899053228[372] = 0;
   out_2183412921899053228[373] = 0;
   out_2183412921899053228[374] = 1;
   out_2183412921899053228[375] = 0;
   out_2183412921899053228[376] = 0;
   out_2183412921899053228[377] = 0;
   out_2183412921899053228[378] = 0;
   out_2183412921899053228[379] = 0;
   out_2183412921899053228[380] = 0;
   out_2183412921899053228[381] = 0;
   out_2183412921899053228[382] = 0;
   out_2183412921899053228[383] = 0;
   out_2183412921899053228[384] = 0;
   out_2183412921899053228[385] = 0;
   out_2183412921899053228[386] = 0;
   out_2183412921899053228[387] = 0;
   out_2183412921899053228[388] = 0;
   out_2183412921899053228[389] = 0;
   out_2183412921899053228[390] = 0;
   out_2183412921899053228[391] = 0;
   out_2183412921899053228[392] = 0;
   out_2183412921899053228[393] = 0;
   out_2183412921899053228[394] = 0;
   out_2183412921899053228[395] = 0;
   out_2183412921899053228[396] = 1;
   out_2183412921899053228[397] = 0;
   out_2183412921899053228[398] = 0;
   out_2183412921899053228[399] = 0;
   out_2183412921899053228[400] = 0;
   out_2183412921899053228[401] = 0;
   out_2183412921899053228[402] = 0;
   out_2183412921899053228[403] = 0;
   out_2183412921899053228[404] = 0;
   out_2183412921899053228[405] = 0;
   out_2183412921899053228[406] = 0;
   out_2183412921899053228[407] = 0;
   out_2183412921899053228[408] = 0;
   out_2183412921899053228[409] = 0;
   out_2183412921899053228[410] = 0;
   out_2183412921899053228[411] = 0;
   out_2183412921899053228[412] = 0;
   out_2183412921899053228[413] = 0;
   out_2183412921899053228[414] = 0;
   out_2183412921899053228[415] = 0;
   out_2183412921899053228[416] = 0;
   out_2183412921899053228[417] = 0;
   out_2183412921899053228[418] = 1;
   out_2183412921899053228[419] = 0;
   out_2183412921899053228[420] = 0;
   out_2183412921899053228[421] = 0;
   out_2183412921899053228[422] = 0;
   out_2183412921899053228[423] = 0;
   out_2183412921899053228[424] = 0;
   out_2183412921899053228[425] = 0;
   out_2183412921899053228[426] = 0;
   out_2183412921899053228[427] = 0;
   out_2183412921899053228[428] = 0;
   out_2183412921899053228[429] = 0;
   out_2183412921899053228[430] = 0;
   out_2183412921899053228[431] = 0;
   out_2183412921899053228[432] = 0;
   out_2183412921899053228[433] = 0;
   out_2183412921899053228[434] = 0;
   out_2183412921899053228[435] = 0;
   out_2183412921899053228[436] = 0;
   out_2183412921899053228[437] = 0;
   out_2183412921899053228[438] = 0;
   out_2183412921899053228[439] = 0;
   out_2183412921899053228[440] = 1;
}
void h_4(double *state, double *unused, double *out_5854789080321452138) {
   out_5854789080321452138[0] = state[10] + state[13];
   out_5854789080321452138[1] = state[11] + state[14];
   out_5854789080321452138[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4200761083827799838) {
   out_4200761083827799838[0] = 0;
   out_4200761083827799838[1] = 0;
   out_4200761083827799838[2] = 0;
   out_4200761083827799838[3] = 0;
   out_4200761083827799838[4] = 0;
   out_4200761083827799838[5] = 0;
   out_4200761083827799838[6] = 0;
   out_4200761083827799838[7] = 0;
   out_4200761083827799838[8] = 0;
   out_4200761083827799838[9] = 0;
   out_4200761083827799838[10] = 1;
   out_4200761083827799838[11] = 0;
   out_4200761083827799838[12] = 0;
   out_4200761083827799838[13] = 1;
   out_4200761083827799838[14] = 0;
   out_4200761083827799838[15] = 0;
   out_4200761083827799838[16] = 0;
   out_4200761083827799838[17] = 0;
   out_4200761083827799838[18] = 0;
   out_4200761083827799838[19] = 0;
   out_4200761083827799838[20] = 0;
   out_4200761083827799838[21] = 0;
   out_4200761083827799838[22] = 0;
   out_4200761083827799838[23] = 0;
   out_4200761083827799838[24] = 0;
   out_4200761083827799838[25] = 0;
   out_4200761083827799838[26] = 0;
   out_4200761083827799838[27] = 0;
   out_4200761083827799838[28] = 0;
   out_4200761083827799838[29] = 0;
   out_4200761083827799838[30] = 0;
   out_4200761083827799838[31] = 0;
   out_4200761083827799838[32] = 0;
   out_4200761083827799838[33] = 1;
   out_4200761083827799838[34] = 0;
   out_4200761083827799838[35] = 0;
   out_4200761083827799838[36] = 1;
   out_4200761083827799838[37] = 0;
   out_4200761083827799838[38] = 0;
   out_4200761083827799838[39] = 0;
   out_4200761083827799838[40] = 0;
   out_4200761083827799838[41] = 0;
   out_4200761083827799838[42] = 0;
   out_4200761083827799838[43] = 0;
   out_4200761083827799838[44] = 0;
   out_4200761083827799838[45] = 0;
   out_4200761083827799838[46] = 0;
   out_4200761083827799838[47] = 0;
   out_4200761083827799838[48] = 0;
   out_4200761083827799838[49] = 0;
   out_4200761083827799838[50] = 0;
   out_4200761083827799838[51] = 0;
   out_4200761083827799838[52] = 0;
   out_4200761083827799838[53] = 0;
   out_4200761083827799838[54] = 0;
   out_4200761083827799838[55] = 0;
   out_4200761083827799838[56] = 1;
   out_4200761083827799838[57] = 0;
   out_4200761083827799838[58] = 0;
   out_4200761083827799838[59] = 1;
   out_4200761083827799838[60] = 0;
   out_4200761083827799838[61] = 0;
   out_4200761083827799838[62] = 0;
   out_4200761083827799838[63] = 0;
   out_4200761083827799838[64] = 0;
   out_4200761083827799838[65] = 0;
}
void h_9(double *state, double *unused, double *out_7882603079684147993) {
   out_7882603079684147993[0] = state[10];
   out_7882603079684147993[1] = state[11];
   out_7882603079684147993[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1311899531547720496) {
   out_1311899531547720496[0] = 0;
   out_1311899531547720496[1] = 0;
   out_1311899531547720496[2] = 0;
   out_1311899531547720496[3] = 0;
   out_1311899531547720496[4] = 0;
   out_1311899531547720496[5] = 0;
   out_1311899531547720496[6] = 0;
   out_1311899531547720496[7] = 0;
   out_1311899531547720496[8] = 0;
   out_1311899531547720496[9] = 0;
   out_1311899531547720496[10] = 1;
   out_1311899531547720496[11] = 0;
   out_1311899531547720496[12] = 0;
   out_1311899531547720496[13] = 0;
   out_1311899531547720496[14] = 0;
   out_1311899531547720496[15] = 0;
   out_1311899531547720496[16] = 0;
   out_1311899531547720496[17] = 0;
   out_1311899531547720496[18] = 0;
   out_1311899531547720496[19] = 0;
   out_1311899531547720496[20] = 0;
   out_1311899531547720496[21] = 0;
   out_1311899531547720496[22] = 0;
   out_1311899531547720496[23] = 0;
   out_1311899531547720496[24] = 0;
   out_1311899531547720496[25] = 0;
   out_1311899531547720496[26] = 0;
   out_1311899531547720496[27] = 0;
   out_1311899531547720496[28] = 0;
   out_1311899531547720496[29] = 0;
   out_1311899531547720496[30] = 0;
   out_1311899531547720496[31] = 0;
   out_1311899531547720496[32] = 0;
   out_1311899531547720496[33] = 1;
   out_1311899531547720496[34] = 0;
   out_1311899531547720496[35] = 0;
   out_1311899531547720496[36] = 0;
   out_1311899531547720496[37] = 0;
   out_1311899531547720496[38] = 0;
   out_1311899531547720496[39] = 0;
   out_1311899531547720496[40] = 0;
   out_1311899531547720496[41] = 0;
   out_1311899531547720496[42] = 0;
   out_1311899531547720496[43] = 0;
   out_1311899531547720496[44] = 0;
   out_1311899531547720496[45] = 0;
   out_1311899531547720496[46] = 0;
   out_1311899531547720496[47] = 0;
   out_1311899531547720496[48] = 0;
   out_1311899531547720496[49] = 0;
   out_1311899531547720496[50] = 0;
   out_1311899531547720496[51] = 0;
   out_1311899531547720496[52] = 0;
   out_1311899531547720496[53] = 0;
   out_1311899531547720496[54] = 0;
   out_1311899531547720496[55] = 0;
   out_1311899531547720496[56] = 1;
   out_1311899531547720496[57] = 0;
   out_1311899531547720496[58] = 0;
   out_1311899531547720496[59] = 0;
   out_1311899531547720496[60] = 0;
   out_1311899531547720496[61] = 0;
   out_1311899531547720496[62] = 0;
   out_1311899531547720496[63] = 0;
   out_1311899531547720496[64] = 0;
   out_1311899531547720496[65] = 0;
}
void h_10(double *state, double *unused, double *out_8462950030647952318) {
   out_8462950030647952318[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8462950030647952318[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8462950030647952318[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7382053139208072210) {
   out_7382053139208072210[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7382053139208072210[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7382053139208072210[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7382053139208072210[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7382053139208072210[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7382053139208072210[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7382053139208072210[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7382053139208072210[7] = 0;
   out_7382053139208072210[8] = 0;
   out_7382053139208072210[9] = 0;
   out_7382053139208072210[10] = 0;
   out_7382053139208072210[11] = 0;
   out_7382053139208072210[12] = 0;
   out_7382053139208072210[13] = 0;
   out_7382053139208072210[14] = 0;
   out_7382053139208072210[15] = 0;
   out_7382053139208072210[16] = 1;
   out_7382053139208072210[17] = 0;
   out_7382053139208072210[18] = 0;
   out_7382053139208072210[19] = 1;
   out_7382053139208072210[20] = 0;
   out_7382053139208072210[21] = 0;
   out_7382053139208072210[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7382053139208072210[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7382053139208072210[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7382053139208072210[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7382053139208072210[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7382053139208072210[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7382053139208072210[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7382053139208072210[29] = 0;
   out_7382053139208072210[30] = 0;
   out_7382053139208072210[31] = 0;
   out_7382053139208072210[32] = 0;
   out_7382053139208072210[33] = 0;
   out_7382053139208072210[34] = 0;
   out_7382053139208072210[35] = 0;
   out_7382053139208072210[36] = 0;
   out_7382053139208072210[37] = 0;
   out_7382053139208072210[38] = 0;
   out_7382053139208072210[39] = 1;
   out_7382053139208072210[40] = 0;
   out_7382053139208072210[41] = 0;
   out_7382053139208072210[42] = 1;
   out_7382053139208072210[43] = 0;
   out_7382053139208072210[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7382053139208072210[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7382053139208072210[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7382053139208072210[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7382053139208072210[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7382053139208072210[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7382053139208072210[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7382053139208072210[51] = 0;
   out_7382053139208072210[52] = 0;
   out_7382053139208072210[53] = 0;
   out_7382053139208072210[54] = 0;
   out_7382053139208072210[55] = 0;
   out_7382053139208072210[56] = 0;
   out_7382053139208072210[57] = 0;
   out_7382053139208072210[58] = 0;
   out_7382053139208072210[59] = 0;
   out_7382053139208072210[60] = 0;
   out_7382053139208072210[61] = 0;
   out_7382053139208072210[62] = 1;
   out_7382053139208072210[63] = 0;
   out_7382053139208072210[64] = 0;
   out_7382053139208072210[65] = 1;
}
void h_12(double *state, double *unused, double *out_5488776303153320254) {
   out_5488776303153320254[0] = state[0];
   out_5488776303153320254[1] = state[1];
   out_5488776303153320254[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3579662058780206171) {
   out_3579662058780206171[0] = 1;
   out_3579662058780206171[1] = 0;
   out_3579662058780206171[2] = 0;
   out_3579662058780206171[3] = 0;
   out_3579662058780206171[4] = 0;
   out_3579662058780206171[5] = 0;
   out_3579662058780206171[6] = 0;
   out_3579662058780206171[7] = 0;
   out_3579662058780206171[8] = 0;
   out_3579662058780206171[9] = 0;
   out_3579662058780206171[10] = 0;
   out_3579662058780206171[11] = 0;
   out_3579662058780206171[12] = 0;
   out_3579662058780206171[13] = 0;
   out_3579662058780206171[14] = 0;
   out_3579662058780206171[15] = 0;
   out_3579662058780206171[16] = 0;
   out_3579662058780206171[17] = 0;
   out_3579662058780206171[18] = 0;
   out_3579662058780206171[19] = 0;
   out_3579662058780206171[20] = 0;
   out_3579662058780206171[21] = 0;
   out_3579662058780206171[22] = 0;
   out_3579662058780206171[23] = 1;
   out_3579662058780206171[24] = 0;
   out_3579662058780206171[25] = 0;
   out_3579662058780206171[26] = 0;
   out_3579662058780206171[27] = 0;
   out_3579662058780206171[28] = 0;
   out_3579662058780206171[29] = 0;
   out_3579662058780206171[30] = 0;
   out_3579662058780206171[31] = 0;
   out_3579662058780206171[32] = 0;
   out_3579662058780206171[33] = 0;
   out_3579662058780206171[34] = 0;
   out_3579662058780206171[35] = 0;
   out_3579662058780206171[36] = 0;
   out_3579662058780206171[37] = 0;
   out_3579662058780206171[38] = 0;
   out_3579662058780206171[39] = 0;
   out_3579662058780206171[40] = 0;
   out_3579662058780206171[41] = 0;
   out_3579662058780206171[42] = 0;
   out_3579662058780206171[43] = 0;
   out_3579662058780206171[44] = 0;
   out_3579662058780206171[45] = 0;
   out_3579662058780206171[46] = 1;
   out_3579662058780206171[47] = 0;
   out_3579662058780206171[48] = 0;
   out_3579662058780206171[49] = 0;
   out_3579662058780206171[50] = 0;
   out_3579662058780206171[51] = 0;
   out_3579662058780206171[52] = 0;
   out_3579662058780206171[53] = 0;
   out_3579662058780206171[54] = 0;
   out_3579662058780206171[55] = 0;
   out_3579662058780206171[56] = 0;
   out_3579662058780206171[57] = 0;
   out_3579662058780206171[58] = 0;
   out_3579662058780206171[59] = 0;
   out_3579662058780206171[60] = 0;
   out_3579662058780206171[61] = 0;
   out_3579662058780206171[62] = 0;
   out_3579662058780206171[63] = 0;
   out_3579662058780206171[64] = 0;
   out_3579662058780206171[65] = 0;
}
void h_35(double *state, double *unused, double *out_4600679636111731123) {
   out_4600679636111731123[0] = state[7];
   out_4600679636111731123[1] = state[8];
   out_4600679636111731123[2] = state[9];
}
void H_35(double *state, double *unused, double *out_834099026455192462) {
   out_834099026455192462[0] = 0;
   out_834099026455192462[1] = 0;
   out_834099026455192462[2] = 0;
   out_834099026455192462[3] = 0;
   out_834099026455192462[4] = 0;
   out_834099026455192462[5] = 0;
   out_834099026455192462[6] = 0;
   out_834099026455192462[7] = 1;
   out_834099026455192462[8] = 0;
   out_834099026455192462[9] = 0;
   out_834099026455192462[10] = 0;
   out_834099026455192462[11] = 0;
   out_834099026455192462[12] = 0;
   out_834099026455192462[13] = 0;
   out_834099026455192462[14] = 0;
   out_834099026455192462[15] = 0;
   out_834099026455192462[16] = 0;
   out_834099026455192462[17] = 0;
   out_834099026455192462[18] = 0;
   out_834099026455192462[19] = 0;
   out_834099026455192462[20] = 0;
   out_834099026455192462[21] = 0;
   out_834099026455192462[22] = 0;
   out_834099026455192462[23] = 0;
   out_834099026455192462[24] = 0;
   out_834099026455192462[25] = 0;
   out_834099026455192462[26] = 0;
   out_834099026455192462[27] = 0;
   out_834099026455192462[28] = 0;
   out_834099026455192462[29] = 0;
   out_834099026455192462[30] = 1;
   out_834099026455192462[31] = 0;
   out_834099026455192462[32] = 0;
   out_834099026455192462[33] = 0;
   out_834099026455192462[34] = 0;
   out_834099026455192462[35] = 0;
   out_834099026455192462[36] = 0;
   out_834099026455192462[37] = 0;
   out_834099026455192462[38] = 0;
   out_834099026455192462[39] = 0;
   out_834099026455192462[40] = 0;
   out_834099026455192462[41] = 0;
   out_834099026455192462[42] = 0;
   out_834099026455192462[43] = 0;
   out_834099026455192462[44] = 0;
   out_834099026455192462[45] = 0;
   out_834099026455192462[46] = 0;
   out_834099026455192462[47] = 0;
   out_834099026455192462[48] = 0;
   out_834099026455192462[49] = 0;
   out_834099026455192462[50] = 0;
   out_834099026455192462[51] = 0;
   out_834099026455192462[52] = 0;
   out_834099026455192462[53] = 1;
   out_834099026455192462[54] = 0;
   out_834099026455192462[55] = 0;
   out_834099026455192462[56] = 0;
   out_834099026455192462[57] = 0;
   out_834099026455192462[58] = 0;
   out_834099026455192462[59] = 0;
   out_834099026455192462[60] = 0;
   out_834099026455192462[61] = 0;
   out_834099026455192462[62] = 0;
   out_834099026455192462[63] = 0;
   out_834099026455192462[64] = 0;
   out_834099026455192462[65] = 0;
}
void h_32(double *state, double *unused, double *out_5886215730470115988) {
   out_5886215730470115988[0] = state[3];
   out_5886215730470115988[1] = state[4];
   out_5886215730470115988[2] = state[5];
   out_5886215730470115988[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8995588426598081956) {
   out_8995588426598081956[0] = 0;
   out_8995588426598081956[1] = 0;
   out_8995588426598081956[2] = 0;
   out_8995588426598081956[3] = 1;
   out_8995588426598081956[4] = 0;
   out_8995588426598081956[5] = 0;
   out_8995588426598081956[6] = 0;
   out_8995588426598081956[7] = 0;
   out_8995588426598081956[8] = 0;
   out_8995588426598081956[9] = 0;
   out_8995588426598081956[10] = 0;
   out_8995588426598081956[11] = 0;
   out_8995588426598081956[12] = 0;
   out_8995588426598081956[13] = 0;
   out_8995588426598081956[14] = 0;
   out_8995588426598081956[15] = 0;
   out_8995588426598081956[16] = 0;
   out_8995588426598081956[17] = 0;
   out_8995588426598081956[18] = 0;
   out_8995588426598081956[19] = 0;
   out_8995588426598081956[20] = 0;
   out_8995588426598081956[21] = 0;
   out_8995588426598081956[22] = 0;
   out_8995588426598081956[23] = 0;
   out_8995588426598081956[24] = 0;
   out_8995588426598081956[25] = 0;
   out_8995588426598081956[26] = 1;
   out_8995588426598081956[27] = 0;
   out_8995588426598081956[28] = 0;
   out_8995588426598081956[29] = 0;
   out_8995588426598081956[30] = 0;
   out_8995588426598081956[31] = 0;
   out_8995588426598081956[32] = 0;
   out_8995588426598081956[33] = 0;
   out_8995588426598081956[34] = 0;
   out_8995588426598081956[35] = 0;
   out_8995588426598081956[36] = 0;
   out_8995588426598081956[37] = 0;
   out_8995588426598081956[38] = 0;
   out_8995588426598081956[39] = 0;
   out_8995588426598081956[40] = 0;
   out_8995588426598081956[41] = 0;
   out_8995588426598081956[42] = 0;
   out_8995588426598081956[43] = 0;
   out_8995588426598081956[44] = 0;
   out_8995588426598081956[45] = 0;
   out_8995588426598081956[46] = 0;
   out_8995588426598081956[47] = 0;
   out_8995588426598081956[48] = 0;
   out_8995588426598081956[49] = 1;
   out_8995588426598081956[50] = 0;
   out_8995588426598081956[51] = 0;
   out_8995588426598081956[52] = 0;
   out_8995588426598081956[53] = 0;
   out_8995588426598081956[54] = 0;
   out_8995588426598081956[55] = 0;
   out_8995588426598081956[56] = 0;
   out_8995588426598081956[57] = 0;
   out_8995588426598081956[58] = 0;
   out_8995588426598081956[59] = 0;
   out_8995588426598081956[60] = 0;
   out_8995588426598081956[61] = 0;
   out_8995588426598081956[62] = 0;
   out_8995588426598081956[63] = 0;
   out_8995588426598081956[64] = 0;
   out_8995588426598081956[65] = 0;
   out_8995588426598081956[66] = 0;
   out_8995588426598081956[67] = 0;
   out_8995588426598081956[68] = 0;
   out_8995588426598081956[69] = 0;
   out_8995588426598081956[70] = 0;
   out_8995588426598081956[71] = 0;
   out_8995588426598081956[72] = 1;
   out_8995588426598081956[73] = 0;
   out_8995588426598081956[74] = 0;
   out_8995588426598081956[75] = 0;
   out_8995588426598081956[76] = 0;
   out_8995588426598081956[77] = 0;
   out_8995588426598081956[78] = 0;
   out_8995588426598081956[79] = 0;
   out_8995588426598081956[80] = 0;
   out_8995588426598081956[81] = 0;
   out_8995588426598081956[82] = 0;
   out_8995588426598081956[83] = 0;
   out_8995588426598081956[84] = 0;
   out_8995588426598081956[85] = 0;
   out_8995588426598081956[86] = 0;
   out_8995588426598081956[87] = 0;
}
void h_13(double *state, double *unused, double *out_6408479493505327035) {
   out_6408479493505327035[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6408479493505327035[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6408479493505327035[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_97393830298191399) {
   out_97393830298191399[0] = 0;
   out_97393830298191399[1] = 0;
   out_97393830298191399[2] = 0;
   out_97393830298191399[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_97393830298191399[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_97393830298191399[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_97393830298191399[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_97393830298191399[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_97393830298191399[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_97393830298191399[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_97393830298191399[10] = 0;
   out_97393830298191399[11] = 0;
   out_97393830298191399[12] = 0;
   out_97393830298191399[13] = 0;
   out_97393830298191399[14] = 0;
   out_97393830298191399[15] = 0;
   out_97393830298191399[16] = 0;
   out_97393830298191399[17] = 0;
   out_97393830298191399[18] = 0;
   out_97393830298191399[19] = 0;
   out_97393830298191399[20] = 0;
   out_97393830298191399[21] = 0;
   out_97393830298191399[22] = 0;
   out_97393830298191399[23] = 0;
   out_97393830298191399[24] = 0;
   out_97393830298191399[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_97393830298191399[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_97393830298191399[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_97393830298191399[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_97393830298191399[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_97393830298191399[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_97393830298191399[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_97393830298191399[32] = 0;
   out_97393830298191399[33] = 0;
   out_97393830298191399[34] = 0;
   out_97393830298191399[35] = 0;
   out_97393830298191399[36] = 0;
   out_97393830298191399[37] = 0;
   out_97393830298191399[38] = 0;
   out_97393830298191399[39] = 0;
   out_97393830298191399[40] = 0;
   out_97393830298191399[41] = 0;
   out_97393830298191399[42] = 0;
   out_97393830298191399[43] = 0;
   out_97393830298191399[44] = 0;
   out_97393830298191399[45] = 0;
   out_97393830298191399[46] = 0;
   out_97393830298191399[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_97393830298191399[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_97393830298191399[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_97393830298191399[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_97393830298191399[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_97393830298191399[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_97393830298191399[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_97393830298191399[54] = 0;
   out_97393830298191399[55] = 0;
   out_97393830298191399[56] = 0;
   out_97393830298191399[57] = 0;
   out_97393830298191399[58] = 0;
   out_97393830298191399[59] = 0;
   out_97393830298191399[60] = 0;
   out_97393830298191399[61] = 0;
   out_97393830298191399[62] = 0;
   out_97393830298191399[63] = 0;
   out_97393830298191399[64] = 0;
   out_97393830298191399[65] = 0;
}
void h_14(double *state, double *unused, double *out_7882603079684147993) {
   out_7882603079684147993[0] = state[10];
   out_7882603079684147993[1] = state[11];
   out_7882603079684147993[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1311899531547720496) {
   out_1311899531547720496[0] = 0;
   out_1311899531547720496[1] = 0;
   out_1311899531547720496[2] = 0;
   out_1311899531547720496[3] = 0;
   out_1311899531547720496[4] = 0;
   out_1311899531547720496[5] = 0;
   out_1311899531547720496[6] = 0;
   out_1311899531547720496[7] = 0;
   out_1311899531547720496[8] = 0;
   out_1311899531547720496[9] = 0;
   out_1311899531547720496[10] = 1;
   out_1311899531547720496[11] = 0;
   out_1311899531547720496[12] = 0;
   out_1311899531547720496[13] = 0;
   out_1311899531547720496[14] = 0;
   out_1311899531547720496[15] = 0;
   out_1311899531547720496[16] = 0;
   out_1311899531547720496[17] = 0;
   out_1311899531547720496[18] = 0;
   out_1311899531547720496[19] = 0;
   out_1311899531547720496[20] = 0;
   out_1311899531547720496[21] = 0;
   out_1311899531547720496[22] = 0;
   out_1311899531547720496[23] = 0;
   out_1311899531547720496[24] = 0;
   out_1311899531547720496[25] = 0;
   out_1311899531547720496[26] = 0;
   out_1311899531547720496[27] = 0;
   out_1311899531547720496[28] = 0;
   out_1311899531547720496[29] = 0;
   out_1311899531547720496[30] = 0;
   out_1311899531547720496[31] = 0;
   out_1311899531547720496[32] = 0;
   out_1311899531547720496[33] = 1;
   out_1311899531547720496[34] = 0;
   out_1311899531547720496[35] = 0;
   out_1311899531547720496[36] = 0;
   out_1311899531547720496[37] = 0;
   out_1311899531547720496[38] = 0;
   out_1311899531547720496[39] = 0;
   out_1311899531547720496[40] = 0;
   out_1311899531547720496[41] = 0;
   out_1311899531547720496[42] = 0;
   out_1311899531547720496[43] = 0;
   out_1311899531547720496[44] = 0;
   out_1311899531547720496[45] = 0;
   out_1311899531547720496[46] = 0;
   out_1311899531547720496[47] = 0;
   out_1311899531547720496[48] = 0;
   out_1311899531547720496[49] = 0;
   out_1311899531547720496[50] = 0;
   out_1311899531547720496[51] = 0;
   out_1311899531547720496[52] = 0;
   out_1311899531547720496[53] = 0;
   out_1311899531547720496[54] = 0;
   out_1311899531547720496[55] = 0;
   out_1311899531547720496[56] = 1;
   out_1311899531547720496[57] = 0;
   out_1311899531547720496[58] = 0;
   out_1311899531547720496[59] = 0;
   out_1311899531547720496[60] = 0;
   out_1311899531547720496[61] = 0;
   out_1311899531547720496[62] = 0;
   out_1311899531547720496[63] = 0;
   out_1311899531547720496[64] = 0;
   out_1311899531547720496[65] = 0;
}
void h_33(double *state, double *unused, double *out_8872015136137831782) {
   out_8872015136137831782[0] = state[16];
   out_8872015136137831782[1] = state[17];
   out_8872015136137831782[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2316457978183665142) {
   out_2316457978183665142[0] = 0;
   out_2316457978183665142[1] = 0;
   out_2316457978183665142[2] = 0;
   out_2316457978183665142[3] = 0;
   out_2316457978183665142[4] = 0;
   out_2316457978183665142[5] = 0;
   out_2316457978183665142[6] = 0;
   out_2316457978183665142[7] = 0;
   out_2316457978183665142[8] = 0;
   out_2316457978183665142[9] = 0;
   out_2316457978183665142[10] = 0;
   out_2316457978183665142[11] = 0;
   out_2316457978183665142[12] = 0;
   out_2316457978183665142[13] = 0;
   out_2316457978183665142[14] = 0;
   out_2316457978183665142[15] = 0;
   out_2316457978183665142[16] = 1;
   out_2316457978183665142[17] = 0;
   out_2316457978183665142[18] = 0;
   out_2316457978183665142[19] = 0;
   out_2316457978183665142[20] = 0;
   out_2316457978183665142[21] = 0;
   out_2316457978183665142[22] = 0;
   out_2316457978183665142[23] = 0;
   out_2316457978183665142[24] = 0;
   out_2316457978183665142[25] = 0;
   out_2316457978183665142[26] = 0;
   out_2316457978183665142[27] = 0;
   out_2316457978183665142[28] = 0;
   out_2316457978183665142[29] = 0;
   out_2316457978183665142[30] = 0;
   out_2316457978183665142[31] = 0;
   out_2316457978183665142[32] = 0;
   out_2316457978183665142[33] = 0;
   out_2316457978183665142[34] = 0;
   out_2316457978183665142[35] = 0;
   out_2316457978183665142[36] = 0;
   out_2316457978183665142[37] = 0;
   out_2316457978183665142[38] = 0;
   out_2316457978183665142[39] = 1;
   out_2316457978183665142[40] = 0;
   out_2316457978183665142[41] = 0;
   out_2316457978183665142[42] = 0;
   out_2316457978183665142[43] = 0;
   out_2316457978183665142[44] = 0;
   out_2316457978183665142[45] = 0;
   out_2316457978183665142[46] = 0;
   out_2316457978183665142[47] = 0;
   out_2316457978183665142[48] = 0;
   out_2316457978183665142[49] = 0;
   out_2316457978183665142[50] = 0;
   out_2316457978183665142[51] = 0;
   out_2316457978183665142[52] = 0;
   out_2316457978183665142[53] = 0;
   out_2316457978183665142[54] = 0;
   out_2316457978183665142[55] = 0;
   out_2316457978183665142[56] = 0;
   out_2316457978183665142[57] = 0;
   out_2316457978183665142[58] = 0;
   out_2316457978183665142[59] = 0;
   out_2316457978183665142[60] = 0;
   out_2316457978183665142[61] = 0;
   out_2316457978183665142[62] = 1;
   out_2316457978183665142[63] = 0;
   out_2316457978183665142[64] = 0;
   out_2316457978183665142[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_861237878813259636) {
  H(in_vec, out_861237878813259636);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4278313452328263927) {
  err_fun(nom_x, delta_x, out_4278313452328263927);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1517975704244355627) {
  inv_err_fun(nom_x, true_x, out_1517975704244355627);
}
void live_H_mod_fun(double *state, double *out_3134635268669904023) {
  H_mod_fun(state, out_3134635268669904023);
}
void live_f_fun(double *state, double dt, double *out_7726404459010263191) {
  f_fun(state,  dt, out_7726404459010263191);
}
void live_F_fun(double *state, double dt, double *out_2183412921899053228) {
  F_fun(state,  dt, out_2183412921899053228);
}
void live_h_4(double *state, double *unused, double *out_5854789080321452138) {
  h_4(state, unused, out_5854789080321452138);
}
void live_H_4(double *state, double *unused, double *out_4200761083827799838) {
  H_4(state, unused, out_4200761083827799838);
}
void live_h_9(double *state, double *unused, double *out_7882603079684147993) {
  h_9(state, unused, out_7882603079684147993);
}
void live_H_9(double *state, double *unused, double *out_1311899531547720496) {
  H_9(state, unused, out_1311899531547720496);
}
void live_h_10(double *state, double *unused, double *out_8462950030647952318) {
  h_10(state, unused, out_8462950030647952318);
}
void live_H_10(double *state, double *unused, double *out_7382053139208072210) {
  H_10(state, unused, out_7382053139208072210);
}
void live_h_12(double *state, double *unused, double *out_5488776303153320254) {
  h_12(state, unused, out_5488776303153320254);
}
void live_H_12(double *state, double *unused, double *out_3579662058780206171) {
  H_12(state, unused, out_3579662058780206171);
}
void live_h_35(double *state, double *unused, double *out_4600679636111731123) {
  h_35(state, unused, out_4600679636111731123);
}
void live_H_35(double *state, double *unused, double *out_834099026455192462) {
  H_35(state, unused, out_834099026455192462);
}
void live_h_32(double *state, double *unused, double *out_5886215730470115988) {
  h_32(state, unused, out_5886215730470115988);
}
void live_H_32(double *state, double *unused, double *out_8995588426598081956) {
  H_32(state, unused, out_8995588426598081956);
}
void live_h_13(double *state, double *unused, double *out_6408479493505327035) {
  h_13(state, unused, out_6408479493505327035);
}
void live_H_13(double *state, double *unused, double *out_97393830298191399) {
  H_13(state, unused, out_97393830298191399);
}
void live_h_14(double *state, double *unused, double *out_7882603079684147993) {
  h_14(state, unused, out_7882603079684147993);
}
void live_H_14(double *state, double *unused, double *out_1311899531547720496) {
  H_14(state, unused, out_1311899531547720496);
}
void live_h_33(double *state, double *unused, double *out_8872015136137831782) {
  h_33(state, unused, out_8872015136137831782);
}
void live_H_33(double *state, double *unused, double *out_2316457978183665142) {
  H_33(state, unused, out_2316457978183665142);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
